<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1030" onload="init(evt)" viewBox="0 0 1200 1030" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1030" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1013.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1013.00"> </text><svg id="frames" x="10" width="1180" total_samples="1153"><g><title>[libc.so.6] (3 samples, 0.26%)</title><rect x="0.0000%" y="933" width="0.2602%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="3"/><text x="0.2500%" y="943.50"></text></g><g><title>[unknown] (3 samples, 0.26%)</title><rect x="0.0000%" y="917" width="0.2602%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="3"/><text x="0.2500%" y="927.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.09%)</title><rect x="0.2602%" y="933" width="0.0867%" height="15" fill="rgb(221,193,54)" fg:x="3" fg:w="1"/><text x="0.5102%" y="943.50"></text></g><g><title>writev (1 samples, 0.09%)</title><rect x="0.2602%" y="917" width="0.0867%" height="15" fill="rgb(248,212,6)" fg:x="3" fg:w="1"/><text x="0.5102%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="0.2602%" y="901" width="0.0867%" height="15" fill="rgb(208,68,35)" fg:x="3" fg:w="1"/><text x="0.5102%" y="911.50"></text></g><g><title>[[heap]] (5 samples, 0.43%)</title><rect x="0.0000%" y="949" width="0.4337%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="5"/><text x="0.2500%" y="959.50"></text></g><g><title>ioctl (1 samples, 0.09%)</title><rect x="0.3469%" y="933" width="0.0867%" height="15" fill="rgb(207,160,47)" fg:x="4" fg:w="1"/><text x="0.5969%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="0.3469%" y="917" width="0.0867%" height="15" fill="rgb(228,23,34)" fg:x="4" fg:w="1"/><text x="0.5969%" y="927.50"></text></g><g><title>[anon] (1 samples, 0.09%)</title><rect x="0.4337%" y="949" width="0.0867%" height="15" fill="rgb(218,30,26)" fg:x="5" fg:w="1"/><text x="0.6837%" y="959.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="0.4337%" y="933" width="0.0867%" height="15" fill="rgb(220,122,19)" fg:x="5" fg:w="1"/><text x="0.6837%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="0.4337%" y="917" width="0.0867%" height="15" fill="rgb(250,228,42)" fg:x="5" fg:w="1"/><text x="0.6837%" y="927.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.17%)</title><rect x="0.6938%" y="917" width="0.1735%" height="15" fill="rgb(240,193,28)" fg:x="8" fg:w="2"/><text x="0.9438%" y="927.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.17%)</title><rect x="0.6938%" y="901" width="0.1735%" height="15" fill="rgb(216,20,37)" fg:x="8" fg:w="2"/><text x="0.9438%" y="911.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.09%)</title><rect x="0.7806%" y="885" width="0.0867%" height="15" fill="rgb(206,188,39)" fg:x="9" fg:w="1"/><text x="1.0306%" y="895.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.09%)</title><rect x="0.7806%" y="869" width="0.0867%" height="15" fill="rgb(217,207,13)" fg:x="9" fg:w="1"/><text x="1.0306%" y="879.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.09%)</title><rect x="0.7806%" y="853" width="0.0867%" height="15" fill="rgb(231,73,38)" fg:x="9" fg:w="1"/><text x="1.0306%" y="863.50"></text></g><g><title>[ld-linux-x86-64.so.2] (7 samples, 0.61%)</title><rect x="0.5204%" y="933" width="0.6071%" height="15" fill="rgb(225,20,46)" fg:x="6" fg:w="7"/><text x="0.7704%" y="943.50"></text></g><g><title>[unknown] (3 samples, 0.26%)</title><rect x="0.8673%" y="917" width="0.2602%" height="15" fill="rgb(210,31,41)" fg:x="10" fg:w="3"/><text x="1.1173%" y="927.50"></text></g><g><title>[ld-linux-x86-64.so.2] (8 samples, 0.69%)</title><rect x="0.5204%" y="949" width="0.6938%" height="15" fill="rgb(221,200,47)" fg:x="6" fg:w="8"/><text x="0.7704%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="1.1275%" y="933" width="0.0867%" height="15" fill="rgb(226,26,5)" fg:x="13" fg:w="1"/><text x="1.3775%" y="943.50"></text></g><g><title>[amdvlk64.so] (1 samples, 0.09%)</title><rect x="5.0304%" y="837" width="0.0867%" height="15" fill="rgb(249,33,26)" fg:x="58" fg:w="1"/><text x="5.2804%" y="847.50"></text></g><g><title>cfree (2 samples, 0.17%)</title><rect x="5.1171%" y="837" width="0.1735%" height="15" fill="rgb(235,183,28)" fg:x="59" fg:w="2"/><text x="5.3671%" y="847.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="5.2038%" y="821" width="0.0867%" height="15" fill="rgb(221,5,38)" fg:x="60" fg:w="1"/><text x="5.4538%" y="831.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="5.8109%" y="821" width="0.0867%" height="15" fill="rgb(247,18,42)" fg:x="67" fg:w="1"/><text x="6.0609%" y="831.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="5.8109%" y="805" width="0.0867%" height="15" fill="rgb(241,131,45)" fg:x="67" fg:w="1"/><text x="6.0609%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="5.8109%" y="789" width="0.0867%" height="15" fill="rgb(249,31,29)" fg:x="67" fg:w="1"/><text x="6.0609%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="5.8109%" y="773" width="0.0867%" height="15" fill="rgb(225,111,53)" fg:x="67" fg:w="1"/><text x="6.0609%" y="783.50"></text></g><g><title>[libxcb.so.1.1.0] (2 samples, 0.17%)</title><rect x="5.8977%" y="821" width="0.1735%" height="15" fill="rgb(238,160,17)" fg:x="68" fg:w="2"/><text x="6.1477%" y="831.50"></text></g><g><title>xcb_poll_for_special_event (15 samples, 1.30%)</title><rect x="5.2905%" y="837" width="1.3010%" height="15" fill="rgb(214,148,48)" fg:x="61" fg:w="15"/><text x="5.5405%" y="847.50"></text></g><g><title>cfree (6 samples, 0.52%)</title><rect x="6.0711%" y="821" width="0.5204%" height="15" fill="rgb(232,36,49)" fg:x="70" fg:w="6"/><text x="6.3211%" y="831.50"></text></g><g><title>[libc.so.6] (4 samples, 0.35%)</title><rect x="6.2446%" y="805" width="0.3469%" height="15" fill="rgb(209,103,24)" fg:x="72" fg:w="4"/><text x="6.4946%" y="815.50"></text></g><g><title>[amdvlk64.so] (37 samples, 3.21%)</title><rect x="4.1631%" y="853" width="3.2090%" height="15" fill="rgb(229,88,8)" fg:x="48" fg:w="37"/><text x="4.4131%" y="863.50">[am..</text></g><g><title>xshmfence_query (9 samples, 0.78%)</title><rect x="6.5915%" y="837" width="0.7806%" height="15" fill="rgb(213,181,19)" fg:x="76" fg:w="9"/><text x="6.8415%" y="847.50"></text></g><g><title>[libc.so.6] (5 samples, 0.43%)</title><rect x="7.3721%" y="853" width="0.4337%" height="15" fill="rgb(254,191,54)" fg:x="85" fg:w="5"/><text x="7.6221%" y="863.50"></text></g><g><title>pthread_mutex_lock (9 samples, 0.78%)</title><rect x="7.8057%" y="853" width="0.7806%" height="15" fill="rgb(241,83,37)" fg:x="90" fg:w="9"/><text x="8.0557%" y="863.50"></text></g><g><title>pthread_rwlock_unlock (3 samples, 0.26%)</title><rect x="8.5863%" y="853" width="0.2602%" height="15" fill="rgb(233,36,39)" fg:x="99" fg:w="3"/><text x="8.8363%" y="863.50"></text></g><g><title>pthread_rwlock_wrlock (10 samples, 0.87%)</title><rect x="8.8465%" y="853" width="0.8673%" height="15" fill="rgb(226,3,54)" fg:x="102" fg:w="10"/><text x="9.0965%" y="863.50"></text></g><g><title>[libxcb.so.1.1.0] (3 samples, 0.26%)</title><rect x="9.8873%" y="837" width="0.2602%" height="15" fill="rgb(245,192,40)" fg:x="114" fg:w="3"/><text x="10.1373%" y="847.50"></text></g><g><title>[libxcb.so.1.1.0] (2 samples, 0.17%)</title><rect x="9.9740%" y="821" width="0.1735%" height="15" fill="rgb(238,167,29)" fg:x="115" fg:w="2"/><text x="10.2240%" y="831.50"></text></g><g><title>xcb_discard_reply (7 samples, 0.61%)</title><rect x="9.7138%" y="853" width="0.6071%" height="15" fill="rgb(232,182,51)" fg:x="112" fg:w="7"/><text x="9.9638%" y="863.50"></text></g><g><title>pthread_mutex_lock (2 samples, 0.17%)</title><rect x="10.1474%" y="837" width="0.1735%" height="15" fill="rgb(231,60,39)" fg:x="117" fg:w="2"/><text x="10.3974%" y="847.50"></text></g><g><title>[libc.so.6] (2 samples, 0.17%)</title><rect x="10.4944%" y="837" width="0.1735%" height="15" fill="rgb(208,69,12)" fg:x="121" fg:w="2"/><text x="10.7444%" y="847.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="11.2749%" y="773" width="0.0867%" height="15" fill="rgb(235,93,37)" fg:x="130" fg:w="1"/><text x="11.5249%" y="783.50"></text></g><g><title>__poll (5 samples, 0.43%)</title><rect x="11.2749%" y="789" width="0.4337%" height="15" fill="rgb(213,116,39)" fg:x="130" fg:w="5"/><text x="11.5249%" y="799.50"></text></g><g><title>[unknown] (4 samples, 0.35%)</title><rect x="11.3617%" y="773" width="0.3469%" height="15" fill="rgb(222,207,29)" fg:x="131" fg:w="4"/><text x="11.6117%" y="783.50"></text></g><g><title>[unknown] (3 samples, 0.26%)</title><rect x="11.4484%" y="757" width="0.2602%" height="15" fill="rgb(206,96,30)" fg:x="132" fg:w="3"/><text x="11.6984%" y="767.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="11.5351%" y="741" width="0.1735%" height="15" fill="rgb(218,138,4)" fg:x="133" fg:w="2"/><text x="11.7851%" y="751.50"></text></g><g><title>pthread_cond_signal (1 samples, 0.09%)</title><rect x="11.7086%" y="789" width="0.0867%" height="15" fill="rgb(250,191,14)" fg:x="135" fg:w="1"/><text x="11.9586%" y="799.50"></text></g><g><title>[libxcb.so.1.1.0] (12 samples, 1.04%)</title><rect x="11.1015%" y="805" width="1.0408%" height="15" fill="rgb(239,60,40)" fg:x="128" fg:w="12"/><text x="11.3515%" y="815.50"></text></g><g><title>writev (4 samples, 0.35%)</title><rect x="11.7953%" y="789" width="0.3469%" height="15" fill="rgb(206,27,48)" fg:x="136" fg:w="4"/><text x="12.0453%" y="799.50"></text></g><g><title>[unknown] (4 samples, 0.35%)</title><rect x="11.7953%" y="773" width="0.3469%" height="15" fill="rgb(225,35,8)" fg:x="136" fg:w="4"/><text x="12.0453%" y="783.50"></text></g><g><title>[unknown] (4 samples, 0.35%)</title><rect x="11.7953%" y="757" width="0.3469%" height="15" fill="rgb(250,213,24)" fg:x="136" fg:w="4"/><text x="12.0453%" y="767.50"></text></g><g><title>[unknown] (4 samples, 0.35%)</title><rect x="11.7953%" y="741" width="0.3469%" height="15" fill="rgb(247,123,22)" fg:x="136" fg:w="4"/><text x="12.0453%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="12.0555%" y="725" width="0.0867%" height="15" fill="rgb(231,138,38)" fg:x="139" fg:w="1"/><text x="12.3055%" y="735.50"></text></g><g><title>[libxcb.so.1.1.0] (19 samples, 1.65%)</title><rect x="10.6678%" y="837" width="1.6479%" height="15" fill="rgb(231,145,46)" fg:x="123" fg:w="19"/><text x="10.9178%" y="847.50"></text></g><g><title>[libxcb.so.1.1.0] (15 samples, 1.30%)</title><rect x="11.0147%" y="821" width="1.3010%" height="15" fill="rgb(251,118,11)" fg:x="127" fg:w="15"/><text x="11.2647%" y="831.50"></text></g><g><title>pthread_cond_broadcast (2 samples, 0.17%)</title><rect x="12.1422%" y="805" width="0.1735%" height="15" fill="rgb(217,147,25)" fg:x="140" fg:w="2"/><text x="12.3922%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="12.2290%" y="789" width="0.0867%" height="15" fill="rgb(247,81,37)" fg:x="141" fg:w="1"/><text x="12.4790%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="12.2290%" y="773" width="0.0867%" height="15" fill="rgb(209,12,38)" fg:x="141" fg:w="1"/><text x="12.4790%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="12.2290%" y="757" width="0.0867%" height="15" fill="rgb(227,1,9)" fg:x="141" fg:w="1"/><text x="12.4790%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="12.2290%" y="741" width="0.0867%" height="15" fill="rgb(248,47,43)" fg:x="141" fg:w="1"/><text x="12.4790%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="12.2290%" y="725" width="0.0867%" height="15" fill="rgb(221,10,30)" fg:x="141" fg:w="1"/><text x="12.4790%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="12.2290%" y="709" width="0.0867%" height="15" fill="rgb(210,229,1)" fg:x="141" fg:w="1"/><text x="12.4790%" y="719.50"></text></g><g><title>pthread_mutex_lock (1 samples, 0.09%)</title><rect x="12.3157%" y="837" width="0.0867%" height="15" fill="rgb(222,148,37)" fg:x="142" fg:w="1"/><text x="12.5657%" y="847.50"></text></g><g><title>xcb_flush (25 samples, 2.17%)</title><rect x="10.3209%" y="853" width="2.1683%" height="15" fill="rgb(234,67,33)" fg:x="119" fg:w="25"/><text x="10.5709%" y="863.50">x..</text></g><g><title>pthread_mutex_unlock (1 samples, 0.09%)</title><rect x="12.4024%" y="837" width="0.0867%" height="15" fill="rgb(247,98,35)" fg:x="143" fg:w="1"/><text x="12.6524%" y="847.50"></text></g><g><title>xcb_send_request64 (4 samples, 0.35%)</title><rect x="13.9636%" y="821" width="0.3469%" height="15" fill="rgb(247,138,52)" fg:x="161" fg:w="4"/><text x="14.2136%" y="831.50"></text></g><g><title>[libc.so.6] (4 samples, 0.35%)</title><rect x="15.3513%" y="805" width="0.3469%" height="15" fill="rgb(213,79,30)" fg:x="177" fg:w="4"/><text x="15.6013%" y="815.50"></text></g><g><title>[libX11.so.6.4.0] (10 samples, 0.87%)</title><rect x="16.1318%" y="773" width="0.8673%" height="15" fill="rgb(246,177,23)" fg:x="186" fg:w="10"/><text x="16.3818%" y="783.50"></text></g><g><title>pthread_mutex_lock (5 samples, 0.43%)</title><rect x="16.5655%" y="757" width="0.4337%" height="15" fill="rgb(230,62,27)" fg:x="191" fg:w="5"/><text x="16.8155%" y="767.50"></text></g><g><title>[libX11.so.6.4.0] (13 samples, 1.13%)</title><rect x="15.9584%" y="789" width="1.1275%" height="15" fill="rgb(216,154,8)" fg:x="184" fg:w="13"/><text x="16.2084%" y="799.50"></text></g><g><title>_XSend (1 samples, 0.09%)</title><rect x="16.9991%" y="773" width="0.0867%" height="15" fill="rgb(244,35,45)" fg:x="196" fg:w="1"/><text x="17.2491%" y="783.50"></text></g><g><title>[libc.so.6] (8 samples, 0.69%)</title><rect x="17.0859%" y="789" width="0.6938%" height="15" fill="rgb(251,115,12)" fg:x="197" fg:w="8"/><text x="17.3359%" y="799.50"></text></g><g><title>[libc.so.6] (5 samples, 0.43%)</title><rect x="17.3461%" y="773" width="0.4337%" height="15" fill="rgb(240,54,50)" fg:x="200" fg:w="5"/><text x="17.5961%" y="783.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="17.3461%" y="757" width="0.4337%" height="15" fill="rgb(233,84,52)" fg:x="200" fg:w="5"/><text x="17.5961%" y="767.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="17.3461%" y="741" width="0.4337%" height="15" fill="rgb(207,117,47)" fg:x="200" fg:w="5"/><text x="17.5961%" y="751.50"></text></g><g><title>[unknown] (4 samples, 0.35%)</title><rect x="17.4328%" y="725" width="0.3469%" height="15" fill="rgb(249,43,39)" fg:x="201" fg:w="4"/><text x="17.6828%" y="735.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="17.6062%" y="709" width="0.1735%" height="15" fill="rgb(209,38,44)" fg:x="203" fg:w="2"/><text x="17.8562%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="17.6930%" y="693" width="0.0867%" height="15" fill="rgb(236,212,23)" fg:x="204" fg:w="1"/><text x="17.9430%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="17.6930%" y="677" width="0.0867%" height="15" fill="rgb(242,79,21)" fg:x="204" fg:w="1"/><text x="17.9430%" y="687.50"></text></g><g><title>[libxcb.so.1.1.0] (26 samples, 2.25%)</title><rect x="15.6982%" y="805" width="2.2550%" height="15" fill="rgb(211,96,35)" fg:x="181" fg:w="26"/><text x="15.9482%" y="815.50">[..</text></g><g><title>pthread_cond_broadcast (2 samples, 0.17%)</title><rect x="17.7797%" y="789" width="0.1735%" height="15" fill="rgb(253,215,40)" fg:x="205" fg:w="2"/><text x="18.0297%" y="799.50"></text></g><g><title>malloc (9 samples, 0.78%)</title><rect x="17.9532%" y="805" width="0.7806%" height="15" fill="rgb(211,81,21)" fg:x="207" fg:w="9"/><text x="18.2032%" y="815.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="18.6470%" y="789" width="0.0867%" height="15" fill="rgb(208,190,38)" fg:x="215" fg:w="1"/><text x="18.8970%" y="799.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="18.6470%" y="773" width="0.0867%" height="15" fill="rgb(235,213,38)" fg:x="215" fg:w="1"/><text x="18.8970%" y="783.50"></text></g><g><title>pthread_mutex_lock (13 samples, 1.13%)</title><rect x="18.7337%" y="805" width="1.1275%" height="15" fill="rgb(237,122,38)" fg:x="216" fg:w="13"/><text x="18.9837%" y="815.50"></text></g><g><title>[libc.so.6] (4 samples, 0.35%)</title><rect x="19.5143%" y="789" width="0.3469%" height="15" fill="rgb(244,218,35)" fg:x="225" fg:w="4"/><text x="19.7643%" y="799.50"></text></g><g><title>[unknown] (3 samples, 0.26%)</title><rect x="19.6010%" y="773" width="0.2602%" height="15" fill="rgb(240,68,47)" fg:x="226" fg:w="3"/><text x="19.8510%" y="783.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="19.6878%" y="757" width="0.1735%" height="15" fill="rgb(210,16,53)" fg:x="227" fg:w="2"/><text x="19.9378%" y="767.50"></text></g><g><title>pthread_mutex_unlock (1 samples, 0.09%)</title><rect x="19.8612%" y="805" width="0.0867%" height="15" fill="rgb(235,124,12)" fg:x="229" fg:w="1"/><text x="20.1112%" y="815.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="20.1214%" y="789" width="0.0867%" height="15" fill="rgb(224,169,11)" fg:x="232" fg:w="1"/><text x="20.3714%" y="799.50"></text></g><g><title>[libxcb.so.1.1.0] (4 samples, 0.35%)</title><rect x="20.2082%" y="789" width="0.3469%" height="15" fill="rgb(250,166,2)" fg:x="233" fg:w="4"/><text x="20.4582%" y="799.50"></text></g><g><title>pthread_mutex_lock (2 samples, 0.17%)</title><rect x="20.3816%" y="773" width="0.1735%" height="15" fill="rgb(242,216,29)" fg:x="235" fg:w="2"/><text x="20.6316%" y="783.50"></text></g><g><title>[amdvlk64.so] (216 samples, 18.73%)</title><rect x="2.0815%" y="885" width="18.7337%" height="15" fill="rgb(230,116,27)" fg:x="24" fg:w="216"/><text x="2.3315%" y="895.50">[amdvlk64.so]</text></g><g><title>[amdvlk64.so] (208 samples, 18.04%)</title><rect x="2.7754%" y="869" width="18.0399%" height="15" fill="rgb(228,99,48)" fg:x="32" fg:w="208"/><text x="3.0254%" y="879.50">[amdvlk64.so]</text></g><g><title>xcb_present_pixmap_checked (96 samples, 8.33%)</title><rect x="12.4892%" y="853" width="8.3261%" height="15" fill="rgb(253,11,6)" fg:x="144" fg:w="96"/><text x="12.7392%" y="863.50">xcb_present_..</text></g><g><title>xcb_send_request (87 samples, 7.55%)</title><rect x="13.2697%" y="837" width="7.5455%" height="15" fill="rgb(247,143,39)" fg:x="153" fg:w="87"/><text x="13.5197%" y="847.50">xcb_send_r..</text></g><g><title>xcb_send_request_with_fds64 (75 samples, 6.50%)</title><rect x="14.3105%" y="821" width="6.5048%" height="15" fill="rgb(236,97,10)" fg:x="165" fg:w="75"/><text x="14.5605%" y="831.50">xcb_send_..</text></g><g><title>xcb_get_extension_data (10 samples, 0.87%)</title><rect x="19.9480%" y="805" width="0.8673%" height="15" fill="rgb(233,208,19)" fg:x="230" fg:w="10"/><text x="20.1980%" y="815.50"></text></g><g><title>pthread_mutex_lock (3 samples, 0.26%)</title><rect x="20.5551%" y="789" width="0.2602%" height="15" fill="rgb(216,164,2)" fg:x="237" fg:w="3"/><text x="20.8051%" y="799.50"></text></g><g><title>[libc.so.6] (39 samples, 3.38%)</title><rect x="23.8508%" y="853" width="3.3825%" height="15" fill="rgb(220,129,5)" fg:x="275" fg:w="39"/><text x="24.1008%" y="863.50">[li..</text></g><g><title>[unknown] (3 samples, 0.26%)</title><rect x="26.9731%" y="837" width="0.2602%" height="15" fill="rgb(242,17,10)" fg:x="311" fg:w="3"/><text x="27.2231%" y="847.50"></text></g><g><title>[libc.so.6] (82 samples, 7.11%)</title><rect x="20.8153%" y="885" width="7.1119%" height="15" fill="rgb(242,107,0)" fg:x="240" fg:w="82"/><text x="21.0653%" y="895.50">[libc.so.6]</text></g><g><title>[libc.so.6] (57 samples, 4.94%)</title><rect x="22.9835%" y="869" width="4.9436%" height="15" fill="rgb(251,28,31)" fg:x="265" fg:w="57"/><text x="23.2335%" y="879.50">[libc...</text></g><g><title>[unknown] (8 samples, 0.69%)</title><rect x="27.2333%" y="853" width="0.6938%" height="15" fill="rgb(233,223,10)" fg:x="314" fg:w="8"/><text x="27.4833%" y="863.50"></text></g><g><title>[unknown] (7 samples, 0.61%)</title><rect x="27.3200%" y="837" width="0.6071%" height="15" fill="rgb(215,21,27)" fg:x="315" fg:w="7"/><text x="27.5700%" y="847.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="27.4935%" y="821" width="0.4337%" height="15" fill="rgb(232,23,21)" fg:x="317" fg:w="5"/><text x="27.7435%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="27.8404%" y="805" width="0.0867%" height="15" fill="rgb(244,5,23)" fg:x="321" fg:w="1"/><text x="28.0904%" y="815.50"></text></g><g><title>clock_gettime (10 samples, 0.87%)</title><rect x="27.9271%" y="885" width="0.8673%" height="15" fill="rgb(226,81,46)" fg:x="322" fg:w="10"/><text x="28.1771%" y="895.50"></text></g><g><title>__vdso_clock_gettime (6 samples, 0.52%)</title><rect x="28.2741%" y="869" width="0.5204%" height="15" fill="rgb(247,70,30)" fg:x="326" fg:w="6"/><text x="28.5241%" y="879.50"></text></g><g><title>pthread_mutex_lock (11 samples, 0.95%)</title><rect x="28.7944%" y="885" width="0.9540%" height="15" fill="rgb(212,68,19)" fg:x="332" fg:w="11"/><text x="29.0444%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="29.6618%" y="869" width="0.0867%" height="15" fill="rgb(240,187,13)" fg:x="342" fg:w="1"/><text x="29.9118%" y="879.50"></text></g><g><title>pthread_mutex_unlock (1 samples, 0.09%)</title><rect x="29.7485%" y="885" width="0.0867%" height="15" fill="rgb(223,113,26)" fg:x="343" fg:w="1"/><text x="29.9985%" y="895.50"></text></g><g><title>[amdvlk64.so] (334 samples, 28.97%)</title><rect x="1.2142%" y="917" width="28.9679%" height="15" fill="rgb(206,192,2)" fg:x="14" fg:w="334"/><text x="1.4642%" y="927.50">[amdvlk64.so]</text></g><g><title>[amdvlk64.so] (334 samples, 28.97%)</title><rect x="1.2142%" y="901" width="28.9679%" height="15" fill="rgb(241,108,4)" fg:x="14" fg:w="334"/><text x="1.4642%" y="911.50">[amdvlk64.so]</text></g><g><title>sem_wait (4 samples, 0.35%)</title><rect x="29.8352%" y="885" width="0.3469%" height="15" fill="rgb(247,173,49)" fg:x="344" fg:w="4"/><text x="30.0852%" y="895.50"></text></g><g><title>pthread_testcancel (2 samples, 0.17%)</title><rect x="30.0087%" y="869" width="0.1735%" height="15" fill="rgb(224,114,35)" fg:x="346" fg:w="2"/><text x="30.2587%" y="879.50"></text></g><g><title>__ctype_init (4 samples, 0.35%)</title><rect x="30.1821%" y="917" width="0.3469%" height="15" fill="rgb(245,159,27)" fg:x="348" fg:w="4"/><text x="30.4321%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="30.4423%" y="901" width="0.0867%" height="15" fill="rgb(245,172,44)" fg:x="351" fg:w="1"/><text x="30.6923%" y="911.50"></text></g><g><title>[libc.so.6] (339 samples, 29.40%)</title><rect x="1.2142%" y="949" width="29.4016%" height="15" fill="rgb(236,23,11)" fg:x="14" fg:w="339"/><text x="1.4642%" y="959.50">[libc.so.6]</text></g><g><title>[libc.so.6] (339 samples, 29.40%)</title><rect x="1.2142%" y="933" width="29.4016%" height="15" fill="rgb(205,117,38)" fg:x="14" fg:w="339"/><text x="1.4642%" y="943.50">[libc.so.6]</text></g><g><title>__sigsetjmp (1 samples, 0.09%)</title><rect x="30.5291%" y="917" width="0.0867%" height="15" fill="rgb(237,72,25)" fg:x="352" fg:w="1"/><text x="30.7791%" y="927.50"></text></g><g><title>[amdvlk64.so] (6 samples, 0.52%)</title><rect x="31.2229%" y="757" width="0.5204%" height="15" fill="rgb(244,70,9)" fg:x="360" fg:w="6"/><text x="31.4729%" y="767.50"></text></g><g><title>[amdvlk64.so] (2 samples, 0.17%)</title><rect x="31.5698%" y="741" width="0.1735%" height="15" fill="rgb(217,125,39)" fg:x="364" fg:w="2"/><text x="31.8198%" y="751.50"></text></g><g><title>pthread_rwlock_rdlock (1 samples, 0.09%)</title><rect x="31.6565%" y="725" width="0.0867%" height="15" fill="rgb(235,36,10)" fg:x="365" fg:w="1"/><text x="31.9065%" y="735.50"></text></g><g><title>[amdvlk64.so] (9 samples, 0.78%)</title><rect x="31.0494%" y="773" width="0.7806%" height="15" fill="rgb(251,123,47)" fg:x="358" fg:w="9"/><text x="31.2994%" y="783.50"></text></g><g><title>posix_memalign (1 samples, 0.09%)</title><rect x="31.7433%" y="757" width="0.0867%" height="15" fill="rgb(221,13,13)" fg:x="366" fg:w="1"/><text x="31.9933%" y="767.50"></text></g><g><title>malloc (1 samples, 0.09%)</title><rect x="31.7433%" y="741" width="0.0867%" height="15" fill="rgb(238,131,9)" fg:x="366" fg:w="1"/><text x="31.9933%" y="751.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="31.7433%" y="725" width="0.0867%" height="15" fill="rgb(211,50,8)" fg:x="366" fg:w="1"/><text x="31.9933%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="31.7433%" y="709" width="0.0867%" height="15" fill="rgb(245,182,24)" fg:x="366" fg:w="1"/><text x="31.9933%" y="719.50"></text></g><g><title>[amdvlk64.so] (13 samples, 1.13%)</title><rect x="30.7892%" y="789" width="1.1275%" height="15" fill="rgb(242,14,37)" fg:x="355" fg:w="13"/><text x="31.0392%" y="799.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="31.8300%" y="773" width="0.0867%" height="15" fill="rgb(246,228,12)" fg:x="367" fg:w="1"/><text x="32.0800%" y="783.50"></text></g><g><title>[amdvlk64.so] (14 samples, 1.21%)</title><rect x="30.7892%" y="837" width="1.2142%" height="15" fill="rgb(213,55,15)" fg:x="355" fg:w="14"/><text x="31.0392%" y="847.50"></text></g><g><title>[amdvlk64.so] (14 samples, 1.21%)</title><rect x="30.7892%" y="821" width="1.2142%" height="15" fill="rgb(209,9,3)" fg:x="355" fg:w="14"/><text x="31.0392%" y="831.50"></text></g><g><title>[amdvlk64.so] (14 samples, 1.21%)</title><rect x="30.7892%" y="805" width="1.2142%" height="15" fill="rgb(230,59,30)" fg:x="355" fg:w="14"/><text x="31.0392%" y="815.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="31.9167%" y="789" width="0.0867%" height="15" fill="rgb(209,121,21)" fg:x="368" fg:w="1"/><text x="32.1667%" y="799.50"></text></g><g><title>[amdvlk64.so] (16 samples, 1.39%)</title><rect x="30.7892%" y="869" width="1.3877%" height="15" fill="rgb(220,109,13)" fg:x="355" fg:w="16"/><text x="31.0392%" y="879.50"></text></g><g><title>[amdvlk64.so] (16 samples, 1.39%)</title><rect x="30.7892%" y="853" width="1.3877%" height="15" fill="rgb(232,18,1)" fg:x="355" fg:w="16"/><text x="31.0392%" y="863.50"></text></g><g><title>[libc.so.6] (2 samples, 0.17%)</title><rect x="32.0035%" y="837" width="0.1735%" height="15" fill="rgb(215,41,42)" fg:x="369" fg:w="2"/><text x="32.2535%" y="847.50"></text></g><g><title>[amdvlk64.so] (1 samples, 0.09%)</title><rect x="32.0902%" y="821" width="0.0867%" height="15" fill="rgb(224,123,36)" fg:x="370" fg:w="1"/><text x="32.3402%" y="831.50"></text></g><g><title>[amdvlk64.so] (1 samples, 0.09%)</title><rect x="32.0902%" y="805" width="0.0867%" height="15" fill="rgb(240,125,3)" fg:x="370" fg:w="1"/><text x="32.3402%" y="815.50"></text></g><g><title>dlopen (1 samples, 0.09%)</title><rect x="32.1769%" y="869" width="0.0867%" height="15" fill="rgb(205,98,50)" fg:x="371" fg:w="1"/><text x="32.4269%" y="879.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="32.1769%" y="853" width="0.0867%" height="15" fill="rgb(205,185,37)" fg:x="371" fg:w="1"/><text x="32.4269%" y="863.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.09%)</title><rect x="32.1769%" y="837" width="0.0867%" height="15" fill="rgb(238,207,15)" fg:x="371" fg:w="1"/><text x="32.4269%" y="847.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.09%)</title><rect x="32.1769%" y="821" width="0.0867%" height="15" fill="rgb(213,199,42)" fg:x="371" fg:w="1"/><text x="32.4269%" y="831.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="32.1769%" y="805" width="0.0867%" height="15" fill="rgb(235,201,11)" fg:x="371" fg:w="1"/><text x="32.4269%" y="815.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.09%)</title><rect x="32.1769%" y="789" width="0.0867%" height="15" fill="rgb(207,46,11)" fg:x="371" fg:w="1"/><text x="32.4269%" y="799.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.09%)</title><rect x="32.1769%" y="773" width="0.0867%" height="15" fill="rgb(241,35,35)" fg:x="371" fg:w="1"/><text x="32.4269%" y="783.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.09%)</title><rect x="32.1769%" y="757" width="0.0867%" height="15" fill="rgb(243,32,47)" fg:x="371" fg:w="1"/><text x="32.4269%" y="767.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.09%)</title><rect x="32.1769%" y="741" width="0.0867%" height="15" fill="rgb(247,202,23)" fg:x="371" fg:w="1"/><text x="32.4269%" y="751.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.09%)</title><rect x="32.1769%" y="725" width="0.0867%" height="15" fill="rgb(219,102,11)" fg:x="371" fg:w="1"/><text x="32.4269%" y="735.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.09%)</title><rect x="32.1769%" y="709" width="0.0867%" height="15" fill="rgb(243,110,44)" fg:x="371" fg:w="1"/><text x="32.4269%" y="719.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.09%)</title><rect x="32.1769%" y="693" width="0.0867%" height="15" fill="rgb(222,74,54)" fg:x="371" fg:w="1"/><text x="32.4269%" y="703.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.09%)</title><rect x="32.1769%" y="677" width="0.0867%" height="15" fill="rgb(216,99,12)" fg:x="371" fg:w="1"/><text x="32.4269%" y="687.50"></text></g><g><title>[amdvlk64.so] (19 samples, 1.65%)</title><rect x="30.7025%" y="885" width="1.6479%" height="15" fill="rgb(226,22,26)" fg:x="354" fg:w="19"/><text x="30.9525%" y="895.50"></text></g><g><title>fstatat64 (1 samples, 0.09%)</title><rect x="32.2637%" y="869" width="0.0867%" height="15" fill="rgb(217,163,10)" fg:x="372" fg:w="1"/><text x="32.5137%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="32.2637%" y="853" width="0.0867%" height="15" fill="rgb(213,25,53)" fg:x="372" fg:w="1"/><text x="32.5137%" y="863.50"></text></g><g><title>dlopen (1 samples, 0.09%)</title><rect x="32.3504%" y="885" width="0.0867%" height="15" fill="rgb(252,105,26)" fg:x="373" fg:w="1"/><text x="32.6004%" y="895.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="32.3504%" y="869" width="0.0867%" height="15" fill="rgb(220,39,43)" fg:x="373" fg:w="1"/><text x="32.6004%" y="879.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.09%)</title><rect x="32.3504%" y="853" width="0.0867%" height="15" fill="rgb(229,68,48)" fg:x="373" fg:w="1"/><text x="32.6004%" y="863.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.09%)</title><rect x="32.3504%" y="837" width="0.0867%" height="15" fill="rgb(252,8,32)" fg:x="373" fg:w="1"/><text x="32.6004%" y="847.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="32.3504%" y="821" width="0.0867%" height="15" fill="rgb(223,20,43)" fg:x="373" fg:w="1"/><text x="32.6004%" y="831.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.09%)</title><rect x="32.3504%" y="805" width="0.0867%" height="15" fill="rgb(229,81,49)" fg:x="373" fg:w="1"/><text x="32.6004%" y="815.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.09%)</title><rect x="32.3504%" y="789" width="0.0867%" height="15" fill="rgb(236,28,36)" fg:x="373" fg:w="1"/><text x="32.6004%" y="799.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.09%)</title><rect x="32.3504%" y="773" width="0.0867%" height="15" fill="rgb(249,185,26)" fg:x="373" fg:w="1"/><text x="32.6004%" y="783.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.09%)</title><rect x="32.3504%" y="757" width="0.0867%" height="15" fill="rgb(249,174,33)" fg:x="373" fg:w="1"/><text x="32.6004%" y="767.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.09%)</title><rect x="32.3504%" y="741" width="0.0867%" height="15" fill="rgb(233,201,37)" fg:x="373" fg:w="1"/><text x="32.6004%" y="751.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.09%)</title><rect x="32.3504%" y="725" width="0.0867%" height="15" fill="rgb(221,78,26)" fg:x="373" fg:w="1"/><text x="32.6004%" y="735.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.09%)</title><rect x="32.3504%" y="709" width="0.0867%" height="15" fill="rgb(250,127,30)" fg:x="373" fg:w="1"/><text x="32.6004%" y="719.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.09%)</title><rect x="32.3504%" y="693" width="0.0867%" height="15" fill="rgb(230,49,44)" fg:x="373" fg:w="1"/><text x="32.6004%" y="703.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.09%)</title><rect x="32.3504%" y="677" width="0.0867%" height="15" fill="rgb(229,67,23)" fg:x="373" fg:w="1"/><text x="32.6004%" y="687.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.09%)</title><rect x="32.3504%" y="661" width="0.0867%" height="15" fill="rgb(249,83,47)" fg:x="373" fg:w="1"/><text x="32.6004%" y="671.50"></text></g><g><title>[libc.so.6] (4 samples, 0.35%)</title><rect x="32.5239%" y="773" width="0.3469%" height="15" fill="rgb(215,43,3)" fg:x="375" fg:w="4"/><text x="32.7739%" y="783.50"></text></g><g><title>[libc.so.6] (4 samples, 0.35%)</title><rect x="32.5239%" y="757" width="0.3469%" height="15" fill="rgb(238,154,13)" fg:x="375" fg:w="4"/><text x="32.7739%" y="767.50"></text></g><g><title>[libc.so.6] (4 samples, 0.35%)</title><rect x="32.5239%" y="741" width="0.3469%" height="15" fill="rgb(219,56,2)" fg:x="375" fg:w="4"/><text x="32.7739%" y="751.50"></text></g><g><title>[amdvlk64.so] (26 samples, 2.25%)</title><rect x="30.7025%" y="933" width="2.2550%" height="15" fill="rgb(233,0,4)" fg:x="354" fg:w="26"/><text x="30.9525%" y="943.50">[..</text></g><g><title>[amdvlk64.so] (26 samples, 2.25%)</title><rect x="30.7025%" y="917" width="2.2550%" height="15" fill="rgb(235,30,7)" fg:x="354" fg:w="26"/><text x="30.9525%" y="927.50">[..</text></g><g><title>[amdvlk64.so] (26 samples, 2.25%)</title><rect x="30.7025%" y="901" width="2.2550%" height="15" fill="rgb(250,79,13)" fg:x="354" fg:w="26"/><text x="30.9525%" y="911.50">[..</text></g><g><title>mbstowcs (6 samples, 0.52%)</title><rect x="32.4371%" y="885" width="0.5204%" height="15" fill="rgb(211,146,34)" fg:x="374" fg:w="6"/><text x="32.6871%" y="895.50"></text></g><g><title>[libc.so.6] (6 samples, 0.52%)</title><rect x="32.4371%" y="869" width="0.5204%" height="15" fill="rgb(228,22,38)" fg:x="374" fg:w="6"/><text x="32.6871%" y="879.50"></text></g><g><title>[libc.so.6] (6 samples, 0.52%)</title><rect x="32.4371%" y="853" width="0.5204%" height="15" fill="rgb(235,168,5)" fg:x="374" fg:w="6"/><text x="32.6871%" y="863.50"></text></g><g><title>[libc.so.6] (6 samples, 0.52%)</title><rect x="32.4371%" y="837" width="0.5204%" height="15" fill="rgb(221,155,16)" fg:x="374" fg:w="6"/><text x="32.6871%" y="847.50"></text></g><g><title>[libc.so.6] (6 samples, 0.52%)</title><rect x="32.4371%" y="821" width="0.5204%" height="15" fill="rgb(215,215,53)" fg:x="374" fg:w="6"/><text x="32.6871%" y="831.50"></text></g><g><title>[libc.so.6] (6 samples, 0.52%)</title><rect x="32.4371%" y="805" width="0.5204%" height="15" fill="rgb(223,4,10)" fg:x="374" fg:w="6"/><text x="32.6871%" y="815.50"></text></g><g><title>[libc.so.6] (6 samples, 0.52%)</title><rect x="32.4371%" y="789" width="0.5204%" height="15" fill="rgb(234,103,6)" fg:x="374" fg:w="6"/><text x="32.6871%" y="799.50"></text></g><g><title>__getdelim (1 samples, 0.09%)</title><rect x="32.8708%" y="773" width="0.0867%" height="15" fill="rgb(227,97,0)" fg:x="379" fg:w="1"/><text x="33.1208%" y="783.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="32.9575%" y="933" width="0.0867%" height="15" fill="rgb(234,150,53)" fg:x="380" fg:w="1"/><text x="33.2075%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="32.9575%" y="917" width="0.0867%" height="15" fill="rgb(228,201,54)" fg:x="380" fg:w="1"/><text x="33.2075%" y="927.50"></text></g><g><title>[libdrm.so.2.4.0] (1 samples, 0.09%)</title><rect x="33.0442%" y="933" width="0.0867%" height="15" fill="rgb(222,22,37)" fg:x="381" fg:w="1"/><text x="33.2942%" y="943.50"></text></g><g><title>[libdrm.so.2.4.0] (1 samples, 0.09%)</title><rect x="33.0442%" y="917" width="0.0867%" height="15" fill="rgb(237,53,32)" fg:x="381" fg:w="1"/><text x="33.2942%" y="927.50"></text></g><g><title>__getdelim (1 samples, 0.09%)</title><rect x="33.0442%" y="901" width="0.0867%" height="15" fill="rgb(233,25,53)" fg:x="381" fg:w="1"/><text x="33.2942%" y="911.50"></text></g><g><title>[libvulkan.so.1.3.251] (1 samples, 0.09%)</title><rect x="33.1310%" y="917" width="0.0867%" height="15" fill="rgb(210,40,34)" fg:x="382" fg:w="1"/><text x="33.3810%" y="927.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="33.1310%" y="901" width="0.0867%" height="15" fill="rgb(241,220,44)" fg:x="382" fg:w="1"/><text x="33.3810%" y="911.50"></text></g><g><title>[libvulkan.so.1.3.251] (2 samples, 0.17%)</title><rect x="33.1310%" y="933" width="0.1735%" height="15" fill="rgb(235,28,35)" fg:x="382" fg:w="2"/><text x="33.3810%" y="943.50"></text></g><g><title>malloc (1 samples, 0.09%)</title><rect x="33.2177%" y="917" width="0.0867%" height="15" fill="rgb(210,56,17)" fg:x="383" fg:w="1"/><text x="33.4677%" y="927.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="33.2177%" y="901" width="0.0867%" height="15" fill="rgb(224,130,29)" fg:x="383" fg:w="1"/><text x="33.4677%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="33.2177%" y="885" width="0.0867%" height="15" fill="rgb(235,212,8)" fg:x="383" fg:w="1"/><text x="33.4677%" y="895.50"></text></g><g><title>XSupportsLocale (1 samples, 0.09%)</title><rect x="33.3044%" y="837" width="0.0867%" height="15" fill="rgb(223,33,50)" fg:x="384" fg:w="1"/><text x="33.5544%" y="847.50"></text></g><g><title>_XOpenLC (1 samples, 0.09%)</title><rect x="33.3044%" y="821" width="0.0867%" height="15" fill="rgb(219,149,13)" fg:x="384" fg:w="1"/><text x="33.5544%" y="831.50"></text></g><g><title>_XlcUtf8Loader (1 samples, 0.09%)</title><rect x="33.3044%" y="805" width="0.0867%" height="15" fill="rgb(250,156,29)" fg:x="384" fg:w="1"/><text x="33.5544%" y="815.50"></text></g><g><title>_XlcCreateLC (1 samples, 0.09%)</title><rect x="33.3044%" y="789" width="0.0867%" height="15" fill="rgb(216,193,19)" fg:x="384" fg:w="1"/><text x="33.5544%" y="799.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.09%)</title><rect x="33.3044%" y="773" width="0.0867%" height="15" fill="rgb(216,135,14)" fg:x="384" fg:w="1"/><text x="33.5544%" y="783.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.09%)</title><rect x="33.3044%" y="757" width="0.0867%" height="15" fill="rgb(241,47,5)" fg:x="384" fg:w="1"/><text x="33.5544%" y="767.50"></text></g><g><title>_XlcResolveLocaleName (1 samples, 0.09%)</title><rect x="33.3044%" y="741" width="0.0867%" height="15" fill="rgb(233,42,35)" fg:x="384" fg:w="1"/><text x="33.5544%" y="751.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.09%)</title><rect x="33.3044%" y="725" width="0.0867%" height="15" fill="rgb(231,13,6)" fg:x="384" fg:w="1"/><text x="33.5544%" y="735.50"></text></g><g><title>XStringToKeysym (1 samples, 0.09%)</title><rect x="34.0850%" y="725" width="0.0867%" height="15" fill="rgb(207,181,40)" fg:x="393" fg:w="1"/><text x="34.3350%" y="735.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="34.0850%" y="709" width="0.0867%" height="15" fill="rgb(254,173,49)" fg:x="393" fg:w="1"/><text x="34.3350%" y="719.50"></text></g><g><title>[libX11.so.6.4.0] (7 samples, 0.61%)</title><rect x="34.1717%" y="725" width="0.6071%" height="15" fill="rgb(221,1,38)" fg:x="394" fg:w="7"/><text x="34.4217%" y="735.50"></text></g><g><title>[libX11.so.6.4.0] (6 samples, 0.52%)</title><rect x="34.2585%" y="709" width="0.5204%" height="15" fill="rgb(206,124,46)" fg:x="395" fg:w="6"/><text x="34.5085%" y="719.50"></text></g><g><title>_IO_getc (5 samples, 0.43%)</title><rect x="34.3452%" y="693" width="0.4337%" height="15" fill="rgb(249,21,11)" fg:x="396" fg:w="5"/><text x="34.5952%" y="703.50"></text></g><g><title>_Xlcmbstoutf8 (1 samples, 0.09%)</title><rect x="34.7788%" y="725" width="0.0867%" height="15" fill="rgb(222,201,40)" fg:x="401" fg:w="1"/><text x="35.0288%" y="735.50"></text></g><g><title>_XlcOpenConverter (1 samples, 0.09%)</title><rect x="34.7788%" y="709" width="0.0867%" height="15" fill="rgb(235,61,29)" fg:x="401" fg:w="1"/><text x="35.0288%" y="719.50"></text></g><g><title>XrmStringToQuark (1 samples, 0.09%)</title><rect x="34.7788%" y="693" width="0.0867%" height="15" fill="rgb(219,207,3)" fg:x="401" fg:w="1"/><text x="35.0288%" y="703.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="34.9523%" y="693" width="0.0867%" height="15" fill="rgb(222,56,46)" fg:x="403" fg:w="1"/><text x="35.2023%" y="703.50"></text></g><g><title>aetheria::create_window (21 samples, 1.82%)</title><rect x="33.3044%" y="933" width="1.8213%" height="15" fill="rgb(239,76,54)" fg:x="384" fg:w="21"/><text x="33.5544%" y="943.50">a..</text></g><g><title>winit::event_loop::EventLoop&lt;()&gt;::new (21 samples, 1.82%)</title><rect x="33.3044%" y="917" width="1.8213%" height="15" fill="rgb(231,124,27)" fg:x="384" fg:w="21"/><text x="33.5544%" y="927.50">w..</text></g><g><title>winit::event_loop::EventLoopBuilder&lt;T&gt;::build (21 samples, 1.82%)</title><rect x="33.3044%" y="901" width="1.8213%" height="15" fill="rgb(249,195,6)" fg:x="384" fg:w="21"/><text x="33.5544%" y="911.50">w..</text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::new (21 samples, 1.82%)</title><rect x="33.3044%" y="885" width="1.8213%" height="15" fill="rgb(237,174,47)" fg:x="384" fg:w="21"/><text x="33.5544%" y="895.50">w..</text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::new_x11_any_thread (21 samples, 1.82%)</title><rect x="33.3044%" y="869" width="1.8213%" height="15" fill="rgb(206,201,31)" fg:x="384" fg:w="21"/><text x="33.5544%" y="879.50">w..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::new (21 samples, 1.82%)</title><rect x="33.3044%" y="853" width="1.8213%" height="15" fill="rgb(231,57,52)" fg:x="384" fg:w="21"/><text x="33.5544%" y="863.50">w..</text></g><g><title>winit::platform_impl::platform::x11::ime::Ime::new (20 samples, 1.73%)</title><rect x="33.3912%" y="837" width="1.7346%" height="15" fill="rgb(248,177,22)" fg:x="385" fg:w="20"/><text x="33.6412%" y="847.50"></text></g><g><title>winit::platform_impl::platform::x11::ime::input_method::PotentialInputMethods::open_im (20 samples, 1.73%)</title><rect x="33.3912%" y="821" width="1.7346%" height="15" fill="rgb(215,211,37)" fg:x="385" fg:w="20"/><text x="33.6412%" y="831.50"></text></g><g><title>winit::platform_impl::platform::x11::ime::input_method::PotentialInputMethod::open_im (20 samples, 1.73%)</title><rect x="33.3912%" y="805" width="1.7346%" height="15" fill="rgb(241,128,51)" fg:x="385" fg:w="20"/><text x="33.6412%" y="815.50"></text></g><g><title>winit::platform_impl::platform::x11::ime::input_method::open_im (20 samples, 1.73%)</title><rect x="33.3912%" y="789" width="1.7346%" height="15" fill="rgb(227,165,31)" fg:x="385" fg:w="20"/><text x="33.6412%" y="799.50"></text></g><g><title>_XimOpenIM (20 samples, 1.73%)</title><rect x="33.3912%" y="773" width="1.7346%" height="15" fill="rgb(228,167,24)" fg:x="385" fg:w="20"/><text x="33.6412%" y="783.50"></text></g><g><title>_XimLocalOpenIM (20 samples, 1.73%)</title><rect x="33.3912%" y="757" width="1.7346%" height="15" fill="rgb(228,143,12)" fg:x="385" fg:w="20"/><text x="33.6412%" y="767.50"></text></g><g><title>[libX11.so.6.4.0] (20 samples, 1.73%)</title><rect x="33.3912%" y="741" width="1.7346%" height="15" fill="rgb(249,149,8)" fg:x="385" fg:w="20"/><text x="33.6412%" y="751.50"></text></g><g><title>_Xlcmbstowcs (3 samples, 0.26%)</title><rect x="34.8656%" y="725" width="0.2602%" height="15" fill="rgb(243,35,44)" fg:x="402" fg:w="3"/><text x="35.1156%" y="735.50"></text></g><g><title>_XOpenLC (2 samples, 0.17%)</title><rect x="34.9523%" y="709" width="0.1735%" height="15" fill="rgb(246,89,9)" fg:x="403" fg:w="2"/><text x="35.2023%" y="719.50"></text></g><g><title>_XlcMapOSLocaleName (1 samples, 0.09%)</title><rect x="35.0390%" y="693" width="0.0867%" height="15" fill="rgb(233,213,13)" fg:x="404" fg:w="1"/><text x="35.2890%" y="703.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="35.0390%" y="677" width="0.0867%" height="15" fill="rgb(233,141,41)" fg:x="404" fg:w="1"/><text x="35.2890%" y="687.50"></text></g><g><title>aetheria::create_window (1 samples, 0.09%)</title><rect x="35.1258%" y="917" width="0.0867%" height="15" fill="rgb(239,167,4)" fg:x="405" fg:w="1"/><text x="35.3758%" y="927.50"></text></g><g><title>winit::event_loop::EventLoop&lt;()&gt;::new (1 samples, 0.09%)</title><rect x="35.1258%" y="901" width="0.0867%" height="15" fill="rgb(209,217,16)" fg:x="405" fg:w="1"/><text x="35.3758%" y="911.50"></text></g><g><title>winit::event_loop::EventLoopBuilder&lt;T&gt;::build (1 samples, 0.09%)</title><rect x="35.1258%" y="885" width="0.0867%" height="15" fill="rgb(219,88,35)" fg:x="405" fg:w="1"/><text x="35.3758%" y="895.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::new (1 samples, 0.09%)</title><rect x="35.1258%" y="869" width="0.0867%" height="15" fill="rgb(220,193,23)" fg:x="405" fg:w="1"/><text x="35.3758%" y="879.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::new_x11_any_thread (1 samples, 0.09%)</title><rect x="35.1258%" y="853" width="0.0867%" height="15" fill="rgb(230,90,52)" fg:x="405" fg:w="1"/><text x="35.3758%" y="863.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::new (1 samples, 0.09%)</title><rect x="35.1258%" y="837" width="0.0867%" height="15" fill="rgb(252,106,19)" fg:x="405" fg:w="1"/><text x="35.3758%" y="847.50"></text></g><g><title>winit::platform_impl::platform::x11::ime::Ime::new (1 samples, 0.09%)</title><rect x="35.1258%" y="821" width="0.0867%" height="15" fill="rgb(206,74,20)" fg:x="405" fg:w="1"/><text x="35.3758%" y="831.50"></text></g><g><title>winit::platform_impl::platform::x11::ime::input_method::PotentialInputMethods::open_im (1 samples, 0.09%)</title><rect x="35.1258%" y="805" width="0.0867%" height="15" fill="rgb(230,138,44)" fg:x="405" fg:w="1"/><text x="35.3758%" y="815.50"></text></g><g><title>winit::platform_impl::platform::x11::ime::input_method::PotentialInputMethod::open_im (1 samples, 0.09%)</title><rect x="35.1258%" y="789" width="0.0867%" height="15" fill="rgb(235,182,43)" fg:x="405" fg:w="1"/><text x="35.3758%" y="799.50"></text></g><g><title>winit::platform_impl::platform::x11::ime::input_method::open_im (1 samples, 0.09%)</title><rect x="35.1258%" y="773" width="0.0867%" height="15" fill="rgb(242,16,51)" fg:x="405" fg:w="1"/><text x="35.3758%" y="783.50"></text></g><g><title>_XimOpenIM (1 samples, 0.09%)</title><rect x="35.1258%" y="757" width="0.0867%" height="15" fill="rgb(248,9,4)" fg:x="405" fg:w="1"/><text x="35.3758%" y="767.50"></text></g><g><title>_XimLocalOpenIM (1 samples, 0.09%)</title><rect x="35.1258%" y="741" width="0.0867%" height="15" fill="rgb(210,31,22)" fg:x="405" fg:w="1"/><text x="35.3758%" y="751.50"></text></g><g><title>_XlcFileName (1 samples, 0.09%)</title><rect x="35.1258%" y="725" width="0.0867%" height="15" fill="rgb(239,54,39)" fg:x="405" fg:w="1"/><text x="35.3758%" y="735.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.09%)</title><rect x="35.1258%" y="709" width="0.0867%" height="15" fill="rgb(230,99,41)" fg:x="405" fg:w="1"/><text x="35.3758%" y="719.50"></text></g><g><title>[libvulkan.so.1.3.251] (1 samples, 0.09%)</title><rect x="35.2125%" y="853" width="0.0867%" height="15" fill="rgb(253,106,12)" fg:x="406" fg:w="1"/><text x="35.4625%" y="863.50"></text></g><g><title>[amdvlk64.so] (1 samples, 0.09%)</title><rect x="35.2125%" y="837" width="0.0867%" height="15" fill="rgb(213,46,41)" fg:x="406" fg:w="1"/><text x="35.4625%" y="847.50"></text></g><g><title>[libvulkan.so.1.3.251] (1 samples, 0.09%)</title><rect x="35.2125%" y="821" width="0.0867%" height="15" fill="rgb(215,133,35)" fg:x="406" fg:w="1"/><text x="35.4625%" y="831.50"></text></g><g><title>[amdvlk64.so] (1 samples, 0.09%)</title><rect x="35.2125%" y="805" width="0.0867%" height="15" fill="rgb(213,28,5)" fg:x="406" fg:w="1"/><text x="35.4625%" y="815.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="35.2125%" y="789" width="0.0867%" height="15" fill="rgb(215,77,49)" fg:x="406" fg:w="1"/><text x="35.4625%" y="799.50"></text></g><g><title>vulkan::instance::Instance::new (2 samples, 0.17%)</title><rect x="35.2125%" y="901" width="0.1735%" height="15" fill="rgb(248,100,22)" fg:x="406" fg:w="2"/><text x="35.4625%" y="911.50"></text></g><g><title>ash::entry::Entry::create_instance (2 samples, 0.17%)</title><rect x="35.2125%" y="885" width="0.1735%" height="15" fill="rgb(208,67,9)" fg:x="406" fg:w="2"/><text x="35.4625%" y="895.50"></text></g><g><title>vkCreateInstance (2 samples, 0.17%)</title><rect x="35.2125%" y="869" width="0.1735%" height="15" fill="rgb(219,133,21)" fg:x="406" fg:w="2"/><text x="35.4625%" y="879.50"></text></g><g><title>vk_icdGetInstanceProcAddrSG (1 samples, 0.09%)</title><rect x="35.2992%" y="853" width="0.0867%" height="15" fill="rgb(246,46,29)" fg:x="407" fg:w="1"/><text x="35.5492%" y="863.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="35.2992%" y="837" width="0.0867%" height="15" fill="rgb(246,185,52)" fg:x="407" fg:w="1"/><text x="35.5492%" y="847.50"></text></g><g><title>vulkan::context::Context::new (3 samples, 0.26%)</title><rect x="35.2125%" y="917" width="0.2602%" height="15" fill="rgb(252,136,11)" fg:x="406" fg:w="3"/><text x="35.4625%" y="927.50"></text></g><g><title>vulkan::swapchain::Swapchain::new (1 samples, 0.09%)</title><rect x="35.3859%" y="901" width="0.0867%" height="15" fill="rgb(219,138,53)" fg:x="408" fg:w="1"/><text x="35.6359%" y="911.50"></text></g><g><title>ash::extensions::khr::surface::Surface::get_physical_device_surface_capabilities (1 samples, 0.09%)</title><rect x="35.3859%" y="885" width="0.0867%" height="15" fill="rgb(211,51,23)" fg:x="408" fg:w="1"/><text x="35.6359%" y="895.50"></text></g><g><title>[amdvlk64.so] (1 samples, 0.09%)</title><rect x="35.3859%" y="869" width="0.0867%" height="15" fill="rgb(247,221,28)" fg:x="408" fg:w="1"/><text x="35.6359%" y="879.50"></text></g><g><title>[amdvlk64.so] (1 samples, 0.09%)</title><rect x="35.3859%" y="853" width="0.0867%" height="15" fill="rgb(251,222,45)" fg:x="408" fg:w="1"/><text x="35.6359%" y="863.50"></text></g><g><title>[amdvlk64.so] (1 samples, 0.09%)</title><rect x="35.3859%" y="837" width="0.0867%" height="15" fill="rgb(217,162,53)" fg:x="408" fg:w="1"/><text x="35.6359%" y="847.50"></text></g><g><title>dlopen (1 samples, 0.09%)</title><rect x="35.3859%" y="821" width="0.0867%" height="15" fill="rgb(229,93,14)" fg:x="408" fg:w="1"/><text x="35.6359%" y="831.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="35.3859%" y="805" width="0.0867%" height="15" fill="rgb(209,67,49)" fg:x="408" fg:w="1"/><text x="35.6359%" y="815.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.09%)</title><rect x="35.3859%" y="789" width="0.0867%" height="15" fill="rgb(213,87,29)" fg:x="408" fg:w="1"/><text x="35.6359%" y="799.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.09%)</title><rect x="35.3859%" y="773" width="0.0867%" height="15" fill="rgb(205,151,52)" fg:x="408" fg:w="1"/><text x="35.6359%" y="783.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="35.3859%" y="757" width="0.0867%" height="15" fill="rgb(253,215,39)" fg:x="408" fg:w="1"/><text x="35.6359%" y="767.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.09%)</title><rect x="35.3859%" y="741" width="0.0867%" height="15" fill="rgb(221,220,41)" fg:x="408" fg:w="1"/><text x="35.6359%" y="751.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.09%)</title><rect x="35.3859%" y="725" width="0.0867%" height="15" fill="rgb(218,133,21)" fg:x="408" fg:w="1"/><text x="35.6359%" y="735.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.09%)</title><rect x="35.3859%" y="709" width="0.0867%" height="15" fill="rgb(221,193,43)" fg:x="408" fg:w="1"/><text x="35.6359%" y="719.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.09%)</title><rect x="35.3859%" y="693" width="0.0867%" height="15" fill="rgb(240,128,52)" fg:x="408" fg:w="1"/><text x="35.6359%" y="703.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.09%)</title><rect x="35.3859%" y="677" width="0.0867%" height="15" fill="rgb(253,114,12)" fg:x="408" fg:w="1"/><text x="35.6359%" y="687.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.09%)</title><rect x="35.3859%" y="661" width="0.0867%" height="15" fill="rgb(215,223,47)" fg:x="408" fg:w="1"/><text x="35.6359%" y="671.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.09%)</title><rect x="35.3859%" y="645" width="0.0867%" height="15" fill="rgb(248,225,23)" fg:x="408" fg:w="1"/><text x="35.6359%" y="655.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.09%)</title><rect x="35.3859%" y="629" width="0.0867%" height="15" fill="rgb(250,108,0)" fg:x="408" fg:w="1"/><text x="35.6359%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="35.3859%" y="613" width="0.0867%" height="15" fill="rgb(228,208,7)" fg:x="408" fg:w="1"/><text x="35.6359%" y="623.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="37.0338%" y="693" width="0.0867%" height="15" fill="rgb(244,45,10)" fg:x="427" fg:w="1"/><text x="37.2838%" y="703.50"></text></g><g><title>[amdvlk64.so] (13 samples, 1.13%)</title><rect x="36.4267%" y="725" width="1.1275%" height="15" fill="rgb(207,125,25)" fg:x="420" fg:w="13"/><text x="36.6767%" y="735.50"></text></g><g><title>[amdvlk64.so] (8 samples, 0.69%)</title><rect x="36.8604%" y="709" width="0.6938%" height="15" fill="rgb(210,195,18)" fg:x="425" fg:w="8"/><text x="37.1104%" y="719.50"></text></g><g><title>amdgpu_cs_submit_raw2 (5 samples, 0.43%)</title><rect x="37.1206%" y="693" width="0.4337%" height="15" fill="rgb(249,80,12)" fg:x="428" fg:w="5"/><text x="37.3706%" y="703.50"></text></g><g><title>drmCommandWriteRead (3 samples, 0.26%)</title><rect x="37.2940%" y="677" width="0.2602%" height="15" fill="rgb(221,65,9)" fg:x="430" fg:w="3"/><text x="37.5440%" y="687.50"></text></g><g><title>drmIoctl (2 samples, 0.17%)</title><rect x="37.3807%" y="661" width="0.1735%" height="15" fill="rgb(235,49,36)" fg:x="431" fg:w="2"/><text x="37.6307%" y="671.50"></text></g><g><title>ioctl (1 samples, 0.09%)</title><rect x="37.4675%" y="645" width="0.0867%" height="15" fill="rgb(225,32,20)" fg:x="432" fg:w="1"/><text x="37.7175%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="37.4675%" y="629" width="0.0867%" height="15" fill="rgb(215,141,46)" fg:x="432" fg:w="1"/><text x="37.7175%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="37.4675%" y="613" width="0.0867%" height="15" fill="rgb(250,160,47)" fg:x="432" fg:w="1"/><text x="37.7175%" y="623.50"></text></g><g><title>[amdvlk64.so] (24 samples, 2.08%)</title><rect x="35.8196%" y="741" width="2.0815%" height="15" fill="rgb(216,222,40)" fg:x="413" fg:w="24"/><text x="36.0696%" y="751.50">[..</text></g><g><title>pthread_rwlock_rdlock (4 samples, 0.35%)</title><rect x="37.5542%" y="725" width="0.3469%" height="15" fill="rgb(234,217,39)" fg:x="433" fg:w="4"/><text x="37.8042%" y="735.50"></text></g><g><title>ash::device::Device::queue_submit (29 samples, 2.52%)</title><rect x="35.4727%" y="789" width="2.5152%" height="15" fill="rgb(207,178,40)" fg:x="409" fg:w="29"/><text x="35.7227%" y="799.50">as..</text></g><g><title>[amdvlk64.so] (29 samples, 2.52%)</title><rect x="35.4727%" y="773" width="2.5152%" height="15" fill="rgb(221,136,13)" fg:x="409" fg:w="29"/><text x="35.7227%" y="783.50">[a..</text></g><g><title>[amdvlk64.so] (29 samples, 2.52%)</title><rect x="35.4727%" y="757" width="2.5152%" height="15" fill="rgb(249,199,10)" fg:x="409" fg:w="29"/><text x="35.7227%" y="767.50">[a..</text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="37.9011%" y="741" width="0.0867%" height="15" fill="rgb(249,222,13)" fg:x="437" fg:w="1"/><text x="38.1511%" y="751.50"></text></g><g><title>vulkan::command::BufferBuilder::blit_image (47 samples, 4.08%)</title><rect x="37.9879%" y="789" width="4.0763%" height="15" fill="rgb(244,185,38)" fg:x="438" fg:w="47"/><text x="38.2379%" y="799.50">vulk..</text></g><g><title>ash::device::Device::cmd_blit_image (47 samples, 4.08%)</title><rect x="37.9879%" y="773" width="4.0763%" height="15" fill="rgb(236,202,9)" fg:x="438" fg:w="47"/><text x="38.2379%" y="783.50">ash:..</text></g><g><title>[amdvlk64.so] (47 samples, 4.08%)</title><rect x="37.9879%" y="757" width="4.0763%" height="15" fill="rgb(250,229,37)" fg:x="438" fg:w="47"/><text x="38.2379%" y="767.50">[amd..</text></g><g><title>[amdvlk64.so] (47 samples, 4.08%)</title><rect x="37.9879%" y="741" width="4.0763%" height="15" fill="rgb(206,174,23)" fg:x="438" fg:w="47"/><text x="38.2379%" y="751.50">[amd..</text></g><g><title>[amdvlk64.so] (47 samples, 4.08%)</title><rect x="37.9879%" y="725" width="4.0763%" height="15" fill="rgb(211,33,43)" fg:x="438" fg:w="47"/><text x="38.2379%" y="735.50">[amd..</text></g><g><title>[amdvlk64.so] (42 samples, 3.64%)</title><rect x="38.4215%" y="709" width="3.6427%" height="15" fill="rgb(245,58,50)" fg:x="443" fg:w="42"/><text x="38.6715%" y="719.50">[amd..</text></g><g><title>[amdvlk64.so] (26 samples, 2.25%)</title><rect x="39.8092%" y="693" width="2.2550%" height="15" fill="rgb(244,68,36)" fg:x="459" fg:w="26"/><text x="40.0592%" y="703.50">[..</text></g><g><title>[amdvlk64.so] (13 samples, 1.13%)</title><rect x="40.9367%" y="677" width="1.1275%" height="15" fill="rgb(232,229,15)" fg:x="472" fg:w="13"/><text x="41.1867%" y="687.50"></text></g><g><title>[amdvlk64.so] (1 samples, 0.09%)</title><rect x="41.9775%" y="661" width="0.0867%" height="15" fill="rgb(254,30,23)" fg:x="484" fg:w="1"/><text x="42.2275%" y="671.50"></text></g><g><title>[amdvlk64.so] (21 samples, 1.82%)</title><rect x="42.3244%" y="709" width="1.8213%" height="15" fill="rgb(235,160,14)" fg:x="488" fg:w="21"/><text x="42.5744%" y="719.50">[..</text></g><g><title>[amdvlk64.so] (16 samples, 1.39%)</title><rect x="42.7580%" y="693" width="1.3877%" height="15" fill="rgb(212,155,44)" fg:x="493" fg:w="16"/><text x="43.0080%" y="703.50"></text></g><g><title>vulkan::command::Pool::allocate (25 samples, 2.17%)</title><rect x="42.0642%" y="789" width="2.1683%" height="15" fill="rgb(226,2,50)" fg:x="485" fg:w="25"/><text x="42.3142%" y="799.50">v..</text></g><g><title>ash::device::Device::allocate_command_buffers (25 samples, 2.17%)</title><rect x="42.0642%" y="773" width="2.1683%" height="15" fill="rgb(234,177,6)" fg:x="485" fg:w="25"/><text x="42.3142%" y="783.50">a..</text></g><g><title>vkAllocateCommandBuffers (25 samples, 2.17%)</title><rect x="42.0642%" y="757" width="2.1683%" height="15" fill="rgb(217,24,9)" fg:x="485" fg:w="25"/><text x="42.3142%" y="767.50">v..</text></g><g><title>[amdvlk64.so] (25 samples, 2.17%)</title><rect x="42.0642%" y="741" width="2.1683%" height="15" fill="rgb(220,13,46)" fg:x="485" fg:w="25"/><text x="42.3142%" y="751.50">[..</text></g><g><title>[amdvlk64.so] (25 samples, 2.17%)</title><rect x="42.0642%" y="725" width="2.1683%" height="15" fill="rgb(239,221,27)" fg:x="485" fg:w="25"/><text x="42.3142%" y="735.50">[..</text></g><g><title>pthread_mutex_init (1 samples, 0.09%)</title><rect x="44.1457%" y="709" width="0.0867%" height="15" fill="rgb(222,198,25)" fg:x="509" fg:w="1"/><text x="44.3957%" y="719.50"></text></g><g><title>aetheria::main (108 samples, 9.37%)</title><rect x="35.1258%" y="933" width="9.3669%" height="15" fill="rgb(211,99,13)" fg:x="405" fg:w="108"/><text x="35.3758%" y="943.50">aetheria::main</text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (104 samples, 9.02%)</title><rect x="35.4727%" y="917" width="9.0199%" height="15" fill="rgb(232,111,31)" fg:x="409" fg:w="104"/><text x="35.7227%" y="927.50">winit::event_..</text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (104 samples, 9.02%)</title><rect x="35.4727%" y="901" width="9.0199%" height="15" fill="rgb(245,82,37)" fg:x="409" fg:w="104"/><text x="35.7227%" y="911.50">winit::platfo..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (104 samples, 9.02%)</title><rect x="35.4727%" y="885" width="9.0199%" height="15" fill="rgb(227,149,46)" fg:x="409" fg:w="104"/><text x="35.7227%" y="895.50">winit::platfo..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (104 samples, 9.02%)</title><rect x="35.4727%" y="869" width="9.0199%" height="15" fill="rgb(218,36,50)" fg:x="409" fg:w="104"/><text x="35.7227%" y="879.50">winit::platfo..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return::single_iteration (104 samples, 9.02%)</title><rect x="35.4727%" y="853" width="9.0199%" height="15" fill="rgb(226,80,48)" fg:x="409" fg:w="104"/><text x="35.7227%" y="863.50">winit::platfo..</text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (104 samples, 9.02%)</title><rect x="35.4727%" y="837" width="9.0199%" height="15" fill="rgb(238,224,15)" fg:x="409" fg:w="104"/><text x="35.7227%" y="847.50">winit::platfo..</text></g><g><title>aetheria::main::{{closure}} (104 samples, 9.02%)</title><rect x="35.4727%" y="821" width="9.0199%" height="15" fill="rgb(241,136,10)" fg:x="409" fg:w="104"/><text x="35.7227%" y="831.50">aetheria::mai..</text></g><g><title>aetheria::renderer::Renderer::render (104 samples, 9.02%)</title><rect x="35.4727%" y="805" width="9.0199%" height="15" fill="rgb(208,32,45)" fg:x="409" fg:w="104"/><text x="35.7227%" y="815.50">aetheria::ren..</text></g><g><title>vulkan::context::Context::end_frame (3 samples, 0.26%)</title><rect x="44.2324%" y="789" width="0.2602%" height="15" fill="rgb(207,135,9)" fg:x="510" fg:w="3"/><text x="44.4824%" y="799.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (3 samples, 0.26%)</title><rect x="44.2324%" y="773" width="0.2602%" height="15" fill="rgb(206,86,44)" fg:x="510" fg:w="3"/><text x="44.4824%" y="783.50"></text></g><g><title>[amdvlk64.so] (3 samples, 0.26%)</title><rect x="44.2324%" y="757" width="0.2602%" height="15" fill="rgb(245,177,15)" fg:x="510" fg:w="3"/><text x="44.4824%" y="767.50"></text></g><g><title>[amdvlk64.so] (3 samples, 0.26%)</title><rect x="44.2324%" y="741" width="0.2602%" height="15" fill="rgb(206,64,50)" fg:x="510" fg:w="3"/><text x="44.4824%" y="751.50"></text></g><g><title>[amdvlk64.so] (3 samples, 0.26%)</title><rect x="44.2324%" y="725" width="0.2602%" height="15" fill="rgb(234,36,40)" fg:x="510" fg:w="3"/><text x="44.4824%" y="735.50"></text></g><g><title>[amdvlk64.so] (1 samples, 0.09%)</title><rect x="44.4059%" y="709" width="0.0867%" height="15" fill="rgb(213,64,8)" fg:x="512" fg:w="1"/><text x="44.6559%" y="719.50"></text></g><g><title>mbstowcs (1 samples, 0.09%)</title><rect x="44.4926%" y="933" width="0.0867%" height="15" fill="rgb(210,75,36)" fg:x="513" fg:w="1"/><text x="44.7426%" y="943.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="44.4926%" y="917" width="0.0867%" height="15" fill="rgb(229,88,21)" fg:x="513" fg:w="1"/><text x="44.7426%" y="927.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="44.4926%" y="901" width="0.0867%" height="15" fill="rgb(252,204,47)" fg:x="513" fg:w="1"/><text x="44.7426%" y="911.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="44.4926%" y="885" width="0.0867%" height="15" fill="rgb(208,77,27)" fg:x="513" fg:w="1"/><text x="44.7426%" y="895.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="44.4926%" y="869" width="0.0867%" height="15" fill="rgb(221,76,26)" fg:x="513" fg:w="1"/><text x="44.7426%" y="879.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="44.4926%" y="853" width="0.0867%" height="15" fill="rgb(225,139,18)" fg:x="513" fg:w="1"/><text x="44.7426%" y="863.50"></text></g><g><title>read (1 samples, 0.09%)</title><rect x="44.5794%" y="933" width="0.0867%" height="15" fill="rgb(230,137,11)" fg:x="514" fg:w="1"/><text x="44.8294%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="44.5794%" y="917" width="0.0867%" height="15" fill="rgb(212,28,1)" fg:x="514" fg:w="1"/><text x="44.8294%" y="927.50"></text></g><g><title>[amdvlk64.so] (3 samples, 0.26%)</title><rect x="44.6661%" y="853" width="0.2602%" height="15" fill="rgb(248,164,17)" fg:x="515" fg:w="3"/><text x="44.9161%" y="863.50"></text></g><g><title>[libc.so.6] (3 samples, 0.26%)</title><rect x="44.6661%" y="837" width="0.2602%" height="15" fill="rgb(222,171,42)" fg:x="515" fg:w="3"/><text x="44.9161%" y="847.50"></text></g><g><title>[amdvlk64.so] (1 samples, 0.09%)</title><rect x="44.9263%" y="837" width="0.0867%" height="15" fill="rgb(243,84,45)" fg:x="518" fg:w="1"/><text x="45.1763%" y="847.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="44.9263%" y="821" width="0.0867%" height="15" fill="rgb(252,49,23)" fg:x="518" fg:w="1"/><text x="45.1763%" y="831.50"></text></g><g><title>vulkan::device::Device::new (5 samples, 0.43%)</title><rect x="44.6661%" y="917" width="0.4337%" height="15" fill="rgb(215,19,7)" fg:x="515" fg:w="5"/><text x="44.9161%" y="927.50"></text></g><g><title>ash::instance::Instance::create_device (5 samples, 0.43%)</title><rect x="44.6661%" y="901" width="0.4337%" height="15" fill="rgb(238,81,41)" fg:x="515" fg:w="5"/><text x="44.9161%" y="911.50"></text></g><g><title>vkCreateDevice (5 samples, 0.43%)</title><rect x="44.6661%" y="885" width="0.4337%" height="15" fill="rgb(210,199,37)" fg:x="515" fg:w="5"/><text x="44.9161%" y="895.50"></text></g><g><title>[libvulkan.so.1.3.251] (5 samples, 0.43%)</title><rect x="44.6661%" y="869" width="0.4337%" height="15" fill="rgb(244,192,49)" fg:x="515" fg:w="5"/><text x="44.9161%" y="879.50"></text></g><g><title>[libvulkan.so.1.3.251] (2 samples, 0.17%)</title><rect x="44.9263%" y="853" width="0.1735%" height="15" fill="rgb(226,211,11)" fg:x="518" fg:w="2"/><text x="45.1763%" y="863.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="45.0130%" y="837" width="0.0867%" height="15" fill="rgb(236,162,54)" fg:x="519" fg:w="1"/><text x="45.2630%" y="847.50"></text></g><g><title>ash::entry::Entry::create_instance (2 samples, 0.17%)</title><rect x="45.0997%" y="901" width="0.1735%" height="15" fill="rgb(220,229,9)" fg:x="520" fg:w="2"/><text x="45.3497%" y="911.50"></text></g><g><title>vkCreateInstance (2 samples, 0.17%)</title><rect x="45.0997%" y="885" width="0.1735%" height="15" fill="rgb(250,87,22)" fg:x="520" fg:w="2"/><text x="45.3497%" y="895.50"></text></g><g><title>[libvulkan.so.1.3.251] (2 samples, 0.17%)</title><rect x="45.0997%" y="869" width="0.1735%" height="15" fill="rgb(239,43,17)" fg:x="520" fg:w="2"/><text x="45.3497%" y="879.50"></text></g><g><title>[libvulkan.so.1.3.251] (2 samples, 0.17%)</title><rect x="45.0997%" y="853" width="0.1735%" height="15" fill="rgb(231,177,25)" fg:x="520" fg:w="2"/><text x="45.3497%" y="863.50"></text></g><g><title>[libvulkan.so.1.3.251] (2 samples, 0.17%)</title><rect x="45.0997%" y="837" width="0.1735%" height="15" fill="rgb(219,179,1)" fg:x="520" fg:w="2"/><text x="45.3497%" y="847.50"></text></g><g><title>[libvulkan.so.1.3.251] (2 samples, 0.17%)</title><rect x="45.0997%" y="821" width="0.1735%" height="15" fill="rgb(238,219,53)" fg:x="520" fg:w="2"/><text x="45.3497%" y="831.50"></text></g><g><title>[libvulkan.so.1.3.251] (2 samples, 0.17%)</title><rect x="45.0997%" y="805" width="0.1735%" height="15" fill="rgb(232,167,36)" fg:x="520" fg:w="2"/><text x="45.3497%" y="815.50"></text></g><g><title>[libvulkan.so.1.3.251] (2 samples, 0.17%)</title><rect x="45.0997%" y="789" width="0.1735%" height="15" fill="rgb(244,19,51)" fg:x="520" fg:w="2"/><text x="45.3497%" y="799.50"></text></g><g><title>[libvulkan.so.1.3.251] (2 samples, 0.17%)</title><rect x="45.0997%" y="773" width="0.1735%" height="15" fill="rgb(224,6,22)" fg:x="520" fg:w="2"/><text x="45.3497%" y="783.50"></text></g><g><title>[libvulkan.so.1.3.251] (2 samples, 0.17%)</title><rect x="45.0997%" y="757" width="0.1735%" height="15" fill="rgb(224,145,5)" fg:x="520" fg:w="2"/><text x="45.3497%" y="767.50"></text></g><g><title>[libvulkan.so.1.3.251] (2 samples, 0.17%)</title><rect x="45.0997%" y="741" width="0.1735%" height="15" fill="rgb(234,130,49)" fg:x="520" fg:w="2"/><text x="45.3497%" y="751.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="45.1865%" y="725" width="0.0867%" height="15" fill="rgb(254,6,2)" fg:x="521" fg:w="1"/><text x="45.4365%" y="735.50"></text></g><g><title>[libvulkan.so.1.3.251] (1 samples, 0.09%)</title><rect x="45.2732%" y="773" width="0.0867%" height="15" fill="rgb(208,96,46)" fg:x="522" fg:w="1"/><text x="45.5232%" y="783.50"></text></g><g><title>[libvulkan.so.1.3.251] (1 samples, 0.09%)</title><rect x="45.2732%" y="757" width="0.0867%" height="15" fill="rgb(239,3,39)" fg:x="522" fg:w="1"/><text x="45.5232%" y="767.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="45.2732%" y="741" width="0.0867%" height="15" fill="rgb(233,210,1)" fg:x="522" fg:w="1"/><text x="45.5232%" y="751.50"></text></g><g><title>[libvulkan.so.1.3.251] (2 samples, 0.17%)</title><rect x="45.2732%" y="789" width="0.1735%" height="15" fill="rgb(244,137,37)" fg:x="522" fg:w="2"/><text x="45.5232%" y="799.50"></text></g><g><title>secure_getenv (1 samples, 0.09%)</title><rect x="45.3599%" y="773" width="0.0867%" height="15" fill="rgb(240,136,2)" fg:x="523" fg:w="1"/><text x="45.6099%" y="783.50"></text></g><g><title>[amdvlk64.so] (2 samples, 0.17%)</title><rect x="45.5334%" y="613" width="0.1735%" height="15" fill="rgb(239,18,37)" fg:x="525" fg:w="2"/><text x="45.7834%" y="623.50"></text></g><g><title>[amdvlk64.so] (1 samples, 0.09%)</title><rect x="45.6201%" y="597" width="0.0867%" height="15" fill="rgb(218,185,22)" fg:x="526" fg:w="1"/><text x="45.8701%" y="607.50"></text></g><g><title>[amdvlk64.so] (1 samples, 0.09%)</title><rect x="45.6201%" y="581" width="0.0867%" height="15" fill="rgb(225,218,4)" fg:x="526" fg:w="1"/><text x="45.8701%" y="591.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.17%)</title><rect x="45.7069%" y="613" width="0.1735%" height="15" fill="rgb(230,182,32)" fg:x="527" fg:w="2"/><text x="45.9569%" y="623.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.09%)</title><rect x="45.7936%" y="597" width="0.0867%" height="15" fill="rgb(242,56,43)" fg:x="528" fg:w="1"/><text x="46.0436%" y="607.50"></text></g><g><title>ash::entry::Entry::enumerate_instance_extension_properties (8 samples, 0.69%)</title><rect x="45.2732%" y="901" width="0.6938%" height="15" fill="rgb(233,99,24)" fg:x="522" fg:w="8"/><text x="45.5232%" y="911.50"></text></g><g><title>ash::prelude::read_into_uninitialized_vector (8 samples, 0.69%)</title><rect x="45.2732%" y="885" width="0.6938%" height="15" fill="rgb(234,209,42)" fg:x="522" fg:w="8"/><text x="45.5232%" y="895.50"></text></g><g><title>ash::entry::Entry::enumerate_instance_extension_properties::{{closure}} (8 samples, 0.69%)</title><rect x="45.2732%" y="869" width="0.6938%" height="15" fill="rgb(227,7,12)" fg:x="522" fg:w="8"/><text x="45.5232%" y="879.50"></text></g><g><title>vkEnumerateInstanceExtensionProperties (8 samples, 0.69%)</title><rect x="45.2732%" y="853" width="0.6938%" height="15" fill="rgb(245,203,43)" fg:x="522" fg:w="8"/><text x="45.5232%" y="863.50"></text></g><g><title>[libvulkan.so.1.3.251] (8 samples, 0.69%)</title><rect x="45.2732%" y="837" width="0.6938%" height="15" fill="rgb(238,205,33)" fg:x="522" fg:w="8"/><text x="45.5232%" y="847.50"></text></g><g><title>[libvulkan.so.1.3.251] (8 samples, 0.69%)</title><rect x="45.2732%" y="821" width="0.6938%" height="15" fill="rgb(231,56,7)" fg:x="522" fg:w="8"/><text x="45.5232%" y="831.50"></text></g><g><title>[libvulkan.so.1.3.251] (8 samples, 0.69%)</title><rect x="45.2732%" y="805" width="0.6938%" height="15" fill="rgb(244,186,29)" fg:x="522" fg:w="8"/><text x="45.5232%" y="815.50"></text></g><g><title>dlopen (6 samples, 0.52%)</title><rect x="45.4467%" y="789" width="0.5204%" height="15" fill="rgb(234,111,31)" fg:x="524" fg:w="6"/><text x="45.6967%" y="799.50"></text></g><g><title>[libc.so.6] (6 samples, 0.52%)</title><rect x="45.4467%" y="773" width="0.5204%" height="15" fill="rgb(241,149,10)" fg:x="524" fg:w="6"/><text x="45.6967%" y="783.50"></text></g><g><title>[ld-linux-x86-64.so.2] (6 samples, 0.52%)</title><rect x="45.4467%" y="757" width="0.5204%" height="15" fill="rgb(249,206,44)" fg:x="524" fg:w="6"/><text x="45.6967%" y="767.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.52%)</title><rect x="45.4467%" y="741" width="0.5204%" height="15" fill="rgb(251,153,30)" fg:x="524" fg:w="6"/><text x="45.6967%" y="751.50"></text></g><g><title>[libc.so.6] (6 samples, 0.52%)</title><rect x="45.4467%" y="725" width="0.5204%" height="15" fill="rgb(239,152,38)" fg:x="524" fg:w="6"/><text x="45.6967%" y="735.50"></text></g><g><title>[ld-linux-x86-64.so.2] (6 samples, 0.52%)</title><rect x="45.4467%" y="709" width="0.5204%" height="15" fill="rgb(249,139,47)" fg:x="524" fg:w="6"/><text x="45.6967%" y="719.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.52%)</title><rect x="45.4467%" y="693" width="0.5204%" height="15" fill="rgb(244,64,35)" fg:x="524" fg:w="6"/><text x="45.6967%" y="703.50"></text></g><g><title>[ld-linux-x86-64.so.2] (6 samples, 0.52%)</title><rect x="45.4467%" y="677" width="0.5204%" height="15" fill="rgb(216,46,15)" fg:x="524" fg:w="6"/><text x="45.6967%" y="687.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.52%)</title><rect x="45.4467%" y="661" width="0.5204%" height="15" fill="rgb(250,74,19)" fg:x="524" fg:w="6"/><text x="45.6967%" y="671.50"></text></g><g><title>[ld-linux-x86-64.so.2] (6 samples, 0.52%)</title><rect x="45.4467%" y="645" width="0.5204%" height="15" fill="rgb(249,42,33)" fg:x="524" fg:w="6"/><text x="45.6967%" y="655.50"></text></g><g><title>[ld-linux-x86-64.so.2] (6 samples, 0.52%)</title><rect x="45.4467%" y="629" width="0.5204%" height="15" fill="rgb(242,149,17)" fg:x="524" fg:w="6"/><text x="45.6967%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="45.8803%" y="613" width="0.0867%" height="15" fill="rgb(244,29,21)" fg:x="529" fg:w="1"/><text x="46.1303%" y="623.50"></text></g><g><title>[libvulkan.so.1.3.251] (1 samples, 0.09%)</title><rect x="46.0538%" y="725" width="0.0867%" height="15" fill="rgb(220,130,37)" fg:x="531" fg:w="1"/><text x="46.3038%" y="735.50"></text></g><g><title>[libvulkan.so.1.3.251] (1 samples, 0.09%)</title><rect x="46.0538%" y="709" width="0.0867%" height="15" fill="rgb(211,67,2)" fg:x="531" fg:w="1"/><text x="46.3038%" y="719.50"></text></g><g><title>[libvulkan.so.1.3.251] (1 samples, 0.09%)</title><rect x="46.0538%" y="693" width="0.0867%" height="15" fill="rgb(235,68,52)" fg:x="531" fg:w="1"/><text x="46.3038%" y="703.50"></text></g><g><title>[libvulkan.so.1.3.251] (1 samples, 0.09%)</title><rect x="46.0538%" y="677" width="0.0867%" height="15" fill="rgb(246,142,3)" fg:x="531" fg:w="1"/><text x="46.3038%" y="687.50"></text></g><g><title>[libvulkan.so.1.3.251] (1 samples, 0.09%)</title><rect x="46.0538%" y="661" width="0.0867%" height="15" fill="rgb(241,25,7)" fg:x="531" fg:w="1"/><text x="46.3038%" y="671.50"></text></g><g><title>cfree (1 samples, 0.09%)</title><rect x="46.0538%" y="645" width="0.0867%" height="15" fill="rgb(242,119,39)" fg:x="531" fg:w="1"/><text x="46.3038%" y="655.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="46.0538%" y="629" width="0.0867%" height="15" fill="rgb(241,98,45)" fg:x="531" fg:w="1"/><text x="46.3038%" y="639.50"></text></g><g><title>[libvulkan.so.1.3.251] (2 samples, 0.17%)</title><rect x="46.0538%" y="773" width="0.1735%" height="15" fill="rgb(254,28,30)" fg:x="531" fg:w="2"/><text x="46.3038%" y="783.50"></text></g><g><title>[libvulkan.so.1.3.251] (2 samples, 0.17%)</title><rect x="46.0538%" y="757" width="0.1735%" height="15" fill="rgb(241,142,54)" fg:x="531" fg:w="2"/><text x="46.3038%" y="767.50"></text></g><g><title>[libvulkan.so.1.3.251] (2 samples, 0.17%)</title><rect x="46.0538%" y="741" width="0.1735%" height="15" fill="rgb(222,85,15)" fg:x="531" fg:w="2"/><text x="46.3038%" y="751.50"></text></g><g><title>malloc (1 samples, 0.09%)</title><rect x="46.1405%" y="725" width="0.0867%" height="15" fill="rgb(210,85,47)" fg:x="532" fg:w="1"/><text x="46.3905%" y="735.50"></text></g><g><title>vulkan::context::Context::new (19 samples, 1.65%)</title><rect x="44.6661%" y="933" width="1.6479%" height="15" fill="rgb(224,206,25)" fg:x="515" fg:w="19"/><text x="44.9161%" y="943.50"></text></g><g><title>vulkan::instance::Instance::new (14 samples, 1.21%)</title><rect x="45.0997%" y="917" width="1.2142%" height="15" fill="rgb(243,201,19)" fg:x="520" fg:w="14"/><text x="45.3497%" y="927.50"></text></g><g><title>ash::entry::Entry::enumerate_instance_layer_properties (4 samples, 0.35%)</title><rect x="45.9670%" y="901" width="0.3469%" height="15" fill="rgb(236,59,4)" fg:x="530" fg:w="4"/><text x="46.2170%" y="911.50"></text></g><g><title>ash::prelude::read_into_uninitialized_vector (4 samples, 0.35%)</title><rect x="45.9670%" y="885" width="0.3469%" height="15" fill="rgb(254,179,45)" fg:x="530" fg:w="4"/><text x="46.2170%" y="895.50"></text></g><g><title>ash::entry::Entry::enumerate_instance_layer_properties::{{closure}} (4 samples, 0.35%)</title><rect x="45.9670%" y="869" width="0.3469%" height="15" fill="rgb(226,14,10)" fg:x="530" fg:w="4"/><text x="46.2170%" y="879.50"></text></g><g><title>vkEnumerateInstanceLayerProperties (4 samples, 0.35%)</title><rect x="45.9670%" y="853" width="0.3469%" height="15" fill="rgb(244,27,41)" fg:x="530" fg:w="4"/><text x="46.2170%" y="863.50"></text></g><g><title>[libvulkan.so.1.3.251] (4 samples, 0.35%)</title><rect x="45.9670%" y="837" width="0.3469%" height="15" fill="rgb(235,35,32)" fg:x="530" fg:w="4"/><text x="46.2170%" y="847.50"></text></g><g><title>[libvulkan.so.1.3.251] (4 samples, 0.35%)</title><rect x="45.9670%" y="821" width="0.3469%" height="15" fill="rgb(218,68,31)" fg:x="530" fg:w="4"/><text x="46.2170%" y="831.50"></text></g><g><title>[libvulkan.so.1.3.251] (4 samples, 0.35%)</title><rect x="45.9670%" y="805" width="0.3469%" height="15" fill="rgb(207,120,37)" fg:x="530" fg:w="4"/><text x="46.2170%" y="815.50"></text></g><g><title>[libvulkan.so.1.3.251] (4 samples, 0.35%)</title><rect x="45.9670%" y="789" width="0.3469%" height="15" fill="rgb(227,98,0)" fg:x="530" fg:w="4"/><text x="46.2170%" y="799.50"></text></g><g><title>_IO_fread (1 samples, 0.09%)</title><rect x="46.2272%" y="773" width="0.0867%" height="15" fill="rgb(207,7,3)" fg:x="533" fg:w="1"/><text x="46.4772%" y="783.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="46.2272%" y="757" width="0.0867%" height="15" fill="rgb(206,98,19)" fg:x="533" fg:w="1"/><text x="46.4772%" y="767.50"></text></g><g><title>vulkan::device::Device::new (1 samples, 0.09%)</title><rect x="46.3140%" y="933" width="0.0867%" height="15" fill="rgb(217,5,26)" fg:x="534" fg:w="1"/><text x="46.5640%" y="943.50"></text></g><g><title>ash::instance::Instance::create_device (1 samples, 0.09%)</title><rect x="46.3140%" y="917" width="0.0867%" height="15" fill="rgb(235,190,38)" fg:x="534" fg:w="1"/><text x="46.5640%" y="927.50"></text></g><g><title>vkCreateDevice (1 samples, 0.09%)</title><rect x="46.3140%" y="901" width="0.0867%" height="15" fill="rgb(247,86,24)" fg:x="534" fg:w="1"/><text x="46.5640%" y="911.50"></text></g><g><title>[libvulkan.so.1.3.251] (1 samples, 0.09%)</title><rect x="46.3140%" y="885" width="0.0867%" height="15" fill="rgb(205,101,16)" fg:x="534" fg:w="1"/><text x="46.5640%" y="895.50"></text></g><g><title>[libvulkan.so.1.3.251] (1 samples, 0.09%)</title><rect x="46.3140%" y="869" width="0.0867%" height="15" fill="rgb(246,168,33)" fg:x="534" fg:w="1"/><text x="46.5640%" y="879.50"></text></g><g><title>[libvulkan.so.1.3.251] (1 samples, 0.09%)</title><rect x="46.3140%" y="853" width="0.0867%" height="15" fill="rgb(231,114,1)" fg:x="534" fg:w="1"/><text x="46.5640%" y="863.50"></text></g><g><title>[amdvlk64.so] (1 samples, 0.09%)</title><rect x="46.3140%" y="837" width="0.0867%" height="15" fill="rgb(207,184,53)" fg:x="534" fg:w="1"/><text x="46.5640%" y="847.50"></text></g><g><title>[amdvlk64.so] (1 samples, 0.09%)</title><rect x="46.3140%" y="821" width="0.0867%" height="15" fill="rgb(224,95,51)" fg:x="534" fg:w="1"/><text x="46.5640%" y="831.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="46.3140%" y="805" width="0.0867%" height="15" fill="rgb(212,188,45)" fg:x="534" fg:w="1"/><text x="46.5640%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="46.3140%" y="789" width="0.0867%" height="15" fill="rgb(223,154,38)" fg:x="534" fg:w="1"/><text x="46.5640%" y="799.50"></text></g><g><title>x11_dl::xinput2::XInput2::open (1 samples, 0.09%)</title><rect x="46.4007%" y="917" width="0.0867%" height="15" fill="rgb(251,22,52)" fg:x="535" fg:w="1"/><text x="46.6507%" y="927.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.09%)</title><rect x="46.4007%" y="901" width="0.0867%" height="15" fill="rgb(229,209,22)" fg:x="535" fg:w="1"/><text x="46.6507%" y="911.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.09%)</title><rect x="46.4007%" y="885" width="0.0867%" height="15" fill="rgb(234,138,34)" fg:x="535" fg:w="1"/><text x="46.6507%" y="895.50"></text></g><g><title>once_cell::imp::initialize_or_wait (1 samples, 0.09%)</title><rect x="46.4007%" y="869" width="0.0867%" height="15" fill="rgb(212,95,11)" fg:x="535" fg:w="1"/><text x="46.6507%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.09%)</title><rect x="46.4007%" y="853" width="0.0867%" height="15" fill="rgb(240,179,47)" fg:x="535" fg:w="1"/><text x="46.6507%" y="863.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (1 samples, 0.09%)</title><rect x="46.4007%" y="837" width="0.0867%" height="15" fill="rgb(240,163,11)" fg:x="535" fg:w="1"/><text x="46.6507%" y="847.50"></text></g><g><title>x11_dl::xinput2::XInput2::open::{{closure}} (1 samples, 0.09%)</title><rect x="46.4007%" y="821" width="0.0867%" height="15" fill="rgb(236,37,12)" fg:x="535" fg:w="1"/><text x="46.6507%" y="831.50"></text></g><g><title>x11_dl::link::DynamicLibrary::open_multi (1 samples, 0.09%)</title><rect x="46.4007%" y="805" width="0.0867%" height="15" fill="rgb(232,164,16)" fg:x="535" fg:w="1"/><text x="46.6507%" y="815.50"></text></g><g><title>x11_dl::link::DynamicLibrary::open (1 samples, 0.09%)</title><rect x="46.4007%" y="789" width="0.0867%" height="15" fill="rgb(244,205,15)" fg:x="535" fg:w="1"/><text x="46.6507%" y="799.50"></text></g><g><title>dlopen (1 samples, 0.09%)</title><rect x="46.4007%" y="773" width="0.0867%" height="15" fill="rgb(223,117,47)" fg:x="535" fg:w="1"/><text x="46.6507%" y="783.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="46.4007%" y="757" width="0.0867%" height="15" fill="rgb(244,107,35)" fg:x="535" fg:w="1"/><text x="46.6507%" y="767.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.09%)</title><rect x="46.4007%" y="741" width="0.0867%" height="15" fill="rgb(205,140,8)" fg:x="535" fg:w="1"/><text x="46.6507%" y="751.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.09%)</title><rect x="46.4007%" y="725" width="0.0867%" height="15" fill="rgb(228,84,46)" fg:x="535" fg:w="1"/><text x="46.6507%" y="735.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="46.4007%" y="709" width="0.0867%" height="15" fill="rgb(254,188,9)" fg:x="535" fg:w="1"/><text x="46.6507%" y="719.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.09%)</title><rect x="46.4007%" y="693" width="0.0867%" height="15" fill="rgb(206,112,54)" fg:x="535" fg:w="1"/><text x="46.6507%" y="703.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.09%)</title><rect x="46.4007%" y="677" width="0.0867%" height="15" fill="rgb(216,84,49)" fg:x="535" fg:w="1"/><text x="46.6507%" y="687.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.09%)</title><rect x="46.4007%" y="661" width="0.0867%" height="15" fill="rgb(214,194,35)" fg:x="535" fg:w="1"/><text x="46.6507%" y="671.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.09%)</title><rect x="46.4007%" y="645" width="0.0867%" height="15" fill="rgb(249,28,3)" fg:x="535" fg:w="1"/><text x="46.6507%" y="655.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.09%)</title><rect x="46.4007%" y="629" width="0.0867%" height="15" fill="rgb(222,56,52)" fg:x="535" fg:w="1"/><text x="46.6507%" y="639.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.09%)</title><rect x="46.4007%" y="613" width="0.0867%" height="15" fill="rgb(245,217,50)" fg:x="535" fg:w="1"/><text x="46.6507%" y="623.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.09%)</title><rect x="46.4007%" y="597" width="0.0867%" height="15" fill="rgb(213,201,24)" fg:x="535" fg:w="1"/><text x="46.6507%" y="607.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.09%)</title><rect x="46.4007%" y="581" width="0.0867%" height="15" fill="rgb(248,116,28)" fg:x="535" fg:w="1"/><text x="46.6507%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="46.4007%" y="565" width="0.0867%" height="15" fill="rgb(219,72,43)" fg:x="535" fg:w="1"/><text x="46.6507%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="46.4007%" y="549" width="0.0867%" height="15" fill="rgb(209,138,14)" fg:x="535" fg:w="1"/><text x="46.6507%" y="559.50"></text></g><g><title>[unknown] (184 samples, 15.96%)</title><rect x="30.6158%" y="949" width="15.9584%" height="15" fill="rgb(222,18,33)" fg:x="353" fg:w="184"/><text x="30.8658%" y="959.50">[unknown]</text></g><g><title>winit::platform_impl::platform::x11::xdisplay::XConnection::new (2 samples, 0.17%)</title><rect x="46.4007%" y="933" width="0.1735%" height="15" fill="rgb(213,199,7)" fg:x="535" fg:w="2"/><text x="46.6507%" y="943.50"></text></g><g><title>x11_dl::xlib::Xlib::open (1 samples, 0.09%)</title><rect x="46.4874%" y="917" width="0.0867%" height="15" fill="rgb(250,110,10)" fg:x="536" fg:w="1"/><text x="46.7374%" y="927.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.09%)</title><rect x="46.4874%" y="901" width="0.0867%" height="15" fill="rgb(248,123,6)" fg:x="536" fg:w="1"/><text x="46.7374%" y="911.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.09%)</title><rect x="46.4874%" y="885" width="0.0867%" height="15" fill="rgb(206,91,31)" fg:x="536" fg:w="1"/><text x="46.7374%" y="895.50"></text></g><g><title>once_cell::imp::initialize_or_wait (1 samples, 0.09%)</title><rect x="46.4874%" y="869" width="0.0867%" height="15" fill="rgb(211,154,13)" fg:x="536" fg:w="1"/><text x="46.7374%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.09%)</title><rect x="46.4874%" y="853" width="0.0867%" height="15" fill="rgb(225,148,7)" fg:x="536" fg:w="1"/><text x="46.7374%" y="863.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (1 samples, 0.09%)</title><rect x="46.4874%" y="837" width="0.0867%" height="15" fill="rgb(220,160,43)" fg:x="536" fg:w="1"/><text x="46.7374%" y="847.50"></text></g><g><title>x11_dl::xlib::Xlib::open::{{closure}} (1 samples, 0.09%)</title><rect x="46.4874%" y="821" width="0.0867%" height="15" fill="rgb(213,52,39)" fg:x="536" fg:w="1"/><text x="46.7374%" y="831.50"></text></g><g><title>x11_dl::link::DynamicLibrary::open_multi (1 samples, 0.09%)</title><rect x="46.4874%" y="805" width="0.0867%" height="15" fill="rgb(243,137,7)" fg:x="536" fg:w="1"/><text x="46.7374%" y="815.50"></text></g><g><title>x11_dl::link::DynamicLibrary::open (1 samples, 0.09%)</title><rect x="46.4874%" y="789" width="0.0867%" height="15" fill="rgb(230,79,13)" fg:x="536" fg:w="1"/><text x="46.7374%" y="799.50"></text></g><g><title>dlopen (1 samples, 0.09%)</title><rect x="46.4874%" y="773" width="0.0867%" height="15" fill="rgb(247,105,23)" fg:x="536" fg:w="1"/><text x="46.7374%" y="783.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="46.4874%" y="757" width="0.0867%" height="15" fill="rgb(223,179,41)" fg:x="536" fg:w="1"/><text x="46.7374%" y="767.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.09%)</title><rect x="46.4874%" y="741" width="0.0867%" height="15" fill="rgb(218,9,34)" fg:x="536" fg:w="1"/><text x="46.7374%" y="751.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.09%)</title><rect x="46.4874%" y="725" width="0.0867%" height="15" fill="rgb(222,106,8)" fg:x="536" fg:w="1"/><text x="46.7374%" y="735.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="46.4874%" y="709" width="0.0867%" height="15" fill="rgb(211,220,0)" fg:x="536" fg:w="1"/><text x="46.7374%" y="719.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.09%)</title><rect x="46.4874%" y="693" width="0.0867%" height="15" fill="rgb(229,52,16)" fg:x="536" fg:w="1"/><text x="46.7374%" y="703.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.09%)</title><rect x="46.4874%" y="677" width="0.0867%" height="15" fill="rgb(212,155,18)" fg:x="536" fg:w="1"/><text x="46.7374%" y="687.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.09%)</title><rect x="46.4874%" y="661" width="0.0867%" height="15" fill="rgb(242,21,14)" fg:x="536" fg:w="1"/><text x="46.7374%" y="671.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.09%)</title><rect x="46.4874%" y="645" width="0.0867%" height="15" fill="rgb(222,19,48)" fg:x="536" fg:w="1"/><text x="46.7374%" y="655.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.09%)</title><rect x="46.4874%" y="629" width="0.0867%" height="15" fill="rgb(232,45,27)" fg:x="536" fg:w="1"/><text x="46.7374%" y="639.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.09%)</title><rect x="46.4874%" y="613" width="0.0867%" height="15" fill="rgb(249,103,42)" fg:x="536" fg:w="1"/><text x="46.7374%" y="623.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.09%)</title><rect x="46.4874%" y="597" width="0.0867%" height="15" fill="rgb(246,81,33)" fg:x="536" fg:w="1"/><text x="46.7374%" y="607.50"></text></g><g><title>aetheria::create_window (1 samples, 0.09%)</title><rect x="46.5742%" y="677" width="0.0867%" height="15" fill="rgb(252,33,42)" fg:x="537" fg:w="1"/><text x="46.8242%" y="687.50"></text></g><g><title>winit::event_loop::EventLoop&lt;()&gt;::new (1 samples, 0.09%)</title><rect x="46.5742%" y="661" width="0.0867%" height="15" fill="rgb(209,212,41)" fg:x="537" fg:w="1"/><text x="46.8242%" y="671.50"></text></g><g><title>winit::event_loop::EventLoopBuilder&lt;T&gt;::build (1 samples, 0.09%)</title><rect x="46.5742%" y="645" width="0.0867%" height="15" fill="rgb(207,154,6)" fg:x="537" fg:w="1"/><text x="46.8242%" y="655.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::new (1 samples, 0.09%)</title><rect x="46.5742%" y="629" width="0.0867%" height="15" fill="rgb(223,64,47)" fg:x="537" fg:w="1"/><text x="46.8242%" y="639.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::new_x11_any_thread (1 samples, 0.09%)</title><rect x="46.5742%" y="613" width="0.0867%" height="15" fill="rgb(211,161,38)" fg:x="537" fg:w="1"/><text x="46.8242%" y="623.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::new (1 samples, 0.09%)</title><rect x="46.5742%" y="597" width="0.0867%" height="15" fill="rgb(219,138,40)" fg:x="537" fg:w="1"/><text x="46.8242%" y="607.50"></text></g><g><title>XIQueryVersion (1 samples, 0.09%)</title><rect x="46.5742%" y="581" width="0.0867%" height="15" fill="rgb(241,228,46)" fg:x="537" fg:w="1"/><text x="46.8242%" y="591.50"></text></g><g><title>[libXi.so.6.1.0] (1 samples, 0.09%)</title><rect x="46.5742%" y="565" width="0.0867%" height="15" fill="rgb(223,209,38)" fg:x="537" fg:w="1"/><text x="46.8242%" y="575.50"></text></g><g><title>[libXi.so.6.1.0] (1 samples, 0.09%)</title><rect x="46.5742%" y="549" width="0.0867%" height="15" fill="rgb(236,164,45)" fg:x="537" fg:w="1"/><text x="46.8242%" y="559.50"></text></g><g><title>_XReply (1 samples, 0.09%)</title><rect x="46.5742%" y="533" width="0.0867%" height="15" fill="rgb(231,15,5)" fg:x="537" fg:w="1"/><text x="46.8242%" y="543.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.09%)</title><rect x="46.5742%" y="517" width="0.0867%" height="15" fill="rgb(252,35,15)" fg:x="537" fg:w="1"/><text x="46.8242%" y="527.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.09%)</title><rect x="46.5742%" y="501" width="0.0867%" height="15" fill="rgb(248,181,18)" fg:x="537" fg:w="1"/><text x="46.8242%" y="511.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.09%)</title><rect x="46.5742%" y="485" width="0.0867%" height="15" fill="rgb(233,39,42)" fg:x="537" fg:w="1"/><text x="46.8242%" y="495.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.09%)</title><rect x="46.5742%" y="469" width="0.0867%" height="15" fill="rgb(238,110,33)" fg:x="537" fg:w="1"/><text x="46.8242%" y="479.50"></text></g><g><title>recvmsg (1 samples, 0.09%)</title><rect x="46.5742%" y="453" width="0.0867%" height="15" fill="rgb(233,195,10)" fg:x="537" fg:w="1"/><text x="46.8242%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="46.5742%" y="437" width="0.0867%" height="15" fill="rgb(254,105,3)" fg:x="537" fg:w="1"/><text x="46.8242%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="46.5742%" y="421" width="0.0867%" height="15" fill="rgb(221,225,9)" fg:x="537" fg:w="1"/><text x="46.8242%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="46.5742%" y="405" width="0.0867%" height="15" fill="rgb(224,227,45)" fg:x="537" fg:w="1"/><text x="46.8242%" y="415.50"></text></g><g><title>aetheria::renderer::Renderer::new (1 samples, 0.09%)</title><rect x="46.6609%" y="677" width="0.0867%" height="15" fill="rgb(229,198,43)" fg:x="538" fg:w="1"/><text x="46.9109%" y="687.50"></text></g><g><title>vulkan::buffer::Buffer::new (1 samples, 0.09%)</title><rect x="46.6609%" y="661" width="0.0867%" height="15" fill="rgb(206,209,35)" fg:x="538" fg:w="1"/><text x="46.9109%" y="671.50"></text></g><g><title>gpu_allocator::vulkan::Allocator::allocate (1 samples, 0.09%)</title><rect x="46.6609%" y="645" width="0.0867%" height="15" fill="rgb(245,195,53)" fg:x="538" fg:w="1"/><text x="46.9109%" y="655.50"></text></g><g><title>gpu_allocator::vulkan::MemoryType::allocate (1 samples, 0.09%)</title><rect x="46.6609%" y="629" width="0.0867%" height="15" fill="rgb(240,92,26)" fg:x="538" fg:w="1"/><text x="46.9109%" y="639.50"></text></g><g><title>gpu_allocator::vulkan::MemoryBlock::new (1 samples, 0.09%)</title><rect x="46.6609%" y="613" width="0.0867%" height="15" fill="rgb(207,40,23)" fg:x="538" fg:w="1"/><text x="46.9109%" y="623.50"></text></g><g><title>gpu_allocator::allocator::free_list_allocator::FreeListAllocator::new (1 samples, 0.09%)</title><rect x="46.6609%" y="597" width="0.0867%" height="15" fill="rgb(223,111,35)" fg:x="538" fg:w="1"/><text x="46.9109%" y="607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.09%)</title><rect x="46.6609%" y="581" width="0.0867%" height="15" fill="rgb(229,147,28)" fg:x="538" fg:w="1"/><text x="46.9109%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.09%)</title><rect x="46.6609%" y="565" width="0.0867%" height="15" fill="rgb(211,29,28)" fg:x="538" fg:w="1"/><text x="46.9109%" y="575.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.09%)</title><rect x="46.6609%" y="549" width="0.0867%" height="15" fill="rgb(228,72,33)" fg:x="538" fg:w="1"/><text x="46.9109%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.09%)</title><rect x="46.6609%" y="533" width="0.0867%" height="15" fill="rgb(205,214,31)" fg:x="538" fg:w="1"/><text x="46.9109%" y="543.50"></text></g><g><title>aetheria::scenes::root::RootScene::new (1 samples, 0.09%)</title><rect x="46.7476%" y="677" width="0.0867%" height="15" fill="rgb(224,111,15)" fg:x="539" fg:w="1"/><text x="46.9976%" y="687.50"></text></g><g><title>aetheria::scenes::trees::Trees::new (1 samples, 0.09%)</title><rect x="46.7476%" y="661" width="0.0867%" height="15" fill="rgb(253,21,26)" fg:x="539" fg:w="1"/><text x="46.9976%" y="671.50"></text></g><g><title>aetheria::entities::tree::Tree::new (1 samples, 0.09%)</title><rect x="46.7476%" y="645" width="0.0867%" height="15" fill="rgb(245,139,43)" fg:x="539" fg:w="1"/><text x="46.9976%" y="655.50"></text></g><g><title>aetheria::renderer::RenderObjectBuilder::set_mesh (1 samples, 0.09%)</title><rect x="46.7476%" y="629" width="0.0867%" height="15" fill="rgb(252,170,7)" fg:x="539" fg:w="1"/><text x="46.9976%" y="639.50"></text></g><g><title>assets::MeshRegistry::load (1 samples, 0.09%)</title><rect x="46.7476%" y="613" width="0.0867%" height="15" fill="rgb(231,118,14)" fg:x="539" fg:w="1"/><text x="46.9976%" y="623.50"></text></g><g><title>tobj::load_obj (1 samples, 0.09%)</title><rect x="46.7476%" y="597" width="0.0867%" height="15" fill="rgb(238,83,0)" fg:x="539" fg:w="1"/><text x="46.9976%" y="607.50"></text></g><g><title>tobj::load_obj_buf (1 samples, 0.09%)</title><rect x="46.7476%" y="581" width="0.0867%" height="15" fill="rgb(221,39,39)" fg:x="539" fg:w="1"/><text x="46.9976%" y="591.50"></text></g><g><title>tobj::parse_floatn (1 samples, 0.09%)</title><rect x="46.7476%" y="565" width="0.0867%" height="15" fill="rgb(222,119,46)" fg:x="539" fg:w="1"/><text x="46.9976%" y="575.50"></text></g><g><title>core::num::dec2flt::&lt;impl core::str::traits::FromStr for f32&gt;::from_str (1 samples, 0.09%)</title><rect x="46.7476%" y="549" width="0.0867%" height="15" fill="rgb(222,165,49)" fg:x="539" fg:w="1"/><text x="46.9976%" y="559.50"></text></g><g><title>core::num::dec2flt::dec2flt (1 samples, 0.09%)</title><rect x="46.7476%" y="533" width="0.0867%" height="15" fill="rgb(219,113,52)" fg:x="539" fg:w="1"/><text x="46.9976%" y="543.50"></text></g><g><title>core::num::dec2flt::parse::parse_number (1 samples, 0.09%)</title><rect x="46.7476%" y="517" width="0.0867%" height="15" fill="rgb(214,7,15)" fg:x="539" fg:w="1"/><text x="46.9976%" y="527.50"></text></g><g><title>core::num::dec2flt::parse::parse_partial_number (1 samples, 0.09%)</title><rect x="46.7476%" y="501" width="0.0867%" height="15" fill="rgb(235,32,4)" fg:x="539" fg:w="1"/><text x="46.9976%" y="511.50"></text></g><g><title>core::num::dec2flt::parse::try_parse_digits (1 samples, 0.09%)</title><rect x="46.7476%" y="485" width="0.0867%" height="15" fill="rgb(238,90,54)" fg:x="539" fg:w="1"/><text x="46.9976%" y="495.50"></text></g><g><title>std::process::exit (1 samples, 0.09%)</title><rect x="46.8343%" y="629" width="0.0867%" height="15" fill="rgb(213,208,19)" fg:x="540" fg:w="1"/><text x="47.0843%" y="639.50"></text></g><g><title>std::sys::unix::os::exit (1 samples, 0.09%)</title><rect x="46.8343%" y="613" width="0.0867%" height="15" fill="rgb(233,156,4)" fg:x="540" fg:w="1"/><text x="47.0843%" y="623.50"></text></g><g><title>exit (1 samples, 0.09%)</title><rect x="46.8343%" y="597" width="0.0867%" height="15" fill="rgb(207,194,5)" fg:x="540" fg:w="1"/><text x="47.0843%" y="607.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="46.8343%" y="581" width="0.0867%" height="15" fill="rgb(206,111,30)" fg:x="540" fg:w="1"/><text x="47.0843%" y="591.50"></text></g><g><title>[amdvlk64.so] (1 samples, 0.09%)</title><rect x="46.8343%" y="565" width="0.0867%" height="15" fill="rgb(243,70,54)" fg:x="540" fg:w="1"/><text x="47.0843%" y="575.50"></text></g><g><title>[amdvlk64.so] (1 samples, 0.09%)</title><rect x="46.8343%" y="549" width="0.0867%" height="15" fill="rgb(242,28,8)" fg:x="540" fg:w="1"/><text x="47.0843%" y="559.50"></text></g><g><title>mio::poll::Poll::poll (2 samples, 0.17%)</title><rect x="47.0078%" y="613" width="0.1735%" height="15" fill="rgb(219,106,18)" fg:x="542" fg:w="2"/><text x="47.2578%" y="623.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (1 samples, 0.09%)</title><rect x="47.0945%" y="597" width="0.0867%" height="15" fill="rgb(244,222,10)" fg:x="543" fg:w="1"/><text x="47.3445%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.09%)</title><rect x="47.0945%" y="581" width="0.0867%" height="15" fill="rgb(236,179,52)" fg:x="543" fg:w="1"/><text x="47.3445%" y="591.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select::{{closure}} (1 samples, 0.09%)</title><rect x="47.0945%" y="565" width="0.0867%" height="15" fill="rgb(213,23,39)" fg:x="543" fg:w="1"/><text x="47.3445%" y="575.50"></text></g><g><title>&lt;core::time::Duration as core::ops::arith::Add&gt;::add (1 samples, 0.09%)</title><rect x="47.0945%" y="549" width="0.0867%" height="15" fill="rgb(238,48,10)" fg:x="543" fg:w="1"/><text x="47.3445%" y="559.50"></text></g><g><title>core::time::Duration::checked_add (1 samples, 0.09%)</title><rect x="47.0945%" y="533" width="0.0867%" height="15" fill="rgb(251,196,23)" fg:x="543" fg:w="1"/><text x="47.3445%" y="543.50"></text></g><g><title>core::time::Duration::new (1 samples, 0.09%)</title><rect x="47.0945%" y="517" width="0.0867%" height="15" fill="rgb(250,152,24)" fg:x="543" fg:w="1"/><text x="47.3445%" y="527.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.09%)</title><rect x="47.3547%" y="597" width="0.0867%" height="15" fill="rgb(209,150,17)" fg:x="546" fg:w="1"/><text x="47.6047%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::IntoIter&lt;winit::platform_impl::platform::WindowId&gt;&gt; (1 samples, 0.09%)</title><rect x="47.4415%" y="597" width="0.0867%" height="15" fill="rgb(234,202,34)" fg:x="547" fg:w="1"/><text x="47.6915%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::IntoIter&lt;winit::platform_impl::platform::WindowId&gt;&gt; (1 samples, 0.09%)</title><rect x="47.4415%" y="581" width="0.0867%" height="15" fill="rgb(253,148,53)" fg:x="547" fg:w="1"/><text x="47.6915%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::IntoIter&lt;winit::platform_impl::platform::WindowId,()&gt;&gt; (1 samples, 0.09%)</title><rect x="47.4415%" y="565" width="0.0867%" height="15" fill="rgb(218,129,16)" fg:x="547" fg:w="1"/><text x="47.6915%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawIntoIter&lt;(winit::platform_impl::platform::WindowId,())&gt;&gt; (1 samples, 0.09%)</title><rect x="47.4415%" y="549" width="0.0867%" height="15" fill="rgb(216,85,19)" fg:x="547" fg:w="1"/><text x="47.6915%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="47.4415%" y="533" width="0.0867%" height="15" fill="rgb(235,228,7)" fg:x="547" fg:w="1"/><text x="47.6915%" y="543.50"></text></g><g><title>[libc.so.6] (3 samples, 0.26%)</title><rect x="47.7016%" y="565" width="0.2602%" height="15" fill="rgb(245,175,0)" fg:x="550" fg:w="3"/><text x="47.9516%" y="575.50"></text></g><g><title>aetheria::input::Mouse::is_button_down (1 samples, 0.09%)</title><rect x="47.9618%" y="565" width="0.0867%" height="15" fill="rgb(208,168,36)" fg:x="553" fg:w="1"/><text x="48.2118%" y="575.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.09%)</title><rect x="47.9618%" y="549" width="0.0867%" height="15" fill="rgb(246,171,24)" fg:x="553" fg:w="1"/><text x="48.2118%" y="559.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.09%)</title><rect x="47.9618%" y="533" width="0.0867%" height="15" fill="rgb(215,142,24)" fg:x="553" fg:w="1"/><text x="48.2118%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.09%)</title><rect x="47.9618%" y="517" width="0.0867%" height="15" fill="rgb(250,187,7)" fg:x="553" fg:w="1"/><text x="48.2118%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.09%)</title><rect x="47.9618%" y="501" width="0.0867%" height="15" fill="rgb(228,66,33)" fg:x="553" fg:w="1"/><text x="48.2118%" y="511.50"></text></g><g><title>__rdl_alloc (1 samples, 0.09%)</title><rect x="48.2220%" y="357" width="0.0867%" height="15" fill="rgb(234,215,21)" fg:x="556" fg:w="1"/><text x="48.4720%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.17%)</title><rect x="48.2220%" y="533" width="0.1735%" height="15" fill="rgb(222,191,20)" fg:x="556" fg:w="2"/><text x="48.4720%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.17%)</title><rect x="48.2220%" y="517" width="0.1735%" height="15" fill="rgb(245,79,54)" fg:x="556" fg:w="2"/><text x="48.4720%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.17%)</title><rect x="48.2220%" y="501" width="0.1735%" height="15" fill="rgb(240,10,37)" fg:x="556" fg:w="2"/><text x="48.4720%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.17%)</title><rect x="48.2220%" y="485" width="0.1735%" height="15" fill="rgb(214,192,32)" fg:x="556" fg:w="2"/><text x="48.4720%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.17%)</title><rect x="48.2220%" y="469" width="0.1735%" height="15" fill="rgb(209,36,54)" fg:x="556" fg:w="2"/><text x="48.4720%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.17%)</title><rect x="48.2220%" y="453" width="0.1735%" height="15" fill="rgb(220,10,11)" fg:x="556" fg:w="2"/><text x="48.4720%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.17%)</title><rect x="48.2220%" y="437" width="0.1735%" height="15" fill="rgb(221,106,17)" fg:x="556" fg:w="2"/><text x="48.4720%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.17%)</title><rect x="48.2220%" y="421" width="0.1735%" height="15" fill="rgb(251,142,44)" fg:x="556" fg:w="2"/><text x="48.4720%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.17%)</title><rect x="48.2220%" y="405" width="0.1735%" height="15" fill="rgb(238,13,15)" fg:x="556" fg:w="2"/><text x="48.4720%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.17%)</title><rect x="48.2220%" y="389" width="0.1735%" height="15" fill="rgb(208,107,27)" fg:x="556" fg:w="2"/><text x="48.4720%" y="399.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.17%)</title><rect x="48.2220%" y="373" width="0.1735%" height="15" fill="rgb(205,136,37)" fg:x="556" fg:w="2"/><text x="48.4720%" y="383.50"></text></g><g><title>malloc (1 samples, 0.09%)</title><rect x="48.3088%" y="357" width="0.0867%" height="15" fill="rgb(250,205,27)" fg:x="557" fg:w="1"/><text x="48.5588%" y="367.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.09%)</title><rect x="48.3955%" y="517" width="0.0867%" height="15" fill="rgb(210,80,43)" fg:x="558" fg:w="1"/><text x="48.6455%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (1 samples, 0.09%)</title><rect x="48.3955%" y="501" width="0.0867%" height="15" fill="rgb(247,160,36)" fg:x="558" fg:w="1"/><text x="48.6455%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.09%)</title><rect x="48.3955%" y="485" width="0.0867%" height="15" fill="rgb(234,13,49)" fg:x="558" fg:w="1"/><text x="48.6455%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.09%)</title><rect x="48.3955%" y="469" width="0.0867%" height="15" fill="rgb(234,122,0)" fg:x="558" fg:w="1"/><text x="48.6455%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.09%)</title><rect x="48.3955%" y="453" width="0.0867%" height="15" fill="rgb(207,146,38)" fg:x="558" fg:w="1"/><text x="48.6455%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.09%)</title><rect x="48.3955%" y="437" width="0.0867%" height="15" fill="rgb(207,177,25)" fg:x="558" fg:w="1"/><text x="48.6455%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="48.3955%" y="421" width="0.0867%" height="15" fill="rgb(211,178,42)" fg:x="558" fg:w="1"/><text x="48.6455%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="48.3955%" y="405" width="0.0867%" height="15" fill="rgb(230,69,54)" fg:x="558" fg:w="1"/><text x="48.6455%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.09%)</title><rect x="48.3955%" y="389" width="0.0867%" height="15" fill="rgb(214,135,41)" fg:x="558" fg:w="1"/><text x="48.6455%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.09%)</title><rect x="48.3955%" y="373" width="0.0867%" height="15" fill="rgb(237,67,25)" fg:x="558" fg:w="1"/><text x="48.6455%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.09%)</title><rect x="48.3955%" y="357" width="0.0867%" height="15" fill="rgb(222,189,50)" fg:x="558" fg:w="1"/><text x="48.6455%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.09%)</title><rect x="48.3955%" y="341" width="0.0867%" height="15" fill="rgb(245,148,34)" fg:x="558" fg:w="1"/><text x="48.6455%" y="351.50"></text></g><g><title>malloc (1 samples, 0.09%)</title><rect x="48.3955%" y="325" width="0.0867%" height="15" fill="rgb(222,29,6)" fg:x="558" fg:w="1"/><text x="48.6455%" y="335.50"></text></g><g><title>[libc.so.6] (2 samples, 0.17%)</title><rect x="48.4822%" y="517" width="0.1735%" height="15" fill="rgb(221,189,43)" fg:x="559" fg:w="2"/><text x="48.7322%" y="527.50"></text></g><g><title>aetheria::camera::Camera::update_buffer (7 samples, 0.61%)</title><rect x="48.1353%" y="549" width="0.6071%" height="15" fill="rgb(207,36,27)" fg:x="555" fg:w="7"/><text x="48.3853%" y="559.50"></text></g><g><title>vulkan::buffer::Buffer::upload (4 samples, 0.35%)</title><rect x="48.3955%" y="533" width="0.3469%" height="15" fill="rgb(217,90,24)" fg:x="558" fg:w="4"/><text x="48.6455%" y="543.50"></text></g><g><title>vulkan::buffer::Buffer::upload_bytes (1 samples, 0.09%)</title><rect x="48.6557%" y="517" width="0.0867%" height="15" fill="rgb(224,66,35)" fg:x="561" fg:w="1"/><text x="48.9057%" y="527.50"></text></g><g><title>gpu_allocator::vulkan::Allocation::mapped_slice (1 samples, 0.09%)</title><rect x="48.6557%" y="501" width="0.0867%" height="15" fill="rgb(221,13,50)" fg:x="561" fg:w="1"/><text x="48.9057%" y="511.50"></text></g><g><title>gpu_allocator::vulkan::Allocation::mapped_ptr (1 samples, 0.09%)</title><rect x="48.6557%" y="485" width="0.0867%" height="15" fill="rgb(236,68,49)" fg:x="561" fg:w="1"/><text x="48.9057%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.26%)</title><rect x="48.8291%" y="469" width="0.2602%" height="15" fill="rgb(229,146,28)" fg:x="563" fg:w="3"/><text x="49.0791%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.26%)</title><rect x="48.8291%" y="453" width="0.2602%" height="15" fill="rgb(225,31,38)" fg:x="563" fg:w="3"/><text x="49.0791%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.26%)</title><rect x="48.8291%" y="437" width="0.2602%" height="15" fill="rgb(250,208,3)" fg:x="563" fg:w="3"/><text x="49.0791%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.26%)</title><rect x="48.8291%" y="421" width="0.2602%" height="15" fill="rgb(246,54,23)" fg:x="563" fg:w="3"/><text x="49.0791%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.26%)</title><rect x="48.8291%" y="405" width="0.2602%" height="15" fill="rgb(243,76,11)" fg:x="563" fg:w="3"/><text x="49.0791%" y="415.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.26%)</title><rect x="48.8291%" y="389" width="0.2602%" height="15" fill="rgb(245,21,50)" fg:x="563" fg:w="3"/><text x="49.0791%" y="399.50"></text></g><g><title>malloc (3 samples, 0.26%)</title><rect x="48.8291%" y="373" width="0.2602%" height="15" fill="rgb(228,9,43)" fg:x="563" fg:w="3"/><text x="49.0791%" y="383.50"></text></g><g><title>[libc.so.6] (3 samples, 0.26%)</title><rect x="48.8291%" y="357" width="0.2602%" height="15" fill="rgb(208,100,47)" fg:x="563" fg:w="3"/><text x="49.0791%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.78%)</title><rect x="48.8291%" y="533" width="0.7806%" height="15" fill="rgb(232,26,8)" fg:x="563" fg:w="9"/><text x="49.0791%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.78%)</title><rect x="48.8291%" y="517" width="0.7806%" height="15" fill="rgb(216,166,38)" fg:x="563" fg:w="9"/><text x="49.0791%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.78%)</title><rect x="48.8291%" y="501" width="0.7806%" height="15" fill="rgb(251,202,51)" fg:x="563" fg:w="9"/><text x="49.0791%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.78%)</title><rect x="48.8291%" y="485" width="0.7806%" height="15" fill="rgb(254,216,34)" fg:x="563" fg:w="9"/><text x="49.0791%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (6 samples, 0.52%)</title><rect x="49.0893%" y="469" width="0.5204%" height="15" fill="rgb(251,32,27)" fg:x="566" fg:w="6"/><text x="49.3393%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.52%)</title><rect x="49.0893%" y="453" width="0.5204%" height="15" fill="rgb(208,127,28)" fg:x="566" fg:w="6"/><text x="49.3393%" y="463.50"></text></g><g><title>[libc.so.6] (6 samples, 0.52%)</title><rect x="49.0893%" y="437" width="0.5204%" height="15" fill="rgb(224,137,22)" fg:x="566" fg:w="6"/><text x="49.3393%" y="447.50"></text></g><g><title>glam::swizzles::sse2::vec4_impl::&lt;impl glam::swizzles::vec_traits::Vec4Swizzles for glam::f32::sse2::vec4::Vec4&gt;::yyyy (2 samples, 0.17%)</title><rect x="50.2168%" y="485" width="0.1735%" height="15" fill="rgb(254,70,32)" fg:x="579" fg:w="2"/><text x="50.4668%" y="495.50"></text></g><g><title>core::core_arch::x86::sse::_mm_shuffle_ps (2 samples, 0.17%)</title><rect x="50.2168%" y="469" width="0.1735%" height="15" fill="rgb(229,75,37)" fg:x="579" fg:w="2"/><text x="50.4668%" y="479.50"></text></g><g><title>&lt;glam::f32::sse2::mat4::Mat4 as core::ops::arith::Mul&lt;glam::f32::sse2::vec4::Vec4&gt;&gt;::mul (3 samples, 0.26%)</title><rect x="50.2168%" y="517" width="0.2602%" height="15" fill="rgb(252,64,23)" fg:x="579" fg:w="3"/><text x="50.4668%" y="527.50"></text></g><g><title>glam::f32::sse2::mat4::Mat4::mul_vec4 (3 samples, 0.26%)</title><rect x="50.2168%" y="501" width="0.2602%" height="15" fill="rgb(232,162,48)" fg:x="579" fg:w="3"/><text x="50.4668%" y="511.50"></text></g><g><title>glam::swizzles::sse2::vec4_impl::&lt;impl glam::swizzles::vec_traits::Vec4Swizzles for glam::f32::sse2::vec4::Vec4&gt;::zzzz (1 samples, 0.09%)</title><rect x="50.3903%" y="485" width="0.0867%" height="15" fill="rgb(246,160,12)" fg:x="581" fg:w="1"/><text x="50.6403%" y="495.50"></text></g><g><title>core::core_arch::x86::sse::_mm_shuffle_ps (1 samples, 0.09%)</title><rect x="50.3903%" y="469" width="0.0867%" height="15" fill="rgb(247,166,0)" fg:x="581" fg:w="1"/><text x="50.6403%" y="479.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::max (3 samples, 0.26%)</title><rect x="50.4770%" y="517" width="0.2602%" height="15" fill="rgb(249,219,21)" fg:x="582" fg:w="3"/><text x="50.7270%" y="527.50"></text></g><g><title>aetheria::renderer::RenderPass::calculate_box (23 samples, 1.99%)</title><rect x="49.6097%" y="533" width="1.9948%" height="15" fill="rgb(205,209,3)" fg:x="572" fg:w="23"/><text x="49.8597%" y="543.50">a..</text></g><g><title>core::f32::&lt;impl f32&gt;::min (10 samples, 0.87%)</title><rect x="50.7372%" y="517" width="0.8673%" height="15" fill="rgb(243,44,1)" fg:x="585" fg:w="10"/><text x="50.9872%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.09%)</title><rect x="51.7780%" y="437" width="0.0867%" height="15" fill="rgb(206,159,16)" fg:x="597" fg:w="1"/><text x="52.0280%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (13 samples, 1.13%)</title><rect x="51.8647%" y="421" width="1.1275%" height="15" fill="rgb(244,77,30)" fg:x="598" fg:w="13"/><text x="52.1147%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (13 samples, 1.13%)</title><rect x="51.8647%" y="405" width="1.1275%" height="15" fill="rgb(218,69,12)" fg:x="598" fg:w="13"/><text x="52.1147%" y="415.50"></text></g><g><title>alloc::alloc::realloc (13 samples, 1.13%)</title><rect x="51.8647%" y="389" width="1.1275%" height="15" fill="rgb(212,87,7)" fg:x="598" fg:w="13"/><text x="52.1147%" y="399.50"></text></g><g><title>realloc (13 samples, 1.13%)</title><rect x="51.8647%" y="373" width="1.1275%" height="15" fill="rgb(245,114,25)" fg:x="598" fg:w="13"/><text x="52.1147%" y="383.50"></text></g><g><title>[libc.so.6] (9 samples, 0.78%)</title><rect x="52.2116%" y="357" width="0.7806%" height="15" fill="rgb(210,61,42)" fg:x="602" fg:w="9"/><text x="52.4616%" y="367.50"></text></g><g><title>[libc.so.6] (8 samples, 0.69%)</title><rect x="52.2984%" y="341" width="0.6938%" height="15" fill="rgb(211,52,33)" fg:x="603" fg:w="8"/><text x="52.5484%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="52.9055%" y="325" width="0.0867%" height="15" fill="rgb(234,58,33)" fg:x="610" fg:w="1"/><text x="53.1555%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (14 samples, 1.21%)</title><rect x="51.8647%" y="437" width="1.2142%" height="15" fill="rgb(220,115,36)" fg:x="598" fg:w="14"/><text x="52.1147%" y="447.50"></text></g><g><title>malloc (1 samples, 0.09%)</title><rect x="52.9922%" y="421" width="0.0867%" height="15" fill="rgb(243,153,54)" fg:x="611" fg:w="1"/><text x="53.2422%" y="431.50"></text></g><g><title>core::cmp::max (1 samples, 0.09%)</title><rect x="53.0789%" y="437" width="0.0867%" height="15" fill="rgb(251,47,18)" fg:x="612" fg:w="1"/><text x="53.3289%" y="447.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.09%)</title><rect x="53.0789%" y="421" width="0.0867%" height="15" fill="rgb(242,102,42)" fg:x="612" fg:w="1"/><text x="53.3289%" y="431.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.09%)</title><rect x="53.0789%" y="405" width="0.0867%" height="15" fill="rgb(234,31,38)" fg:x="612" fg:w="1"/><text x="53.3289%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (18 samples, 1.56%)</title><rect x="51.6912%" y="501" width="1.5611%" height="15" fill="rgb(221,117,51)" fg:x="596" fg:w="18"/><text x="51.9412%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (18 samples, 1.56%)</title><rect x="51.6912%" y="485" width="1.5611%" height="15" fill="rgb(212,20,18)" fg:x="596" fg:w="18"/><text x="51.9412%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (17 samples, 1.47%)</title><rect x="51.7780%" y="469" width="1.4744%" height="15" fill="rgb(245,133,36)" fg:x="597" fg:w="17"/><text x="52.0280%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (17 samples, 1.47%)</title><rect x="51.7780%" y="453" width="1.4744%" height="15" fill="rgb(212,6,19)" fg:x="597" fg:w="17"/><text x="52.0280%" y="463.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.09%)</title><rect x="53.1657%" y="437" width="0.0867%" height="15" fill="rgb(218,1,36)" fg:x="613" fg:w="1"/><text x="53.4157%" y="447.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.09%)</title><rect x="53.1657%" y="421" width="0.0867%" height="15" fill="rgb(246,84,54)" fg:x="613" fg:w="1"/><text x="53.4157%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (25 samples, 2.17%)</title><rect x="51.6045%" y="533" width="2.1683%" height="15" fill="rgb(242,110,6)" fg:x="595" fg:w="25"/><text x="51.8545%" y="543.50">a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (25 samples, 2.17%)</title><rect x="51.6045%" y="517" width="2.1683%" height="15" fill="rgb(214,47,5)" fg:x="595" fg:w="25"/><text x="51.8545%" y="527.50">a..</text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.52%)</title><rect x="53.2524%" y="501" width="0.5204%" height="15" fill="rgb(218,159,25)" fg:x="614" fg:w="6"/><text x="53.5024%" y="511.50"></text></g><g><title>[libc.so.6] (6 samples, 0.52%)</title><rect x="53.2524%" y="485" width="0.5204%" height="15" fill="rgb(215,211,28)" fg:x="614" fg:w="6"/><text x="53.5024%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (8 samples, 0.69%)</title><rect x="54.0330%" y="469" width="0.6938%" height="15" fill="rgb(238,59,32)" fg:x="623" fg:w="8"/><text x="54.2830%" y="479.50"></text></g><g><title>alloc::alloc::Global::grow_impl (8 samples, 0.69%)</title><rect x="54.0330%" y="453" width="0.6938%" height="15" fill="rgb(226,82,3)" fg:x="623" fg:w="8"/><text x="54.2830%" y="463.50"></text></g><g><title>alloc::alloc::realloc (8 samples, 0.69%)</title><rect x="54.0330%" y="437" width="0.6938%" height="15" fill="rgb(240,164,32)" fg:x="623" fg:w="8"/><text x="54.2830%" y="447.50"></text></g><g><title>realloc (8 samples, 0.69%)</title><rect x="54.0330%" y="421" width="0.6938%" height="15" fill="rgb(232,46,7)" fg:x="623" fg:w="8"/><text x="54.2830%" y="431.50"></text></g><g><title>[libc.so.6] (5 samples, 0.43%)</title><rect x="54.2931%" y="405" width="0.4337%" height="15" fill="rgb(229,129,53)" fg:x="626" fg:w="5"/><text x="54.5431%" y="415.50"></text></g><g><title>[libc.so.6] (5 samples, 0.43%)</title><rect x="54.2931%" y="389" width="0.4337%" height="15" fill="rgb(234,188,29)" fg:x="626" fg:w="5"/><text x="54.5431%" y="399.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="54.6401%" y="373" width="0.0867%" height="15" fill="rgb(246,141,4)" fg:x="630" fg:w="1"/><text x="54.8901%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (13 samples, 1.13%)</title><rect x="53.7728%" y="533" width="1.1275%" height="15" fill="rgb(229,23,39)" fg:x="620" fg:w="13"/><text x="54.0228%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (12 samples, 1.04%)</title><rect x="53.8595%" y="517" width="1.0408%" height="15" fill="rgb(206,12,3)" fg:x="621" fg:w="12"/><text x="54.1095%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.95%)</title><rect x="53.9462%" y="501" width="0.9540%" height="15" fill="rgb(252,226,20)" fg:x="622" fg:w="11"/><text x="54.1962%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.95%)</title><rect x="53.9462%" y="485" width="0.9540%" height="15" fill="rgb(216,123,35)" fg:x="622" fg:w="11"/><text x="54.1962%" y="495.50"></text></g><g><title>malloc (2 samples, 0.17%)</title><rect x="54.7268%" y="469" width="0.1735%" height="15" fill="rgb(212,68,40)" fg:x="631" fg:w="2"/><text x="54.9768%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="55.0737%" y="421" width="0.0867%" height="15" fill="rgb(254,125,32)" fg:x="635" fg:w="1"/><text x="55.3237%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1 samples, 0.09%)</title><rect x="55.0737%" y="405" width="0.0867%" height="15" fill="rgb(253,97,22)" fg:x="635" fg:w="1"/><text x="55.3237%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.09%)</title><rect x="55.0737%" y="389" width="0.0867%" height="15" fill="rgb(241,101,14)" fg:x="635" fg:w="1"/><text x="55.3237%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (1 samples, 0.09%)</title><rect x="55.0737%" y="373" width="0.0867%" height="15" fill="rgb(238,103,29)" fg:x="635" fg:w="1"/><text x="55.3237%" y="383.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.09%)</title><rect x="55.0737%" y="357" width="0.0867%" height="15" fill="rgb(233,195,47)" fg:x="635" fg:w="1"/><text x="55.3237%" y="367.50"></text></g><g><title>assets::MeshRegistry::get_meshes::{{closure}} (1 samples, 0.09%)</title><rect x="55.0737%" y="341" width="0.0867%" height="15" fill="rgb(246,218,30)" fg:x="635" fg:w="1"/><text x="55.3237%" y="351.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (1 samples, 0.09%)</title><rect x="55.0737%" y="325" width="0.0867%" height="15" fill="rgb(219,145,47)" fg:x="635" fg:w="1"/><text x="55.3237%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_update (1 samples, 0.09%)</title><rect x="55.0737%" y="309" width="0.0867%" height="15" fill="rgb(243,12,26)" fg:x="635" fg:w="1"/><text x="55.3237%" y="319.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade::{{closure}} (1 samples, 0.09%)</title><rect x="55.0737%" y="293" width="0.0867%" height="15" fill="rgb(214,87,16)" fg:x="635" fg:w="1"/><text x="55.3237%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.17%)</title><rect x="55.0737%" y="453" width="0.1735%" height="15" fill="rgb(208,99,42)" fg:x="635" fg:w="2"/><text x="55.3237%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.17%)</title><rect x="55.0737%" y="437" width="0.1735%" height="15" fill="rgb(253,99,2)" fg:x="635" fg:w="2"/><text x="55.3237%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.09%)</title><rect x="55.1605%" y="421" width="0.0867%" height="15" fill="rgb(220,168,23)" fg:x="636" fg:w="1"/><text x="55.4105%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.09%)</title><rect x="55.1605%" y="405" width="0.0867%" height="15" fill="rgb(242,38,24)" fg:x="636" fg:w="1"/><text x="55.4105%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.09%)</title><rect x="55.1605%" y="389" width="0.0867%" height="15" fill="rgb(225,182,9)" fg:x="636" fg:w="1"/><text x="55.4105%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.09%)</title><rect x="55.1605%" y="373" width="0.0867%" height="15" fill="rgb(243,178,37)" fg:x="636" fg:w="1"/><text x="55.4105%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.09%)</title><rect x="55.1605%" y="357" width="0.0867%" height="15" fill="rgb(232,139,19)" fg:x="636" fg:w="1"/><text x="55.4105%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.09%)</title><rect x="55.1605%" y="341" width="0.0867%" height="15" fill="rgb(225,201,24)" fg:x="636" fg:w="1"/><text x="55.4105%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.09%)</title><rect x="55.1605%" y="325" width="0.0867%" height="15" fill="rgb(221,47,46)" fg:x="636" fg:w="1"/><text x="55.4105%" y="335.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.09%)</title><rect x="55.1605%" y="309" width="0.0867%" height="15" fill="rgb(249,23,13)" fg:x="636" fg:w="1"/><text x="55.4105%" y="319.50"></text></g><g><title>realloc (1 samples, 0.09%)</title><rect x="55.1605%" y="293" width="0.0867%" height="15" fill="rgb(219,9,5)" fg:x="636" fg:w="1"/><text x="55.4105%" y="303.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="55.1605%" y="277" width="0.0867%" height="15" fill="rgb(254,171,16)" fg:x="636" fg:w="1"/><text x="55.4105%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.26%)</title><rect x="55.0737%" y="517" width="0.2602%" height="15" fill="rgb(230,171,20)" fg:x="635" fg:w="3"/><text x="55.3237%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.26%)</title><rect x="55.0737%" y="501" width="0.2602%" height="15" fill="rgb(210,71,41)" fg:x="635" fg:w="3"/><text x="55.3237%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.26%)</title><rect x="55.0737%" y="485" width="0.2602%" height="15" fill="rgb(206,173,20)" fg:x="635" fg:w="3"/><text x="55.3237%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.26%)</title><rect x="55.0737%" y="469" width="0.2602%" height="15" fill="rgb(233,88,34)" fg:x="635" fg:w="3"/><text x="55.3237%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="55.2472%" y="453" width="0.0867%" height="15" fill="rgb(223,209,46)" fg:x="637" fg:w="1"/><text x="55.4972%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1 samples, 0.09%)</title><rect x="55.2472%" y="437" width="0.0867%" height="15" fill="rgb(250,43,18)" fg:x="637" fg:w="1"/><text x="55.4972%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.09%)</title><rect x="55.2472%" y="421" width="0.0867%" height="15" fill="rgb(208,13,10)" fg:x="637" fg:w="1"/><text x="55.4972%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (1 samples, 0.09%)</title><rect x="55.2472%" y="405" width="0.0867%" height="15" fill="rgb(212,200,36)" fg:x="637" fg:w="1"/><text x="55.4972%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.09%)</title><rect x="55.2472%" y="389" width="0.0867%" height="15" fill="rgb(225,90,30)" fg:x="637" fg:w="1"/><text x="55.4972%" y="399.50"></text></g><g><title>assets::MeshRegistry::get_meshes::{{closure}} (1 samples, 0.09%)</title><rect x="55.2472%" y="373" width="0.0867%" height="15" fill="rgb(236,182,39)" fg:x="637" fg:w="1"/><text x="55.4972%" y="383.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (1 samples, 0.09%)</title><rect x="55.2472%" y="357" width="0.0867%" height="15" fill="rgb(212,144,35)" fg:x="637" fg:w="1"/><text x="55.4972%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_update (1 samples, 0.09%)</title><rect x="55.2472%" y="341" width="0.0867%" height="15" fill="rgb(228,63,44)" fg:x="637" fg:w="1"/><text x="55.4972%" y="351.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade::{{closure}} (1 samples, 0.09%)</title><rect x="55.2472%" y="325" width="0.0867%" height="15" fill="rgb(228,109,6)" fg:x="637" fg:w="1"/><text x="55.4972%" y="335.50"></text></g><g><title>assets::MeshRegistry::get_meshes (6 samples, 0.52%)</title><rect x="54.9003%" y="533" width="0.5204%" height="15" fill="rgb(238,117,24)" fg:x="633" fg:w="6"/><text x="55.1503%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::values (1 samples, 0.09%)</title><rect x="55.3339%" y="517" width="0.0867%" height="15" fill="rgb(242,26,26)" fg:x="638" fg:w="1"/><text x="55.5839%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (1 samples, 0.09%)</title><rect x="55.3339%" y="501" width="0.0867%" height="15" fill="rgb(221,92,48)" fg:x="638" fg:w="1"/><text x="55.5839%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (1 samples, 0.09%)</title><rect x="55.3339%" y="485" width="0.0867%" height="15" fill="rgb(209,209,32)" fg:x="638" fg:w="1"/><text x="55.5839%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (1 samples, 0.09%)</title><rect x="55.3339%" y="469" width="0.0867%" height="15" fill="rgb(221,70,22)" fg:x="638" fg:w="1"/><text x="55.5839%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::buckets (1 samples, 0.09%)</title><rect x="55.3339%" y="453" width="0.0867%" height="15" fill="rgb(248,145,5)" fg:x="638" fg:w="1"/><text x="55.5839%" y="463.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.09%)</title><rect x="55.5074%" y="389" width="0.0867%" height="15" fill="rgb(226,116,26)" fg:x="640" fg:w="1"/><text x="55.7574%" y="399.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="55.5074%" y="373" width="0.0867%" height="15" fill="rgb(244,5,17)" fg:x="640" fg:w="1"/><text x="55.7574%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.09%)</title><rect x="55.5074%" y="357" width="0.0867%" height="15" fill="rgb(252,159,33)" fg:x="640" fg:w="1"/><text x="55.7574%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3 samples, 0.26%)</title><rect x="55.4206%" y="453" width="0.2602%" height="15" fill="rgb(206,71,0)" fg:x="639" fg:w="3"/><text x="55.6706%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.17%)</title><rect x="55.5074%" y="437" width="0.1735%" height="15" fill="rgb(233,118,54)" fg:x="640" fg:w="2"/><text x="55.7574%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.17%)</title><rect x="55.5074%" y="421" width="0.1735%" height="15" fill="rgb(234,83,48)" fg:x="640" fg:w="2"/><text x="55.7574%" y="431.50"></text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (2 samples, 0.17%)</title><rect x="55.5074%" y="405" width="0.1735%" height="15" fill="rgb(228,3,54)" fg:x="640" fg:w="2"/><text x="55.7574%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::into_iter::IntoIter&lt;&amp;aetheria::renderer::RenderObject&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="55.5941%" y="389" width="0.0867%" height="15" fill="rgb(226,155,13)" fg:x="641" fg:w="1"/><text x="55.8441%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;&amp;aetheria::renderer::RenderObject&gt;&gt; (1 samples, 0.09%)</title><rect x="55.5941%" y="373" width="0.0867%" height="15" fill="rgb(241,28,37)" fg:x="641" fg:w="1"/><text x="55.8441%" y="383.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="55.5941%" y="357" width="0.0867%" height="15" fill="rgb(233,93,10)" fg:x="641" fg:w="1"/><text x="55.8441%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;&amp;aetheria::renderer::RenderObject,alloc::alloc::Global&gt;&gt; (1 samples, 0.09%)</title><rect x="55.5941%" y="341" width="0.0867%" height="15" fill="rgb(225,113,19)" fg:x="641" fg:w="1"/><text x="55.8441%" y="351.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="55.5941%" y="325" width="0.0867%" height="15" fill="rgb(241,2,18)" fg:x="641" fg:w="1"/><text x="55.8441%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;aetheria::renderer::RenderObject&gt;&gt; (1 samples, 0.09%)</title><rect x="55.5941%" y="309" width="0.0867%" height="15" fill="rgb(228,207,21)" fg:x="641" fg:w="1"/><text x="55.8441%" y="319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="55.5941%" y="293" width="0.0867%" height="15" fill="rgb(213,211,35)" fg:x="641" fg:w="1"/><text x="55.8441%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.09%)</title><rect x="55.5941%" y="277" width="0.0867%" height="15" fill="rgb(209,83,10)" fg:x="641" fg:w="1"/><text x="55.8441%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.35%)</title><rect x="55.6808%" y="421" width="0.3469%" height="15" fill="rgb(209,164,1)" fg:x="642" fg:w="4"/><text x="55.9308%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.35%)</title><rect x="55.6808%" y="405" width="0.3469%" height="15" fill="rgb(213,184,43)" fg:x="642" fg:w="4"/><text x="55.9308%" y="415.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold (4 samples, 0.35%)</title><rect x="55.6808%" y="389" width="0.3469%" height="15" fill="rgb(231,61,34)" fg:x="642" fg:w="4"/><text x="55.9308%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.35%)</title><rect x="55.6808%" y="373" width="0.3469%" height="15" fill="rgb(235,75,3)" fg:x="642" fg:w="4"/><text x="55.9308%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.35%)</title><rect x="55.6808%" y="357" width="0.3469%" height="15" fill="rgb(220,106,47)" fg:x="642" fg:w="4"/><text x="55.9308%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.35%)</title><rect x="55.6808%" y="341" width="0.3469%" height="15" fill="rgb(210,196,33)" fg:x="642" fg:w="4"/><text x="55.9308%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.35%)</title><rect x="55.6808%" y="325" width="0.3469%" height="15" fill="rgb(229,154,42)" fg:x="642" fg:w="4"/><text x="55.9308%" y="335.50"></text></g><g><title>core::iter::adapters::copied::copy_fold::{{closure}} (4 samples, 0.35%)</title><rect x="55.6808%" y="309" width="0.3469%" height="15" fill="rgb(228,114,26)" fg:x="642" fg:w="4"/><text x="55.9308%" y="319.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (4 samples, 0.35%)</title><rect x="55.6808%" y="293" width="0.3469%" height="15" fill="rgb(208,144,1)" fg:x="642" fg:w="4"/><text x="55.9308%" y="303.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold::flatten::{{closure}} (4 samples, 0.35%)</title><rect x="55.6808%" y="277" width="0.3469%" height="15" fill="rgb(239,112,37)" fg:x="642" fg:w="4"/><text x="55.9308%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (4 samples, 0.35%)</title><rect x="55.6808%" y="261" width="0.3469%" height="15" fill="rgb(210,96,50)" fg:x="642" fg:w="4"/><text x="55.9308%" y="271.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.35%)</title><rect x="55.6808%" y="245" width="0.3469%" height="15" fill="rgb(222,178,2)" fg:x="642" fg:w="4"/><text x="55.9308%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::by_ref_sized::ByRefSized&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.35%)</title><rect x="55.6808%" y="229" width="0.3469%" height="15" fill="rgb(226,74,18)" fg:x="642" fg:w="4"/><text x="55.9308%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.35%)</title><rect x="55.6808%" y="213" width="0.3469%" height="15" fill="rgb(225,67,54)" fg:x="642" fg:w="4"/><text x="55.9308%" y="223.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_2::{{closure}} (4 samples, 0.35%)</title><rect x="55.6808%" y="197" width="0.3469%" height="15" fill="rgb(251,92,32)" fg:x="642" fg:w="4"/><text x="55.9308%" y="207.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (4 samples, 0.35%)</title><rect x="55.6808%" y="181" width="0.3469%" height="15" fill="rgb(228,149,22)" fg:x="642" fg:w="4"/><text x="55.9308%" y="191.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (4 samples, 0.35%)</title><rect x="55.6808%" y="165" width="0.3469%" height="15" fill="rgb(243,54,13)" fg:x="642" fg:w="4"/><text x="55.9308%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (4 samples, 0.35%)</title><rect x="55.6808%" y="149" width="0.3469%" height="15" fill="rgb(243,180,28)" fg:x="642" fg:w="4"/><text x="55.9308%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (4 samples, 0.35%)</title><rect x="55.6808%" y="133" width="0.3469%" height="15" fill="rgb(208,167,24)" fg:x="642" fg:w="4"/><text x="55.9308%" y="143.50"></text></g><g><title>core::ptr::write (4 samples, 0.35%)</title><rect x="55.6808%" y="117" width="0.3469%" height="15" fill="rgb(245,73,45)" fg:x="642" fg:w="4"/><text x="55.9308%" y="127.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (9 samples, 0.78%)</title><rect x="55.4206%" y="469" width="0.7806%" height="15" fill="rgb(237,203,48)" fg:x="639" fg:w="9"/><text x="55.6706%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (6 samples, 0.52%)</title><rect x="55.6808%" y="453" width="0.5204%" height="15" fill="rgb(211,197,16)" fg:x="642" fg:w="6"/><text x="55.9308%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6 samples, 0.52%)</title><rect x="55.6808%" y="437" width="0.5204%" height="15" fill="rgb(243,99,51)" fg:x="642" fg:w="6"/><text x="55.9308%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.17%)</title><rect x="56.0278%" y="421" width="0.1735%" height="15" fill="rgb(215,123,29)" fg:x="646" fg:w="2"/><text x="56.2778%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.17%)</title><rect x="56.0278%" y="405" width="0.1735%" height="15" fill="rgb(239,186,37)" fg:x="646" fg:w="2"/><text x="56.2778%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.17%)</title><rect x="56.0278%" y="389" width="0.1735%" height="15" fill="rgb(252,136,39)" fg:x="646" fg:w="2"/><text x="56.2778%" y="399.50"></text></g><g><title>core::iter::adapters::copied::copy_fold::{{closure}} (1 samples, 0.09%)</title><rect x="56.1145%" y="373" width="0.0867%" height="15" fill="rgb(223,213,32)" fg:x="647" fg:w="1"/><text x="56.3645%" y="383.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.09%)</title><rect x="56.1145%" y="357" width="0.0867%" height="15" fill="rgb(233,115,5)" fg:x="647" fg:w="1"/><text x="56.3645%" y="367.50"></text></g><g><title>aetheria::renderer::RenderPass::set_geometry::{{closure}} (1 samples, 0.09%)</title><rect x="56.1145%" y="341" width="0.0867%" height="15" fill="rgb(207,226,44)" fg:x="647" fg:w="1"/><text x="56.3645%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.52%)</title><rect x="56.2012%" y="149" width="0.5204%" height="15" fill="rgb(208,126,0)" fg:x="648" fg:w="6"/><text x="56.4512%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (5 samples, 0.43%)</title><rect x="56.2879%" y="133" width="0.4337%" height="15" fill="rgb(244,66,21)" fg:x="649" fg:w="5"/><text x="56.5379%" y="143.50"></text></g><g><title>alloc::alloc::Global::grow_impl (5 samples, 0.43%)</title><rect x="56.2879%" y="117" width="0.4337%" height="15" fill="rgb(222,97,12)" fg:x="649" fg:w="5"/><text x="56.5379%" y="127.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.43%)</title><rect x="56.2879%" y="101" width="0.4337%" height="15" fill="rgb(219,213,19)" fg:x="649" fg:w="5"/><text x="56.5379%" y="111.50"></text></g><g><title>realloc (5 samples, 0.43%)</title><rect x="56.2879%" y="85" width="0.4337%" height="15" fill="rgb(252,169,30)" fg:x="649" fg:w="5"/><text x="56.5379%" y="95.50"></text></g><g><title>[libc.so.6] (5 samples, 0.43%)</title><rect x="56.2879%" y="69" width="0.4337%" height="15" fill="rgb(206,32,51)" fg:x="649" fg:w="5"/><text x="56.5379%" y="79.50"></text></g><g><title>[libc.so.6] (5 samples, 0.43%)</title><rect x="56.2879%" y="53" width="0.4337%" height="15" fill="rgb(250,172,42)" fg:x="649" fg:w="5"/><text x="56.5379%" y="63.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (7 samples, 0.61%)</title><rect x="56.2012%" y="245" width="0.6071%" height="15" fill="rgb(209,34,43)" fg:x="648" fg:w="7"/><text x="56.4512%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (7 samples, 0.61%)</title><rect x="56.2012%" y="229" width="0.6071%" height="15" fill="rgb(223,11,35)" fg:x="648" fg:w="7"/><text x="56.4512%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (7 samples, 0.61%)</title><rect x="56.2012%" y="213" width="0.6071%" height="15" fill="rgb(251,219,26)" fg:x="648" fg:w="7"/><text x="56.4512%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.61%)</title><rect x="56.2012%" y="197" width="0.6071%" height="15" fill="rgb(231,119,3)" fg:x="648" fg:w="7"/><text x="56.4512%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.61%)</title><rect x="56.2012%" y="181" width="0.6071%" height="15" fill="rgb(216,97,11)" fg:x="648" fg:w="7"/><text x="56.4512%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.61%)</title><rect x="56.2012%" y="165" width="0.6071%" height="15" fill="rgb(223,59,9)" fg:x="648" fg:w="7"/><text x="56.4512%" y="175.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.09%)</title><rect x="56.7216%" y="149" width="0.0867%" height="15" fill="rgb(233,93,31)" fg:x="654" fg:w="1"/><text x="56.9716%" y="159.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.09%)</title><rect x="56.7216%" y="133" width="0.0867%" height="15" fill="rgb(239,81,33)" fg:x="654" fg:w="1"/><text x="56.9716%" y="143.50"></text></g><g><title>&lt;aetheria::scenes::trees::Trees as aetheria::renderer::Renderable&gt;::get_objects (8 samples, 0.69%)</title><rect x="56.2012%" y="325" width="0.6938%" height="15" fill="rgb(213,120,34)" fg:x="648" fg:w="8"/><text x="56.4512%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (8 samples, 0.69%)</title><rect x="56.2012%" y="309" width="0.6938%" height="15" fill="rgb(243,49,53)" fg:x="648" fg:w="8"/><text x="56.4512%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 0.69%)</title><rect x="56.2012%" y="293" width="0.6938%" height="15" fill="rgb(247,216,33)" fg:x="648" fg:w="8"/><text x="56.4512%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.69%)</title><rect x="56.2012%" y="277" width="0.6938%" height="15" fill="rgb(226,26,14)" fg:x="648" fg:w="8"/><text x="56.4512%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (8 samples, 0.69%)</title><rect x="56.2012%" y="261" width="0.6938%" height="15" fill="rgb(215,49,53)" fg:x="648" fg:w="8"/><text x="56.4512%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="56.8083%" y="245" width="0.0867%" height="15" fill="rgb(245,162,40)" fg:x="655" fg:w="1"/><text x="57.0583%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="56.8083%" y="229" width="0.0867%" height="15" fill="rgb(229,68,17)" fg:x="655" fg:w="1"/><text x="57.0583%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="56.8083%" y="213" width="0.0867%" height="15" fill="rgb(213,182,10)" fg:x="655" fg:w="1"/><text x="57.0583%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.09%)</title><rect x="56.8083%" y="197" width="0.0867%" height="15" fill="rgb(245,125,30)" fg:x="655" fg:w="1"/><text x="57.0583%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="56.8083%" y="181" width="0.0867%" height="15" fill="rgb(232,202,2)" fg:x="655" fg:w="1"/><text x="57.0583%" y="191.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.09%)</title><rect x="56.8083%" y="165" width="0.0867%" height="15" fill="rgb(237,140,51)" fg:x="655" fg:w="1"/><text x="57.0583%" y="175.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.09%)</title><rect x="56.8083%" y="149" width="0.0867%" height="15" fill="rgb(236,157,25)" fg:x="655" fg:w="1"/><text x="57.0583%" y="159.50"></text></g><g><title>&lt;aetheria::scenes::trees::Trees as aetheria::renderer::Renderable&gt;::get_objects::{{closure}} (1 samples, 0.09%)</title><rect x="56.8083%" y="133" width="0.0867%" height="15" fill="rgb(219,209,0)" fg:x="655" fg:w="1"/><text x="57.0583%" y="143.50"></text></g><g><title>&lt;aetheria::entities::tree::Tree as aetheria::renderer::Renderable&gt;::get_objects (1 samples, 0.09%)</title><rect x="56.8083%" y="117" width="0.0867%" height="15" fill="rgb(240,116,54)" fg:x="655" fg:w="1"/><text x="57.0583%" y="127.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.09%)</title><rect x="56.8083%" y="101" width="0.0867%" height="15" fill="rgb(216,10,36)" fg:x="655" fg:w="1"/><text x="57.0583%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.09%)</title><rect x="56.8083%" y="85" width="0.0867%" height="15" fill="rgb(222,72,44)" fg:x="655" fg:w="1"/><text x="57.0583%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.09%)</title><rect x="56.8083%" y="69" width="0.0867%" height="15" fill="rgb(232,159,9)" fg:x="655" fg:w="1"/><text x="57.0583%" y="79.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.09%)</title><rect x="56.8083%" y="53" width="0.0867%" height="15" fill="rgb(210,39,32)" fg:x="655" fg:w="1"/><text x="57.0583%" y="63.50"></text></g><g><title>malloc (1 samples, 0.09%)</title><rect x="56.8083%" y="37" width="0.0867%" height="15" fill="rgb(216,194,45)" fg:x="655" fg:w="1"/><text x="57.0583%" y="47.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.17%)</title><rect x="56.8951%" y="181" width="0.1735%" height="15" fill="rgb(218,18,35)" fg:x="656" fg:w="2"/><text x="57.1451%" y="191.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.17%)</title><rect x="56.8951%" y="165" width="0.1735%" height="15" fill="rgb(207,83,51)" fg:x="656" fg:w="2"/><text x="57.1451%" y="175.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.17%)</title><rect x="56.8951%" y="149" width="0.1735%" height="15" fill="rgb(225,63,43)" fg:x="656" fg:w="2"/><text x="57.1451%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as aetheria::renderer::Renderable&gt;::get_objects::{{closure}} (2 samples, 0.17%)</title><rect x="56.8951%" y="133" width="0.1735%" height="15" fill="rgb(207,57,36)" fg:x="656" fg:w="2"/><text x="57.1451%" y="143.50"></text></g><g><title>&lt;aetheria::entities::firefly::Firefly as aetheria::renderer::Renderable&gt;::get_objects (2 samples, 0.17%)</title><rect x="56.8951%" y="117" width="0.1735%" height="15" fill="rgb(216,99,33)" fg:x="656" fg:w="2"/><text x="57.1451%" y="127.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as aetheria::renderer::Renderable&gt;::get_objects (3 samples, 0.26%)</title><rect x="56.8951%" y="325" width="0.2602%" height="15" fill="rgb(225,42,16)" fg:x="656" fg:w="3"/><text x="57.1451%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.26%)</title><rect x="56.8951%" y="309" width="0.2602%" height="15" fill="rgb(220,201,45)" fg:x="656" fg:w="3"/><text x="57.1451%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.26%)</title><rect x="56.8951%" y="293" width="0.2602%" height="15" fill="rgb(225,33,4)" fg:x="656" fg:w="3"/><text x="57.1451%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.26%)</title><rect x="56.8951%" y="277" width="0.2602%" height="15" fill="rgb(224,33,50)" fg:x="656" fg:w="3"/><text x="57.1451%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.26%)</title><rect x="56.8951%" y="261" width="0.2602%" height="15" fill="rgb(246,198,51)" fg:x="656" fg:w="3"/><text x="57.1451%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.26%)</title><rect x="56.8951%" y="245" width="0.2602%" height="15" fill="rgb(205,22,4)" fg:x="656" fg:w="3"/><text x="57.1451%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.26%)</title><rect x="56.8951%" y="229" width="0.2602%" height="15" fill="rgb(206,3,8)" fg:x="656" fg:w="3"/><text x="57.1451%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.26%)</title><rect x="56.8951%" y="213" width="0.2602%" height="15" fill="rgb(251,23,15)" fg:x="656" fg:w="3"/><text x="57.1451%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (3 samples, 0.26%)</title><rect x="56.8951%" y="197" width="0.2602%" height="15" fill="rgb(252,88,28)" fg:x="656" fg:w="3"/><text x="57.1451%" y="207.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (1 samples, 0.09%)</title><rect x="57.0685%" y="181" width="0.0867%" height="15" fill="rgb(212,127,14)" fg:x="658" fg:w="1"/><text x="57.3185%" y="191.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.17%)</title><rect x="57.1552%" y="325" width="0.1735%" height="15" fill="rgb(247,145,37)" fg:x="659" fg:w="2"/><text x="57.4052%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.17%)</title><rect x="57.1552%" y="309" width="0.1735%" height="15" fill="rgb(209,117,53)" fg:x="659" fg:w="2"/><text x="57.4052%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.17%)</title><rect x="57.1552%" y="293" width="0.1735%" height="15" fill="rgb(212,90,42)" fg:x="659" fg:w="2"/><text x="57.4052%" y="303.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.17%)</title><rect x="57.1552%" y="277" width="0.1735%" height="15" fill="rgb(218,164,37)" fg:x="659" fg:w="2"/><text x="57.4052%" y="287.50"></text></g><g><title>malloc (2 samples, 0.17%)</title><rect x="57.1552%" y="261" width="0.1735%" height="15" fill="rgb(246,65,34)" fg:x="659" fg:w="2"/><text x="57.4052%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 1.21%)</title><rect x="56.2012%" y="469" width="1.2142%" height="15" fill="rgb(231,100,33)" fg:x="648" fg:w="14"/><text x="56.4512%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 1.21%)</title><rect x="56.2012%" y="453" width="1.2142%" height="15" fill="rgb(228,126,14)" fg:x="648" fg:w="14"/><text x="56.4512%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 1.21%)</title><rect x="56.2012%" y="437" width="1.2142%" height="15" fill="rgb(215,173,21)" fg:x="648" fg:w="14"/><text x="56.4512%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (14 samples, 1.21%)</title><rect x="56.2012%" y="421" width="1.2142%" height="15" fill="rgb(210,6,40)" fg:x="648" fg:w="14"/><text x="56.4512%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 1.21%)</title><rect x="56.2012%" y="405" width="1.2142%" height="15" fill="rgb(212,48,18)" fg:x="648" fg:w="14"/><text x="56.4512%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (14 samples, 1.21%)</title><rect x="56.2012%" y="389" width="1.2142%" height="15" fill="rgb(230,214,11)" fg:x="648" fg:w="14"/><text x="56.4512%" y="399.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (14 samples, 1.21%)</title><rect x="56.2012%" y="373" width="1.2142%" height="15" fill="rgb(254,105,39)" fg:x="648" fg:w="14"/><text x="56.4512%" y="383.50"></text></g><g><title>aetheria::renderer::RenderPass::set_geometry::{{closure}} (14 samples, 1.21%)</title><rect x="56.2012%" y="357" width="1.2142%" height="15" fill="rgb(245,158,5)" fg:x="648" fg:w="14"/><text x="56.4512%" y="367.50"></text></g><g><title>&lt;aetheria::scenes::root::RootScene as aetheria::renderer::Renderable&gt;::get_objects (14 samples, 1.21%)</title><rect x="56.2012%" y="341" width="1.2142%" height="15" fill="rgb(249,208,11)" fg:x="648" fg:w="14"/><text x="56.4512%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.09%)</title><rect x="57.3287%" y="325" width="0.0867%" height="15" fill="rgb(210,39,28)" fg:x="661" fg:w="1"/><text x="57.5787%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.09%)</title><rect x="57.3287%" y="309" width="0.0867%" height="15" fill="rgb(211,56,53)" fg:x="661" fg:w="1"/><text x="57.5787%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.09%)</title><rect x="57.3287%" y="293" width="0.0867%" height="15" fill="rgb(226,201,30)" fg:x="661" fg:w="1"/><text x="57.5787%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.09%)</title><rect x="57.3287%" y="277" width="0.0867%" height="15" fill="rgb(239,101,34)" fg:x="661" fg:w="1"/><text x="57.5787%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="57.3287%" y="261" width="0.0867%" height="15" fill="rgb(226,209,5)" fg:x="661" fg:w="1"/><text x="57.5787%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="57.3287%" y="245" width="0.0867%" height="15" fill="rgb(250,105,47)" fg:x="661" fg:w="1"/><text x="57.5787%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="57.3287%" y="229" width="0.0867%" height="15" fill="rgb(230,72,3)" fg:x="661" fg:w="1"/><text x="57.5787%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="57.3287%" y="213" width="0.0867%" height="15" fill="rgb(232,218,39)" fg:x="661" fg:w="1"/><text x="57.5787%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.09%)</title><rect x="57.3287%" y="197" width="0.0867%" height="15" fill="rgb(248,166,6)" fg:x="661" fg:w="1"/><text x="57.5787%" y="207.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.09%)</title><rect x="57.3287%" y="181" width="0.0867%" height="15" fill="rgb(247,89,20)" fg:x="661" fg:w="1"/><text x="57.5787%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (24 samples, 2.08%)</title><rect x="55.4206%" y="533" width="2.0815%" height="15" fill="rgb(248,130,54)" fg:x="639" fg:w="24"/><text x="55.6706%" y="543.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (24 samples, 2.08%)</title><rect x="55.4206%" y="517" width="2.0815%" height="15" fill="rgb(234,196,4)" fg:x="639" fg:w="24"/><text x="55.6706%" y="527.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (24 samples, 2.08%)</title><rect x="55.4206%" y="501" width="2.0815%" height="15" fill="rgb(250,143,31)" fg:x="639" fg:w="24"/><text x="55.6706%" y="511.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (24 samples, 2.08%)</title><rect x="55.4206%" y="485" width="2.0815%" height="15" fill="rgb(211,110,34)" fg:x="639" fg:w="24"/><text x="55.6706%" y="495.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.09%)</title><rect x="57.4154%" y="469" width="0.0867%" height="15" fill="rgb(215,124,48)" fg:x="662" fg:w="1"/><text x="57.6654%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="57.4154%" y="453" width="0.0867%" height="15" fill="rgb(216,46,13)" fg:x="662" fg:w="1"/><text x="57.6654%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="57.4154%" y="437" width="0.0867%" height="15" fill="rgb(205,184,25)" fg:x="662" fg:w="1"/><text x="57.6654%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.09%)</title><rect x="57.4154%" y="421" width="0.0867%" height="15" fill="rgb(228,1,10)" fg:x="662" fg:w="1"/><text x="57.6654%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.09%)</title><rect x="57.4154%" y="405" width="0.0867%" height="15" fill="rgb(213,116,27)" fg:x="662" fg:w="1"/><text x="57.6654%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.09%)</title><rect x="57.4154%" y="389" width="0.0867%" height="15" fill="rgb(241,95,50)" fg:x="662" fg:w="1"/><text x="57.6654%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.09%)</title><rect x="57.4154%" y="373" width="0.0867%" height="15" fill="rgb(238,48,32)" fg:x="662" fg:w="1"/><text x="57.6654%" y="383.50"></text></g><g><title>malloc (1 samples, 0.09%)</title><rect x="57.4154%" y="357" width="0.0867%" height="15" fill="rgb(235,113,49)" fg:x="662" fg:w="1"/><text x="57.6654%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;assets::Vertex&gt;&gt; (4 samples, 0.35%)</title><rect x="57.5022%" y="533" width="0.3469%" height="15" fill="rgb(205,127,43)" fg:x="663" fg:w="4"/><text x="57.7522%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;assets::Vertex&gt;&gt; (4 samples, 0.35%)</title><rect x="57.5022%" y="517" width="0.3469%" height="15" fill="rgb(250,162,2)" fg:x="663" fg:w="4"/><text x="57.7522%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.35%)</title><rect x="57.5022%" y="501" width="0.3469%" height="15" fill="rgb(220,13,41)" fg:x="663" fg:w="4"/><text x="57.7522%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.35%)</title><rect x="57.5022%" y="485" width="0.3469%" height="15" fill="rgb(249,221,25)" fg:x="663" fg:w="4"/><text x="57.7522%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.35%)</title><rect x="57.5022%" y="469" width="0.3469%" height="15" fill="rgb(215,208,19)" fg:x="663" fg:w="4"/><text x="57.7522%" y="479.50"></text></g><g><title>cfree (4 samples, 0.35%)</title><rect x="57.5022%" y="453" width="0.3469%" height="15" fill="rgb(236,175,2)" fg:x="663" fg:w="4"/><text x="57.7522%" y="463.50"></text></g><g><title>[libc.so.6] (2 samples, 0.17%)</title><rect x="57.6756%" y="437" width="0.1735%" height="15" fill="rgb(241,52,2)" fg:x="665" fg:w="2"/><text x="57.9256%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;i32&gt;&gt; (3 samples, 0.26%)</title><rect x="57.8491%" y="533" width="0.2602%" height="15" fill="rgb(248,140,14)" fg:x="667" fg:w="3"/><text x="58.0991%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;i32&gt;&gt; (3 samples, 0.26%)</title><rect x="57.8491%" y="517" width="0.2602%" height="15" fill="rgb(253,22,42)" fg:x="667" fg:w="3"/><text x="58.0991%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.26%)</title><rect x="57.8491%" y="501" width="0.2602%" height="15" fill="rgb(234,61,47)" fg:x="667" fg:w="3"/><text x="58.0991%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.26%)</title><rect x="57.8491%" y="485" width="0.2602%" height="15" fill="rgb(208,226,15)" fg:x="667" fg:w="3"/><text x="58.0991%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.26%)</title><rect x="57.8491%" y="469" width="0.2602%" height="15" fill="rgb(217,221,4)" fg:x="667" fg:w="3"/><text x="58.0991%" y="479.50"></text></g><g><title>cfree (3 samples, 0.26%)</title><rect x="57.8491%" y="453" width="0.2602%" height="15" fill="rgb(212,174,34)" fg:x="667" fg:w="3"/><text x="58.0991%" y="463.50"></text></g><g><title>[libc.so.6] (2 samples, 0.17%)</title><rect x="57.9358%" y="437" width="0.1735%" height="15" fill="rgb(253,83,4)" fg:x="668" fg:w="2"/><text x="58.1858%" y="447.50"></text></g><g><title>[libc.so.6] (2 samples, 0.17%)</title><rect x="57.9358%" y="421" width="0.1735%" height="15" fill="rgb(250,195,49)" fg:x="668" fg:w="2"/><text x="58.1858%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.09%)</title><rect x="58.1093%" y="533" width="0.0867%" height="15" fill="rgb(241,192,25)" fg:x="670" fg:w="1"/><text x="58.3593%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.09%)</title><rect x="58.1093%" y="517" width="0.0867%" height="15" fill="rgb(208,124,10)" fg:x="670" fg:w="1"/><text x="58.3593%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="58.1093%" y="501" width="0.0867%" height="15" fill="rgb(222,33,0)" fg:x="670" fg:w="1"/><text x="58.3593%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.09%)</title><rect x="58.1093%" y="485" width="0.0867%" height="15" fill="rgb(234,209,28)" fg:x="670" fg:w="1"/><text x="58.3593%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.09%)</title><rect x="58.1093%" y="469" width="0.0867%" height="15" fill="rgb(224,11,23)" fg:x="670" fg:w="1"/><text x="58.3593%" y="479.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.09%)</title><rect x="58.1093%" y="453" width="0.0867%" height="15" fill="rgb(232,99,1)" fg:x="670" fg:w="1"/><text x="58.3593%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.09%)</title><rect x="58.1093%" y="437" width="0.0867%" height="15" fill="rgb(237,95,45)" fg:x="670" fg:w="1"/><text x="58.3593%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;gpu_allocator::vulkan::Allocator&gt;&gt; (1 samples, 0.09%)</title><rect x="58.1960%" y="501" width="0.0867%" height="15" fill="rgb(208,109,11)" fg:x="671" fg:w="1"/><text x="58.4460%" y="511.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="58.1960%" y="485" width="0.0867%" height="15" fill="rgb(216,190,48)" fg:x="671" fg:w="1"/><text x="58.4460%" y="495.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (1 samples, 0.09%)</title><rect x="58.1960%" y="469" width="0.0867%" height="15" fill="rgb(251,171,36)" fg:x="671" fg:w="1"/><text x="58.4460%" y="479.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.09%)</title><rect x="58.6297%" y="389" width="0.0867%" height="15" fill="rgb(230,62,22)" fg:x="676" fg:w="1"/><text x="58.8797%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.09%)</title><rect x="58.6297%" y="373" width="0.0867%" height="15" fill="rgb(225,114,35)" fg:x="676" fg:w="1"/><text x="58.8797%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.09%)</title><rect x="58.6297%" y="357" width="0.0867%" height="15" fill="rgb(215,118,42)" fg:x="676" fg:w="1"/><text x="58.8797%" y="367.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.09%)</title><rect x="58.6297%" y="341" width="0.0867%" height="15" fill="rgb(243,119,21)" fg:x="676" fg:w="1"/><text x="58.8797%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.09%)</title><rect x="58.6297%" y="325" width="0.0867%" height="15" fill="rgb(252,177,53)" fg:x="676" fg:w="1"/><text x="58.8797%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.09%)</title><rect x="58.6297%" y="309" width="0.0867%" height="15" fill="rgb(237,209,29)" fg:x="676" fg:w="1"/><text x="58.8797%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.09%)</title><rect x="58.7164%" y="373" width="0.0867%" height="15" fill="rgb(212,65,23)" fg:x="677" fg:w="1"/><text x="58.9664%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.09%)</title><rect x="58.7164%" y="357" width="0.0867%" height="15" fill="rgb(230,222,46)" fg:x="677" fg:w="1"/><text x="58.9664%" y="367.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.09%)</title><rect x="58.7164%" y="341" width="0.0867%" height="15" fill="rgb(215,135,32)" fg:x="677" fg:w="1"/><text x="58.9664%" y="351.50"></text></g><g><title>gpu_allocator::vulkan::Allocator::free (7 samples, 0.61%)</title><rect x="58.2827%" y="501" width="0.6071%" height="15" fill="rgb(246,101,22)" fg:x="672" fg:w="7"/><text x="58.5327%" y="511.50"></text></g><g><title>gpu_allocator::vulkan::MemoryType::free (6 samples, 0.52%)</title><rect x="58.3695%" y="485" width="0.5204%" height="15" fill="rgb(206,107,13)" fg:x="673" fg:w="6"/><text x="58.6195%" y="495.50"></text></g><g><title>&lt;gpu_allocator::allocator::free_list_allocator::FreeListAllocator as gpu_allocator::allocator::SubAllocator&gt;::free (6 samples, 0.52%)</title><rect x="58.3695%" y="469" width="0.5204%" height="15" fill="rgb(250,100,44)" fg:x="673" fg:w="6"/><text x="58.6195%" y="479.50"></text></g><g><title>gpu_allocator::allocator::free_list_allocator::FreeListAllocator::merge_free_chunks (5 samples, 0.43%)</title><rect x="58.4562%" y="453" width="0.4337%" height="15" fill="rgb(231,147,38)" fg:x="674" fg:w="5"/><text x="58.7062%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (4 samples, 0.35%)</title><rect x="58.5429%" y="437" width="0.3469%" height="15" fill="rgb(229,8,40)" fg:x="675" fg:w="4"/><text x="58.7929%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (4 samples, 0.35%)</title><rect x="58.5429%" y="421" width="0.3469%" height="15" fill="rgb(221,135,30)" fg:x="675" fg:w="4"/><text x="58.7929%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (3 samples, 0.26%)</title><rect x="58.6297%" y="405" width="0.2602%" height="15" fill="rgb(249,193,18)" fg:x="676" fg:w="3"/><text x="58.8797%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (2 samples, 0.17%)</title><rect x="58.7164%" y="389" width="0.1735%" height="15" fill="rgb(209,133,39)" fg:x="677" fg:w="2"/><text x="58.9664%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove (1 samples, 0.09%)</title><rect x="58.8031%" y="373" width="0.0867%" height="15" fill="rgb(232,100,14)" fg:x="678" fg:w="1"/><text x="59.0531%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::erase_no_drop (1 samples, 0.09%)</title><rect x="58.8031%" y="357" width="0.0867%" height="15" fill="rgb(224,185,1)" fg:x="678" fg:w="1"/><text x="59.0531%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::erase (1 samples, 0.09%)</title><rect x="58.8031%" y="341" width="0.0867%" height="15" fill="rgb(223,139,8)" fg:x="678" fg:w="1"/><text x="59.0531%" y="351.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::leading_zeros (1 samples, 0.09%)</title><rect x="58.8031%" y="325" width="0.0867%" height="15" fill="rgb(232,213,38)" fg:x="678" fg:w="1"/><text x="59.0531%" y="335.50"></text></g><g><title>core::num::&lt;impl u16&gt;::leading_zeros (1 samples, 0.09%)</title><rect x="58.8031%" y="309" width="0.0867%" height="15" fill="rgb(207,94,22)" fg:x="678" fg:w="1"/><text x="59.0531%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;vulkan::buffer::Buffer&gt; (10 samples, 0.87%)</title><rect x="58.1960%" y="533" width="0.8673%" height="15" fill="rgb(219,183,54)" fg:x="671" fg:w="10"/><text x="58.4460%" y="543.50"></text></g><g><title>&lt;vulkan::buffer::Buffer as core::ops::drop::Drop&gt;::drop (10 samples, 0.87%)</title><rect x="58.1960%" y="517" width="0.8673%" height="15" fill="rgb(216,185,54)" fg:x="671" fg:w="10"/><text x="58.4460%" y="527.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.17%)</title><rect x="58.8899%" y="501" width="0.1735%" height="15" fill="rgb(254,217,39)" fg:x="679" fg:w="2"/><text x="59.1399%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (2 samples, 0.17%)</title><rect x="58.8899%" y="485" width="0.1735%" height="15" fill="rgb(240,178,23)" fg:x="679" fg:w="2"/><text x="59.1399%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.26%)</title><rect x="59.0633%" y="533" width="0.2602%" height="15" fill="rgb(218,11,47)" fg:x="681" fg:w="3"/><text x="59.3133%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 0.26%)</title><rect x="59.0633%" y="517" width="0.2602%" height="15" fill="rgb(218,51,51)" fg:x="681" fg:w="3"/><text x="59.3133%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.26%)</title><rect x="59.0633%" y="501" width="0.2602%" height="15" fill="rgb(238,126,27)" fg:x="681" fg:w="3"/><text x="59.3133%" y="511.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.26%)</title><rect x="59.0633%" y="485" width="0.2602%" height="15" fill="rgb(249,202,22)" fg:x="681" fg:w="3"/><text x="59.3133%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.26%)</title><rect x="59.0633%" y="469" width="0.2602%" height="15" fill="rgb(254,195,49)" fg:x="681" fg:w="3"/><text x="59.3133%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.26%)</title><rect x="59.0633%" y="453" width="0.2602%" height="15" fill="rgb(208,123,14)" fg:x="681" fg:w="3"/><text x="59.3133%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for *const T&gt;::hash (3 samples, 0.26%)</title><rect x="59.0633%" y="437" width="0.2602%" height="15" fill="rgb(224,200,8)" fg:x="681" fg:w="3"/><text x="59.3133%" y="447.50"></text></g><g><title>core::hash::Hasher::write_usize (3 samples, 0.26%)</title><rect x="59.0633%" y="421" width="0.2602%" height="15" fill="rgb(217,61,36)" fg:x="681" fg:w="3"/><text x="59.3133%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.26%)</title><rect x="59.0633%" y="405" width="0.2602%" height="15" fill="rgb(206,35,45)" fg:x="681" fg:w="3"/><text x="59.3133%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.26%)</title><rect x="59.0633%" y="389" width="0.2602%" height="15" fill="rgb(217,65,33)" fg:x="681" fg:w="3"/><text x="59.3133%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.17%)</title><rect x="59.1500%" y="373" width="0.1735%" height="15" fill="rgb(222,158,48)" fg:x="682" fg:w="2"/><text x="59.4000%" y="383.50"></text></g><g><title>hashbrown::map::make_insert_hash (2 samples, 0.17%)</title><rect x="59.3235%" y="501" width="0.1735%" height="15" fill="rgb(254,2,54)" fg:x="684" fg:w="2"/><text x="59.5735%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.17%)</title><rect x="59.3235%" y="485" width="0.1735%" height="15" fill="rgb(250,143,38)" fg:x="684" fg:w="2"/><text x="59.5735%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.17%)</title><rect x="59.3235%" y="469" width="0.1735%" height="15" fill="rgb(248,25,0)" fg:x="684" fg:w="2"/><text x="59.5735%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for *const T&gt;::hash (2 samples, 0.17%)</title><rect x="59.3235%" y="453" width="0.1735%" height="15" fill="rgb(206,152,27)" fg:x="684" fg:w="2"/><text x="59.5735%" y="463.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.17%)</title><rect x="59.3235%" y="437" width="0.1735%" height="15" fill="rgb(240,77,30)" fg:x="684" fg:w="2"/><text x="59.5735%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.17%)</title><rect x="59.3235%" y="421" width="0.1735%" height="15" fill="rgb(231,5,3)" fg:x="684" fg:w="2"/><text x="59.5735%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.17%)</title><rect x="59.3235%" y="405" width="0.1735%" height="15" fill="rgb(207,226,32)" fg:x="684" fg:w="2"/><text x="59.5735%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.17%)</title><rect x="59.3235%" y="389" width="0.1735%" height="15" fill="rgb(222,207,47)" fg:x="684" fg:w="2"/><text x="59.5735%" y="399.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.09%)</title><rect x="59.4102%" y="373" width="0.0867%" height="15" fill="rgb(229,115,45)" fg:x="685" fg:w="1"/><text x="59.6602%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.09%)</title><rect x="59.4970%" y="501" width="0.0867%" height="15" fill="rgb(224,191,6)" fg:x="686" fg:w="1"/><text x="59.7470%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.09%)</title><rect x="59.4970%" y="485" width="0.0867%" height="15" fill="rgb(230,227,24)" fg:x="686" fg:w="1"/><text x="59.7470%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.09%)</title><rect x="59.4970%" y="469" width="0.0867%" height="15" fill="rgb(228,80,19)" fg:x="686" fg:w="1"/><text x="59.7470%" y="479.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.09%)</title><rect x="59.4970%" y="453" width="0.0867%" height="15" fill="rgb(247,229,0)" fg:x="686" fg:w="1"/><text x="59.7470%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.09%)</title><rect x="59.4970%" y="437" width="0.0867%" height="15" fill="rgb(237,194,15)" fg:x="686" fg:w="1"/><text x="59.7470%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (1 samples, 0.09%)</title><rect x="59.8439%" y="421" width="0.0867%" height="15" fill="rgb(219,203,20)" fg:x="690" fg:w="1"/><text x="60.0939%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (1 samples, 0.09%)</title><rect x="59.8439%" y="405" width="0.0867%" height="15" fill="rgb(234,128,8)" fg:x="690" fg:w="1"/><text x="60.0939%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (1 samples, 0.09%)</title><rect x="59.8439%" y="389" width="0.0867%" height="15" fill="rgb(248,202,8)" fg:x="690" fg:w="1"/><text x="60.0939%" y="399.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (9 samples, 0.78%)</title><rect x="59.3235%" y="533" width="0.7806%" height="15" fill="rgb(206,104,37)" fg:x="684" fg:w="9"/><text x="59.5735%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 0.78%)</title><rect x="59.3235%" y="517" width="0.7806%" height="15" fill="rgb(223,8,27)" fg:x="684" fg:w="9"/><text x="59.5735%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (6 samples, 0.52%)</title><rect x="59.5837%" y="501" width="0.5204%" height="15" fill="rgb(216,217,28)" fg:x="687" fg:w="6"/><text x="59.8337%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (4 samples, 0.35%)</title><rect x="59.7572%" y="485" width="0.3469%" height="15" fill="rgb(249,199,1)" fg:x="689" fg:w="4"/><text x="60.0072%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.35%)</title><rect x="59.7572%" y="469" width="0.3469%" height="15" fill="rgb(240,85,17)" fg:x="689" fg:w="4"/><text x="60.0072%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (4 samples, 0.35%)</title><rect x="59.7572%" y="453" width="0.3469%" height="15" fill="rgb(206,108,45)" fg:x="689" fg:w="4"/><text x="60.0072%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (3 samples, 0.26%)</title><rect x="59.8439%" y="437" width="0.2602%" height="15" fill="rgb(245,210,41)" fg:x="690" fg:w="3"/><text x="60.0939%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (2 samples, 0.17%)</title><rect x="59.9306%" y="421" width="0.1735%" height="15" fill="rgb(206,13,37)" fg:x="691" fg:w="2"/><text x="60.1806%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.09%)</title><rect x="60.0173%" y="405" width="0.0867%" height="15" fill="rgb(250,61,18)" fg:x="692" fg:w="1"/><text x="60.2673%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.09%)</title><rect x="60.0173%" y="389" width="0.0867%" height="15" fill="rgb(235,172,48)" fg:x="692" fg:w="1"/><text x="60.2673%" y="399.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.09%)</title><rect x="60.0173%" y="373" width="0.0867%" height="15" fill="rgb(249,201,17)" fg:x="692" fg:w="1"/><text x="60.2673%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.09%)</title><rect x="60.0173%" y="357" width="0.0867%" height="15" fill="rgb(219,208,6)" fg:x="692" fg:w="1"/><text x="60.2673%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.09%)</title><rect x="60.0173%" y="341" width="0.0867%" height="15" fill="rgb(248,31,23)" fg:x="692" fg:w="1"/><text x="60.2673%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.09%)</title><rect x="60.0173%" y="325" width="0.0867%" height="15" fill="rgb(245,15,42)" fg:x="692" fg:w="1"/><text x="60.2673%" y="335.50"></text></g><g><title>malloc (1 samples, 0.09%)</title><rect x="60.0173%" y="309" width="0.0867%" height="15" fill="rgb(222,217,39)" fg:x="692" fg:w="1"/><text x="60.2673%" y="319.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="60.0173%" y="293" width="0.0867%" height="15" fill="rgb(210,219,27)" fg:x="692" fg:w="1"/><text x="60.2673%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.17%)</title><rect x="60.3643%" y="421" width="0.1735%" height="15" fill="rgb(252,166,36)" fg:x="696" fg:w="2"/><text x="60.6143%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.17%)</title><rect x="60.3643%" y="405" width="0.1735%" height="15" fill="rgb(245,132,34)" fg:x="696" fg:w="2"/><text x="60.6143%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.17%)</title><rect x="60.3643%" y="389" width="0.1735%" height="15" fill="rgb(236,54,3)" fg:x="696" fg:w="2"/><text x="60.6143%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.17%)</title><rect x="60.3643%" y="373" width="0.1735%" height="15" fill="rgb(241,173,43)" fg:x="696" fg:w="2"/><text x="60.6143%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.17%)</title><rect x="60.3643%" y="357" width="0.1735%" height="15" fill="rgb(215,190,9)" fg:x="696" fg:w="2"/><text x="60.6143%" y="367.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.17%)</title><rect x="60.3643%" y="341" width="0.1735%" height="15" fill="rgb(242,101,16)" fg:x="696" fg:w="2"/><text x="60.6143%" y="351.50"></text></g><g><title>malloc (2 samples, 0.17%)</title><rect x="60.3643%" y="325" width="0.1735%" height="15" fill="rgb(223,190,21)" fg:x="696" fg:w="2"/><text x="60.6143%" y="335.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.26%)</title><rect x="60.3643%" y="517" width="0.2602%" height="15" fill="rgb(215,228,25)" fg:x="696" fg:w="3"/><text x="60.6143%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (3 samples, 0.26%)</title><rect x="60.3643%" y="501" width="0.2602%" height="15" fill="rgb(225,36,22)" fg:x="696" fg:w="3"/><text x="60.6143%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.26%)</title><rect x="60.3643%" y="485" width="0.2602%" height="15" fill="rgb(251,106,46)" fg:x="696" fg:w="3"/><text x="60.6143%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.26%)</title><rect x="60.3643%" y="469" width="0.2602%" height="15" fill="rgb(208,90,1)" fg:x="696" fg:w="3"/><text x="60.6143%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.26%)</title><rect x="60.3643%" y="453" width="0.2602%" height="15" fill="rgb(243,10,4)" fg:x="696" fg:w="3"/><text x="60.6143%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.26%)</title><rect x="60.3643%" y="437" width="0.2602%" height="15" fill="rgb(212,137,27)" fg:x="696" fg:w="3"/><text x="60.6143%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.09%)</title><rect x="60.5377%" y="421" width="0.0867%" height="15" fill="rgb(231,220,49)" fg:x="698" fg:w="1"/><text x="60.7877%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.09%)</title><rect x="60.5377%" y="405" width="0.0867%" height="15" fill="rgb(237,96,20)" fg:x="698" fg:w="1"/><text x="60.7877%" y="415.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="60.5377%" y="389" width="0.0867%" height="15" fill="rgb(239,229,30)" fg:x="698" fg:w="1"/><text x="60.7877%" y="399.50"></text></g><g><title>&lt;ash::vk::definitions::DebugMarkerObjectTagInfoEXTBuilder as core::ops::deref::Deref&gt;::deref (1 samples, 0.09%)</title><rect x="60.6245%" y="517" width="0.0867%" height="15" fill="rgb(219,65,33)" fg:x="699" fg:w="1"/><text x="60.8745%" y="527.50"></text></g><g><title>&lt;vulkan::device::Device as core::ops::deref::Deref&gt;::deref (3 samples, 0.26%)</title><rect x="60.7112%" y="517" width="0.2602%" height="15" fill="rgb(243,134,7)" fg:x="700" fg:w="3"/><text x="60.9612%" y="527.50"></text></g><g><title>[libc.so.6] (6 samples, 0.52%)</title><rect x="60.9714%" y="517" width="0.5204%" height="15" fill="rgb(216,177,54)" fg:x="703" fg:w="6"/><text x="61.2214%" y="527.50"></text></g><g><title>ash::device::Device::bind_buffer_memory (3 samples, 0.26%)</title><rect x="61.4918%" y="517" width="0.2602%" height="15" fill="rgb(211,160,20)" fg:x="709" fg:w="3"/><text x="61.7418%" y="527.50"></text></g><g><title>[amdvlk64.so] (3 samples, 0.26%)</title><rect x="61.4918%" y="501" width="0.2602%" height="15" fill="rgb(239,85,39)" fg:x="709" fg:w="3"/><text x="61.7418%" y="511.50"></text></g><g><title>[amdvlk64.so] (1 samples, 0.09%)</title><rect x="61.6652%" y="485" width="0.0867%" height="15" fill="rgb(232,125,22)" fg:x="711" fg:w="1"/><text x="61.9152%" y="495.50"></text></g><g><title>ash::device::Device::create_buffer (15 samples, 1.30%)</title><rect x="61.7520%" y="517" width="1.3010%" height="15" fill="rgb(244,57,34)" fg:x="712" fg:w="15"/><text x="62.0020%" y="527.50"></text></g><g><title>[amdvlk64.so] (15 samples, 1.30%)</title><rect x="61.7520%" y="501" width="1.3010%" height="15" fill="rgb(214,203,32)" fg:x="712" fg:w="15"/><text x="62.0020%" y="511.50"></text></g><g><title>[amdvlk64.so] (13 samples, 1.13%)</title><rect x="61.9254%" y="485" width="1.1275%" height="15" fill="rgb(207,58,43)" fg:x="714" fg:w="13"/><text x="62.1754%" y="495.50"></text></g><g><title>posix_memalign (6 samples, 0.52%)</title><rect x="62.5325%" y="469" width="0.5204%" height="15" fill="rgb(215,193,15)" fg:x="721" fg:w="6"/><text x="62.7825%" y="479.50"></text></g><g><title>malloc (6 samples, 0.52%)</title><rect x="62.5325%" y="453" width="0.5204%" height="15" fill="rgb(232,15,44)" fg:x="721" fg:w="6"/><text x="62.7825%" y="463.50"></text></g><g><title>[libc.so.6] (5 samples, 0.43%)</title><rect x="62.6193%" y="437" width="0.4337%" height="15" fill="rgb(212,3,48)" fg:x="722" fg:w="5"/><text x="62.8693%" y="447.50"></text></g><g><title>[libc.so.6] (2 samples, 0.17%)</title><rect x="62.8794%" y="421" width="0.1735%" height="15" fill="rgb(218,128,7)" fg:x="725" fg:w="2"/><text x="63.1294%" y="431.50"></text></g><g><title>ash::device::Device::get_buffer_memory_requirements (5 samples, 0.43%)</title><rect x="63.0529%" y="517" width="0.4337%" height="15" fill="rgb(226,216,39)" fg:x="727" fg:w="5"/><text x="63.3029%" y="527.50"></text></g><g><title>[amdvlk64.so] (5 samples, 0.43%)</title><rect x="63.0529%" y="501" width="0.4337%" height="15" fill="rgb(243,47,51)" fg:x="727" fg:w="5"/><text x="63.3029%" y="511.50"></text></g><g><title>ash::vk::definitions::BufferCreateInfo::builder (1 samples, 0.09%)</title><rect x="63.4866%" y="517" width="0.0867%" height="15" fill="rgb(241,183,40)" fg:x="732" fg:w="1"/><text x="63.7366%" y="527.50"></text></g><g><title>ash::vk::definitions::BufferCreateInfoBuilder::size (2 samples, 0.17%)</title><rect x="63.5733%" y="517" width="0.1735%" height="15" fill="rgb(231,217,32)" fg:x="733" fg:w="2"/><text x="63.8233%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="63.8335%" y="469" width="0.0867%" height="15" fill="rgb(229,61,38)" fg:x="736" fg:w="1"/><text x="64.0835%" y="479.50"></text></g><g><title>gpu_allocator::vulkan::Allocator::find_memorytype_index (2 samples, 0.17%)</title><rect x="63.8335%" y="501" width="0.1735%" height="15" fill="rgb(225,210,5)" fg:x="736" fg:w="2"/><text x="64.0835%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (2 samples, 0.17%)</title><rect x="63.8335%" y="485" width="0.1735%" height="15" fill="rgb(231,79,45)" fg:x="736" fg:w="2"/><text x="64.0835%" y="495.50"></text></g><g><title>gpu_allocator::vulkan::Allocator::find_memorytype_index::{{closure}} (1 samples, 0.09%)</title><rect x="63.9202%" y="469" width="0.0867%" height="15" fill="rgb(224,100,7)" fg:x="737" fg:w="1"/><text x="64.1702%" y="479.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.09%)</title><rect x="64.4406%" y="485" width="0.0867%" height="15" fill="rgb(241,198,18)" fg:x="743" fg:w="1"/><text x="64.6906%" y="495.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.09%)</title><rect x="64.4406%" y="469" width="0.0867%" height="15" fill="rgb(252,97,53)" fg:x="743" fg:w="1"/><text x="64.6906%" y="479.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (1 samples, 0.09%)</title><rect x="64.4406%" y="453" width="0.0867%" height="15" fill="rgb(220,88,7)" fg:x="743" fg:w="1"/><text x="64.6906%" y="463.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as alloc::boxed::BoxFromSlice&lt;T&gt;&gt;::from_slice (1 samples, 0.09%)</title><rect x="64.4406%" y="437" width="0.0867%" height="15" fill="rgb(213,176,14)" fg:x="743" fg:w="1"/><text x="64.6906%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.09%)</title><rect x="64.4406%" y="421" width="0.0867%" height="15" fill="rgb(246,73,7)" fg:x="743" fg:w="1"/><text x="64.6906%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="64.4406%" y="405" width="0.0867%" height="15" fill="rgb(245,64,36)" fg:x="743" fg:w="1"/><text x="64.6906%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.09%)</title><rect x="64.4406%" y="389" width="0.0867%" height="15" fill="rgb(245,80,10)" fg:x="743" fg:w="1"/><text x="64.6906%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.09%)</title><rect x="64.4406%" y="373" width="0.0867%" height="15" fill="rgb(232,107,50)" fg:x="743" fg:w="1"/><text x="64.6906%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.09%)</title><rect x="64.4406%" y="357" width="0.0867%" height="15" fill="rgb(253,3,0)" fg:x="743" fg:w="1"/><text x="64.6906%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.09%)</title><rect x="64.4406%" y="341" width="0.0867%" height="15" fill="rgb(212,99,53)" fg:x="743" fg:w="1"/><text x="64.6906%" y="351.50"></text></g><g><title>malloc (1 samples, 0.09%)</title><rect x="64.4406%" y="325" width="0.0867%" height="15" fill="rgb(249,111,54)" fg:x="743" fg:w="1"/><text x="64.6906%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="64.4406%" y="309" width="0.0867%" height="15" fill="rgb(249,55,30)" fg:x="743" fg:w="1"/><text x="64.6906%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.26%)</title><rect x="64.5273%" y="341" width="0.2602%" height="15" fill="rgb(237,47,42)" fg:x="744" fg:w="3"/><text x="64.7773%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.26%)</title><rect x="64.5273%" y="325" width="0.2602%" height="15" fill="rgb(211,20,18)" fg:x="744" fg:w="3"/><text x="64.7773%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.26%)</title><rect x="64.5273%" y="309" width="0.2602%" height="15" fill="rgb(231,203,46)" fg:x="744" fg:w="3"/><text x="64.7773%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.26%)</title><rect x="64.5273%" y="293" width="0.2602%" height="15" fill="rgb(237,142,3)" fg:x="744" fg:w="3"/><text x="64.7773%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.26%)</title><rect x="64.5273%" y="277" width="0.2602%" height="15" fill="rgb(241,107,1)" fg:x="744" fg:w="3"/><text x="64.7773%" y="287.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.26%)</title><rect x="64.5273%" y="261" width="0.2602%" height="15" fill="rgb(229,83,13)" fg:x="744" fg:w="3"/><text x="64.7773%" y="271.50"></text></g><g><title>malloc (3 samples, 0.26%)</title><rect x="64.5273%" y="245" width="0.2602%" height="15" fill="rgb(241,91,40)" fg:x="744" fg:w="3"/><text x="64.7773%" y="255.50"></text></g><g><title>[libc.so.6] (2 samples, 0.17%)</title><rect x="64.6141%" y="229" width="0.1735%" height="15" fill="rgb(225,3,45)" fg:x="745" fg:w="2"/><text x="64.8641%" y="239.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (4 samples, 0.35%)</title><rect x="64.5273%" y="469" width="0.3469%" height="15" fill="rgb(244,223,14)" fg:x="744" fg:w="4"/><text x="64.7773%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (4 samples, 0.35%)</title><rect x="64.5273%" y="453" width="0.3469%" height="15" fill="rgb(224,124,37)" fg:x="744" fg:w="4"/><text x="64.7773%" y="463.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (4 samples, 0.35%)</title><rect x="64.5273%" y="437" width="0.3469%" height="15" fill="rgb(251,171,30)" fg:x="744" fg:w="4"/><text x="64.7773%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (4 samples, 0.35%)</title><rect x="64.5273%" y="421" width="0.3469%" height="15" fill="rgb(236,46,54)" fg:x="744" fg:w="4"/><text x="64.7773%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.35%)</title><rect x="64.5273%" y="405" width="0.3469%" height="15" fill="rgb(245,213,5)" fg:x="744" fg:w="4"/><text x="64.7773%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.35%)</title><rect x="64.5273%" y="389" width="0.3469%" height="15" fill="rgb(230,144,27)" fg:x="744" fg:w="4"/><text x="64.7773%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.35%)</title><rect x="64.5273%" y="373" width="0.3469%" height="15" fill="rgb(220,86,6)" fg:x="744" fg:w="4"/><text x="64.7773%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.35%)</title><rect x="64.5273%" y="357" width="0.3469%" height="15" fill="rgb(240,20,13)" fg:x="744" fg:w="4"/><text x="64.7773%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.09%)</title><rect x="64.7875%" y="341" width="0.0867%" height="15" fill="rgb(217,89,34)" fg:x="747" fg:w="1"/><text x="65.0375%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.09%)</title><rect x="64.7875%" y="325" width="0.0867%" height="15" fill="rgb(229,13,5)" fg:x="747" fg:w="1"/><text x="65.0375%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="64.7875%" y="309" width="0.0867%" height="15" fill="rgb(244,67,35)" fg:x="747" fg:w="1"/><text x="65.0375%" y="319.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.09%)</title><rect x="64.8742%" y="421" width="0.0867%" height="15" fill="rgb(221,40,2)" fg:x="748" fg:w="1"/><text x="65.1242%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.09%)</title><rect x="64.8742%" y="405" width="0.0867%" height="15" fill="rgb(237,157,21)" fg:x="748" fg:w="1"/><text x="65.1242%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.09%)</title><rect x="64.8742%" y="389" width="0.0867%" height="15" fill="rgb(222,94,11)" fg:x="748" fg:w="1"/><text x="65.1242%" y="399.50"></text></g><g><title>&lt;core::num::nonzero::NonZeroU64 as core::hash::Hash&gt;::hash (1 samples, 0.09%)</title><rect x="64.8742%" y="373" width="0.0867%" height="15" fill="rgb(249,113,6)" fg:x="748" fg:w="1"/><text x="65.1242%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (1 samples, 0.09%)</title><rect x="64.8742%" y="357" width="0.0867%" height="15" fill="rgb(238,137,36)" fg:x="748" fg:w="1"/><text x="65.1242%" y="367.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.26%)</title><rect x="64.8742%" y="469" width="0.2602%" height="15" fill="rgb(210,102,26)" fg:x="748" fg:w="3"/><text x="65.1242%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 0.26%)</title><rect x="64.8742%" y="453" width="0.2602%" height="15" fill="rgb(218,30,30)" fg:x="748" fg:w="3"/><text x="65.1242%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.26%)</title><rect x="64.8742%" y="437" width="0.2602%" height="15" fill="rgb(214,67,26)" fg:x="748" fg:w="3"/><text x="65.1242%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.17%)</title><rect x="64.9610%" y="421" width="0.1735%" height="15" fill="rgb(251,9,53)" fg:x="749" fg:w="2"/><text x="65.2110%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.17%)</title><rect x="64.9610%" y="405" width="0.1735%" height="15" fill="rgb(228,204,25)" fg:x="749" fg:w="2"/><text x="65.2110%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.17%)</title><rect x="64.9610%" y="389" width="0.1735%" height="15" fill="rgb(207,153,8)" fg:x="749" fg:w="2"/><text x="65.2110%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.09%)</title><rect x="65.0477%" y="373" width="0.0867%" height="15" fill="rgb(242,9,16)" fg:x="750" fg:w="1"/><text x="65.2977%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.09%)</title><rect x="65.0477%" y="357" width="0.0867%" height="15" fill="rgb(217,211,10)" fg:x="750" fg:w="1"/><text x="65.2977%" y="367.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (2 samples, 0.17%)</title><rect x="65.1344%" y="469" width="0.1735%" height="15" fill="rgb(219,228,52)" fg:x="751" fg:w="2"/><text x="65.3844%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (2 samples, 0.17%)</title><rect x="65.1344%" y="453" width="0.1735%" height="15" fill="rgb(231,92,29)" fg:x="751" fg:w="2"/><text x="65.3844%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (2 samples, 0.17%)</title><rect x="65.1344%" y="437" width="0.1735%" height="15" fill="rgb(232,8,23)" fg:x="751" fg:w="2"/><text x="65.3844%" y="447.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.17%)</title><rect x="65.1344%" y="421" width="0.1735%" height="15" fill="rgb(216,211,34)" fg:x="751" fg:w="2"/><text x="65.3844%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.17%)</title><rect x="65.1344%" y="405" width="0.1735%" height="15" fill="rgb(236,151,0)" fg:x="751" fg:w="2"/><text x="65.3844%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.17%)</title><rect x="65.1344%" y="389" width="0.1735%" height="15" fill="rgb(209,168,3)" fg:x="751" fg:w="2"/><text x="65.3844%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.17%)</title><rect x="65.1344%" y="373" width="0.1735%" height="15" fill="rgb(208,129,28)" fg:x="751" fg:w="2"/><text x="65.3844%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.17%)</title><rect x="65.1344%" y="357" width="0.1735%" height="15" fill="rgb(229,78,22)" fg:x="751" fg:w="2"/><text x="65.3844%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.17%)</title><rect x="65.1344%" y="341" width="0.1735%" height="15" fill="rgb(228,187,13)" fg:x="751" fg:w="2"/><text x="65.3844%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.09%)</title><rect x="65.2212%" y="325" width="0.0867%" height="15" fill="rgb(240,119,24)" fg:x="752" fg:w="1"/><text x="65.4712%" y="335.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (2 samples, 0.17%)</title><rect x="65.3079%" y="469" width="0.1735%" height="15" fill="rgb(209,194,42)" fg:x="753" fg:w="2"/><text x="65.5579%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.17%)</title><rect x="65.3079%" y="453" width="0.1735%" height="15" fill="rgb(247,200,46)" fg:x="753" fg:w="2"/><text x="65.5579%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.09%)</title><rect x="65.3946%" y="437" width="0.0867%" height="15" fill="rgb(218,76,16)" fg:x="754" fg:w="1"/><text x="65.6446%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (1 samples, 0.09%)</title><rect x="65.3946%" y="421" width="0.0867%" height="15" fill="rgb(225,21,48)" fg:x="754" fg:w="1"/><text x="65.6446%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (1 samples, 0.09%)</title><rect x="65.3946%" y="405" width="0.0867%" height="15" fill="rgb(239,223,50)" fg:x="754" fg:w="1"/><text x="65.6446%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (1 samples, 0.09%)</title><rect x="65.3946%" y="389" width="0.0867%" height="15" fill="rgb(244,45,21)" fg:x="754" fg:w="1"/><text x="65.6446%" y="399.50"></text></g><g><title>vulkan::buffer::Buffer::new (63 samples, 5.46%)</title><rect x="60.1041%" y="533" width="5.4640%" height="15" fill="rgb(232,33,43)" fg:x="693" fg:w="63"/><text x="60.3541%" y="543.50">vulkan:..</text></g><g><title>gpu_allocator::vulkan::Allocator::allocate (21 samples, 1.82%)</title><rect x="63.7467%" y="517" width="1.8213%" height="15" fill="rgb(209,8,3)" fg:x="735" fg:w="21"/><text x="63.9967%" y="527.50">g..</text></g><g><title>gpu_allocator::vulkan::MemoryType::allocate (18 samples, 1.56%)</title><rect x="64.0069%" y="501" width="1.5611%" height="15" fill="rgb(214,25,53)" fg:x="738" fg:w="18"/><text x="64.2569%" y="511.50"></text></g><g><title>&lt;gpu_allocator::allocator::free_list_allocator::FreeListAllocator as gpu_allocator::allocator::SubAllocator&gt;::allocate (12 samples, 1.04%)</title><rect x="64.5273%" y="485" width="1.0408%" height="15" fill="rgb(254,186,54)" fg:x="744" fg:w="12"/><text x="64.7773%" y="495.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (1 samples, 0.09%)</title><rect x="65.4814%" y="469" width="0.0867%" height="15" fill="rgb(208,174,49)" fg:x="755" fg:w="1"/><text x="65.7314%" y="479.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (1 samples, 0.09%)</title><rect x="65.4814%" y="453" width="0.0867%" height="15" fill="rgb(233,191,51)" fg:x="755" fg:w="1"/><text x="65.7314%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (1 samples, 0.09%)</title><rect x="65.4814%" y="437" width="0.0867%" height="15" fill="rgb(222,134,10)" fg:x="755" fg:w="1"/><text x="65.7314%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (1 samples, 0.09%)</title><rect x="65.4814%" y="421" width="0.0867%" height="15" fill="rgb(230,226,20)" fg:x="755" fg:w="1"/><text x="65.7314%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (1 samples, 0.09%)</title><rect x="65.4814%" y="405" width="0.0867%" height="15" fill="rgb(251,111,25)" fg:x="755" fg:w="1"/><text x="65.7314%" y="415.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1 samples, 0.09%)</title><rect x="65.4814%" y="389" width="0.0867%" height="15" fill="rgb(224,40,46)" fg:x="755" fg:w="1"/><text x="65.7314%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (1 samples, 0.09%)</title><rect x="65.4814%" y="373" width="0.0867%" height="15" fill="rgb(236,108,47)" fg:x="755" fg:w="1"/><text x="65.7314%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.09%)</title><rect x="65.4814%" y="357" width="0.0867%" height="15" fill="rgb(234,93,0)" fg:x="755" fg:w="1"/><text x="65.7314%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.09%)</title><rect x="65.4814%" y="341" width="0.0867%" height="15" fill="rgb(224,213,32)" fg:x="755" fg:w="1"/><text x="65.7314%" y="351.50"></text></g><g><title>ash::device::Device::update_descriptor_sets (5 samples, 0.43%)</title><rect x="65.6548%" y="517" width="0.4337%" height="15" fill="rgb(251,11,48)" fg:x="757" fg:w="5"/><text x="65.9048%" y="527.50"></text></g><g><title>[amdvlk64.so] (5 samples, 0.43%)</title><rect x="65.6548%" y="501" width="0.4337%" height="15" fill="rgb(236,173,5)" fg:x="757" fg:w="5"/><text x="65.9048%" y="511.50"></text></g><g><title>[amdvlk64.so] (3 samples, 0.26%)</title><rect x="65.8283%" y="485" width="0.2602%" height="15" fill="rgb(230,95,12)" fg:x="759" fg:w="3"/><text x="66.0783%" y="495.50"></text></g><g><title>[amdvlk64.so] (3 samples, 0.26%)</title><rect x="65.8283%" y="469" width="0.2602%" height="15" fill="rgb(232,209,1)" fg:x="759" fg:w="3"/><text x="66.0783%" y="479.50"></text></g><g><title>aetheria::renderer::RenderPass::set_geometry (202 samples, 17.52%)</title><rect x="48.7424%" y="549" width="17.5195%" height="15" fill="rgb(232,6,1)" fg:x="562" fg:w="202"/><text x="48.9924%" y="559.50">aetheria::renderer::RenderP..</text></g><g><title>vulkan::descriptor::Set::update_buffer (8 samples, 0.69%)</title><rect x="65.5681%" y="533" width="0.6938%" height="15" fill="rgb(210,224,50)" fg:x="756" fg:w="8"/><text x="65.8181%" y="543.50"></text></g><g><title>ash::vk::definitions::WriteDescriptorSetBuilder::descriptor_type (2 samples, 0.17%)</title><rect x="66.0885%" y="517" width="0.1735%" height="15" fill="rgb(228,127,35)" fg:x="762" fg:w="2"/><text x="66.3385%" y="527.50"></text></g><g><title>aetheria::time::Time::update_buffer (3 samples, 0.26%)</title><rect x="66.2619%" y="549" width="0.2602%" height="15" fill="rgb(245,102,45)" fg:x="764" fg:w="3"/><text x="66.5119%" y="559.50"></text></g><g><title>aetheria::time::Time::delta_seconds (3 samples, 0.26%)</title><rect x="66.2619%" y="533" width="0.2602%" height="15" fill="rgb(214,1,49)" fg:x="764" fg:w="3"/><text x="66.5119%" y="543.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (3 samples, 0.26%)</title><rect x="66.2619%" y="517" width="0.2602%" height="15" fill="rgb(226,163,40)" fg:x="764" fg:w="3"/><text x="66.5119%" y="527.50"></text></g><g><title>std::time::Instant::duration_since (1 samples, 0.09%)</title><rect x="66.4354%" y="501" width="0.0867%" height="15" fill="rgb(239,212,28)" fg:x="766" fg:w="1"/><text x="66.6854%" y="511.50"></text></g><g><title>std::time::Instant::checked_duration_since (1 samples, 0.09%)</title><rect x="66.4354%" y="485" width="0.0867%" height="15" fill="rgb(220,20,13)" fg:x="766" fg:w="1"/><text x="66.6854%" y="495.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (1 samples, 0.09%)</title><rect x="66.4354%" y="469" width="0.0867%" height="15" fill="rgb(210,164,35)" fg:x="766" fg:w="1"/><text x="66.6854%" y="479.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (1 samples, 0.09%)</title><rect x="66.4354%" y="453" width="0.0867%" height="15" fill="rgb(248,109,41)" fg:x="766" fg:w="1"/><text x="66.6854%" y="463.50"></text></g><g><title>ash::device::Device::queue_submit (10 samples, 0.87%)</title><rect x="66.5221%" y="549" width="0.8673%" height="15" fill="rgb(238,23,50)" fg:x="767" fg:w="10"/><text x="66.7721%" y="559.50"></text></g><g><title>[amdvlk64.so] (10 samples, 0.87%)</title><rect x="66.5221%" y="533" width="0.8673%" height="15" fill="rgb(211,48,49)" fg:x="767" fg:w="10"/><text x="66.7721%" y="543.50"></text></g><g><title>[amdvlk64.so] (8 samples, 0.69%)</title><rect x="66.6956%" y="517" width="0.6938%" height="15" fill="rgb(223,36,21)" fg:x="769" fg:w="8"/><text x="66.9456%" y="527.50"></text></g><g><title>[amdvlk64.so] (5 samples, 0.43%)</title><rect x="66.9558%" y="501" width="0.4337%" height="15" fill="rgb(207,123,46)" fg:x="772" fg:w="5"/><text x="67.2058%" y="511.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="67.3027%" y="485" width="0.0867%" height="15" fill="rgb(240,218,32)" fg:x="776" fg:w="1"/><text x="67.5527%" y="495.50"></text></g><g><title>&lt;ash::vk::definitions::AcquireProfilingLockInfoKHRBuilder as core::ops::deref::Deref&gt;::deref (1 samples, 0.09%)</title><rect x="67.3894%" y="533" width="0.0867%" height="15" fill="rgb(252,5,43)" fg:x="777" fg:w="1"/><text x="67.6394%" y="543.50"></text></g><g><title>[amdvlk64.so] (16 samples, 1.39%)</title><rect x="68.3435%" y="485" width="1.3877%" height="15" fill="rgb(252,84,19)" fg:x="788" fg:w="16"/><text x="68.5935%" y="495.50"></text></g><g><title>[amdvlk64.so] (16 samples, 1.39%)</title><rect x="68.3435%" y="469" width="1.3877%" height="15" fill="rgb(243,152,39)" fg:x="788" fg:w="16"/><text x="68.5935%" y="479.50"></text></g><g><title>[amdvlk64.so] (7 samples, 0.61%)</title><rect x="69.1240%" y="453" width="0.6071%" height="15" fill="rgb(234,160,15)" fg:x="797" fg:w="7"/><text x="69.3740%" y="463.50"></text></g><g><title>[amdvlk64.so] (5 samples, 0.43%)</title><rect x="69.2975%" y="437" width="0.4337%" height="15" fill="rgb(237,34,20)" fg:x="799" fg:w="5"/><text x="69.5475%" y="447.50"></text></g><g><title>[amdvlk64.so] (4 samples, 0.35%)</title><rect x="69.3842%" y="421" width="0.3469%" height="15" fill="rgb(229,97,13)" fg:x="800" fg:w="4"/><text x="69.6342%" y="431.50"></text></g><g><title>vulkan::command::BufferBuilder::begin (30 samples, 2.60%)</title><rect x="67.3894%" y="549" width="2.6019%" height="15" fill="rgb(234,71,50)" fg:x="777" fg:w="30"/><text x="67.6394%" y="559.50">vu..</text></g><g><title>ash::device::Device::begin_command_buffer (29 samples, 2.52%)</title><rect x="67.4761%" y="533" width="2.5152%" height="15" fill="rgb(253,155,4)" fg:x="778" fg:w="29"/><text x="67.7261%" y="543.50">as..</text></g><g><title>[amdvlk64.so] (29 samples, 2.52%)</title><rect x="67.4761%" y="517" width="2.5152%" height="15" fill="rgb(222,185,37)" fg:x="778" fg:w="29"/><text x="67.7261%" y="527.50">[a..</text></g><g><title>[amdvlk64.so] (23 samples, 1.99%)</title><rect x="67.9965%" y="501" width="1.9948%" height="15" fill="rgb(251,177,13)" fg:x="784" fg:w="23"/><text x="68.2465%" y="511.50">[..</text></g><g><title>pthread_mutex_lock (3 samples, 0.26%)</title><rect x="69.7311%" y="485" width="0.2602%" height="15" fill="rgb(250,179,40)" fg:x="804" fg:w="3"/><text x="69.9811%" y="495.50"></text></g><g><title>[amdvlk64.so] (3 samples, 0.26%)</title><rect x="70.2515%" y="469" width="0.2602%" height="15" fill="rgb(242,44,2)" fg:x="810" fg:w="3"/><text x="70.5015%" y="479.50"></text></g><g><title>[amdvlk64.so] (1 samples, 0.09%)</title><rect x="70.4250%" y="453" width="0.0867%" height="15" fill="rgb(216,177,13)" fg:x="812" fg:w="1"/><text x="70.6750%" y="463.50"></text></g><g><title>vulkan::command::BufferBuilder::blit_image (7 samples, 0.61%)</title><rect x="69.9913%" y="549" width="0.6071%" height="15" fill="rgb(216,106,43)" fg:x="807" fg:w="7"/><text x="70.2413%" y="559.50"></text></g><g><title>ash::device::Device::cmd_blit_image (7 samples, 0.61%)</title><rect x="69.9913%" y="533" width="0.6071%" height="15" fill="rgb(216,183,2)" fg:x="807" fg:w="7"/><text x="70.2413%" y="543.50"></text></g><g><title>[amdvlk64.so] (7 samples, 0.61%)</title><rect x="69.9913%" y="517" width="0.6071%" height="15" fill="rgb(249,75,3)" fg:x="807" fg:w="7"/><text x="70.2413%" y="527.50"></text></g><g><title>[amdvlk64.so] (6 samples, 0.52%)</title><rect x="70.0781%" y="501" width="0.5204%" height="15" fill="rgb(219,67,39)" fg:x="808" fg:w="6"/><text x="70.3281%" y="511.50"></text></g><g><title>[amdvlk64.so] (5 samples, 0.43%)</title><rect x="70.1648%" y="485" width="0.4337%" height="15" fill="rgb(253,228,2)" fg:x="809" fg:w="5"/><text x="70.4148%" y="495.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="70.5117%" y="469" width="0.0867%" height="15" fill="rgb(235,138,27)" fg:x="813" fg:w="1"/><text x="70.7617%" y="479.50"></text></g><g><title>[amdvlk64.so] (14 samples, 1.21%)</title><rect x="71.3790%" y="469" width="1.2142%" height="15" fill="rgb(236,97,51)" fg:x="823" fg:w="14"/><text x="71.6290%" y="479.50"></text></g><g><title>[amdvlk64.so] (4 samples, 0.35%)</title><rect x="72.2463%" y="453" width="0.3469%" height="15" fill="rgb(240,80,30)" fg:x="833" fg:w="4"/><text x="72.4963%" y="463.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="72.5932%" y="469" width="0.0867%" height="15" fill="rgb(230,178,19)" fg:x="837" fg:w="1"/><text x="72.8432%" y="479.50"></text></g><g><title>[amdvlk64.so] (23 samples, 1.99%)</title><rect x="70.7719%" y="485" width="1.9948%" height="15" fill="rgb(210,190,27)" fg:x="816" fg:w="23"/><text x="71.0219%" y="495.50">[..</text></g><g><title>pthread_mutex_unlock (1 samples, 0.09%)</title><rect x="72.6800%" y="469" width="0.0867%" height="15" fill="rgb(222,107,31)" fg:x="838" fg:w="1"/><text x="72.9300%" y="479.50"></text></g><g><title>pthread_mutex_lock (2 samples, 0.17%)</title><rect x="72.7667%" y="485" width="0.1735%" height="15" fill="rgb(216,127,34)" fg:x="839" fg:w="2"/><text x="73.0167%" y="495.50"></text></g><g><title>vulkan::command::BufferBuilder::end (28 samples, 2.43%)</title><rect x="70.5984%" y="549" width="2.4284%" height="15" fill="rgb(234,116,52)" fg:x="814" fg:w="28"/><text x="70.8484%" y="559.50">vu..</text></g><g><title>ash::device::Device::end_command_buffer (28 samples, 2.43%)</title><rect x="70.5984%" y="533" width="2.4284%" height="15" fill="rgb(222,124,15)" fg:x="814" fg:w="28"/><text x="70.8484%" y="543.50">as..</text></g><g><title>[amdvlk64.so] (28 samples, 2.43%)</title><rect x="70.5984%" y="517" width="2.4284%" height="15" fill="rgb(231,179,28)" fg:x="814" fg:w="28"/><text x="70.8484%" y="527.50">[a..</text></g><g><title>[amdvlk64.so] (28 samples, 2.43%)</title><rect x="70.5984%" y="501" width="2.4284%" height="15" fill="rgb(226,93,45)" fg:x="814" fg:w="28"/><text x="70.8484%" y="511.50">[a..</text></g><g><title>pthread_mutex_unlock (1 samples, 0.09%)</title><rect x="72.9402%" y="485" width="0.0867%" height="15" fill="rgb(215,8,51)" fg:x="841" fg:w="1"/><text x="73.1902%" y="495.50"></text></g><g><title>vulkan::command::BufferBuilder::bind_compute_pipeline (1 samples, 0.09%)</title><rect x="73.2003%" y="501" width="0.0867%" height="15" fill="rgb(223,106,5)" fg:x="844" fg:w="1"/><text x="73.4503%" y="511.50"></text></g><g><title>ash::device::Device::cmd_bind_pipeline (1 samples, 0.09%)</title><rect x="73.2003%" y="485" width="0.0867%" height="15" fill="rgb(250,191,5)" fg:x="844" fg:w="1"/><text x="73.4503%" y="495.50"></text></g><g><title>[amdvlk64.so] (1 samples, 0.09%)</title><rect x="73.2003%" y="469" width="0.0867%" height="15" fill="rgb(242,132,44)" fg:x="844" fg:w="1"/><text x="73.4503%" y="479.50"></text></g><g><title>vulkan::command::BufferBuilder::bind_descriptor_set (4 samples, 0.35%)</title><rect x="73.2871%" y="501" width="0.3469%" height="15" fill="rgb(251,152,29)" fg:x="845" fg:w="4"/><text x="73.5371%" y="511.50"></text></g><g><title>ash::device::Device::cmd_bind_descriptor_sets (3 samples, 0.26%)</title><rect x="73.3738%" y="485" width="0.2602%" height="15" fill="rgb(218,179,5)" fg:x="846" fg:w="3"/><text x="73.6238%" y="495.50"></text></g><g><title>[amdvlk64.so] (3 samples, 0.26%)</title><rect x="73.3738%" y="469" width="0.2602%" height="15" fill="rgb(227,67,19)" fg:x="846" fg:w="3"/><text x="73.6238%" y="479.50"></text></g><g><title>[amdvlk64.so] (7 samples, 0.61%)</title><rect x="73.8075%" y="437" width="0.6071%" height="15" fill="rgb(233,119,31)" fg:x="851" fg:w="7"/><text x="74.0575%" y="447.50"></text></g><g><title>[amdvlk64.so] (7 samples, 0.61%)</title><rect x="73.8075%" y="421" width="0.6071%" height="15" fill="rgb(241,120,22)" fg:x="851" fg:w="7"/><text x="74.0575%" y="431.50"></text></g><g><title>[amdvlk64.so] (4 samples, 0.35%)</title><rect x="74.0676%" y="405" width="0.3469%" height="15" fill="rgb(224,102,30)" fg:x="854" fg:w="4"/><text x="74.3176%" y="415.50"></text></g><g><title>[amdvlk64.so] (2 samples, 0.17%)</title><rect x="74.2411%" y="389" width="0.1735%" height="15" fill="rgb(210,164,37)" fg:x="856" fg:w="2"/><text x="74.4911%" y="399.50"></text></g><g><title>vulkan::command::BufferBuilder::dispatch (10 samples, 0.87%)</title><rect x="73.6340%" y="501" width="0.8673%" height="15" fill="rgb(226,191,16)" fg:x="849" fg:w="10"/><text x="73.8840%" y="511.50"></text></g><g><title>ash::device::Device::cmd_dispatch (10 samples, 0.87%)</title><rect x="73.6340%" y="485" width="0.8673%" height="15" fill="rgb(214,40,45)" fg:x="849" fg:w="10"/><text x="73.8840%" y="495.50"></text></g><g><title>[amdvlk64.so] (10 samples, 0.87%)</title><rect x="73.6340%" y="469" width="0.8673%" height="15" fill="rgb(244,29,26)" fg:x="849" fg:w="10"/><text x="73.8840%" y="479.50"></text></g><g><title>[amdvlk64.so] (10 samples, 0.87%)</title><rect x="73.6340%" y="453" width="0.8673%" height="15" fill="rgb(216,16,5)" fg:x="849" fg:w="10"/><text x="73.8840%" y="463.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="74.4146%" y="437" width="0.0867%" height="15" fill="rgb(249,76,35)" fg:x="858" fg:w="1"/><text x="74.6646%" y="447.50"></text></g><g><title>ash::device::Device::cmd_pipeline_barrier (16 samples, 1.39%)</title><rect x="74.5013%" y="485" width="1.3877%" height="15" fill="rgb(207,11,44)" fg:x="859" fg:w="16"/><text x="74.7513%" y="495.50"></text></g><g><title>[amdvlk64.so] (16 samples, 1.39%)</title><rect x="74.5013%" y="469" width="1.3877%" height="15" fill="rgb(228,190,49)" fg:x="859" fg:w="16"/><text x="74.7513%" y="479.50"></text></g><g><title>[amdvlk64.so] (15 samples, 1.30%)</title><rect x="74.5880%" y="453" width="1.3010%" height="15" fill="rgb(214,173,12)" fg:x="860" fg:w="15"/><text x="74.8380%" y="463.50"></text></g><g><title>[amdvlk64.so] (11 samples, 0.95%)</title><rect x="74.9350%" y="437" width="0.9540%" height="15" fill="rgb(218,26,35)" fg:x="864" fg:w="11"/><text x="75.1850%" y="447.50"></text></g><g><title>[amdvlk64.so] (10 samples, 0.87%)</title><rect x="75.0217%" y="421" width="0.8673%" height="15" fill="rgb(220,200,19)" fg:x="865" fg:w="10"/><text x="75.2717%" y="431.50"></text></g><g><title>[amdvlk64.so] (9 samples, 0.78%)</title><rect x="75.1084%" y="405" width="0.7806%" height="15" fill="rgb(239,95,49)" fg:x="866" fg:w="9"/><text x="75.3584%" y="415.50"></text></g><g><title>[amdvlk64.so] (5 samples, 0.43%)</title><rect x="75.4553%" y="389" width="0.4337%" height="15" fill="rgb(235,85,53)" fg:x="870" fg:w="5"/><text x="75.7053%" y="399.50"></text></g><g><title>aetheria::renderer::RenderPass::record (34 samples, 2.95%)</title><rect x="73.0269%" y="517" width="2.9488%" height="15" fill="rgb(233,133,31)" fg:x="842" fg:w="34"/><text x="73.2769%" y="527.50">ae..</text></g><g><title>vulkan::command::BufferBuilder::transition_image_layout (17 samples, 1.47%)</title><rect x="74.5013%" y="501" width="1.4744%" height="15" fill="rgb(218,25,20)" fg:x="859" fg:w="17"/><text x="74.7513%" y="511.50"></text></g><g><title>ash::vk::definitions::ImageMemoryBarrierBuilder::src_access_mask (1 samples, 0.09%)</title><rect x="75.8890%" y="485" width="0.0867%" height="15" fill="rgb(252,210,38)" fg:x="875" fg:w="1"/><text x="76.1390%" y="495.50"></text></g><g><title>vulkan::command::BufferBuilder::record (36 samples, 3.12%)</title><rect x="73.0269%" y="549" width="3.1223%" height="15" fill="rgb(242,134,21)" fg:x="842" fg:w="36"/><text x="73.2769%" y="559.50">vul..</text></g><g><title>aetheria::renderer::Renderer::render::{{closure}} (36 samples, 3.12%)</title><rect x="73.0269%" y="533" width="3.1223%" height="15" fill="rgb(213,28,48)" fg:x="842" fg:w="36"/><text x="73.2769%" y="543.50">aet..</text></g><g><title>aetheria::renderer::UIPass::record (2 samples, 0.17%)</title><rect x="75.9757%" y="517" width="0.1735%" height="15" fill="rgb(250,196,2)" fg:x="876" fg:w="2"/><text x="76.2257%" y="527.50"></text></g><g><title>vulkan::command::BufferBuilder::transition_image_layout (2 samples, 0.17%)</title><rect x="75.9757%" y="501" width="0.1735%" height="15" fill="rgb(227,5,17)" fg:x="876" fg:w="2"/><text x="76.2257%" y="511.50"></text></g><g><title>ash::device::Device::cmd_pipeline_barrier (2 samples, 0.17%)</title><rect x="75.9757%" y="485" width="0.1735%" height="15" fill="rgb(221,226,24)" fg:x="876" fg:w="2"/><text x="76.2257%" y="495.50"></text></g><g><title>[amdvlk64.so] (2 samples, 0.17%)</title><rect x="75.9757%" y="469" width="0.1735%" height="15" fill="rgb(211,5,48)" fg:x="876" fg:w="2"/><text x="76.2257%" y="479.50"></text></g><g><title>[amdvlk64.so] (2 samples, 0.17%)</title><rect x="75.9757%" y="453" width="0.1735%" height="15" fill="rgb(219,150,6)" fg:x="876" fg:w="2"/><text x="76.2257%" y="463.50"></text></g><g><title>[amdvlk64.so] (2 samples, 0.17%)</title><rect x="75.9757%" y="437" width="0.1735%" height="15" fill="rgb(251,46,16)" fg:x="876" fg:w="2"/><text x="76.2257%" y="447.50"></text></g><g><title>[amdvlk64.so] (2 samples, 0.17%)</title><rect x="75.9757%" y="421" width="0.1735%" height="15" fill="rgb(220,204,40)" fg:x="876" fg:w="2"/><text x="76.2257%" y="431.50"></text></g><g><title>[amdvlk64.so] (2 samples, 0.17%)</title><rect x="75.9757%" y="405" width="0.1735%" height="15" fill="rgb(211,85,2)" fg:x="876" fg:w="2"/><text x="76.2257%" y="415.50"></text></g><g><title>vulkan::command::BufferBuilder::transition_image_layout (20 samples, 1.73%)</title><rect x="76.1492%" y="549" width="1.7346%" height="15" fill="rgb(229,17,7)" fg:x="878" fg:w="20"/><text x="76.3992%" y="559.50"></text></g><g><title>ash::device::Device::cmd_pipeline_barrier (20 samples, 1.73%)</title><rect x="76.1492%" y="533" width="1.7346%" height="15" fill="rgb(239,72,28)" fg:x="878" fg:w="20"/><text x="76.3992%" y="543.50"></text></g><g><title>[amdvlk64.so] (20 samples, 1.73%)</title><rect x="76.1492%" y="517" width="1.7346%" height="15" fill="rgb(230,47,54)" fg:x="878" fg:w="20"/><text x="76.3992%" y="527.50"></text></g><g><title>[amdvlk64.so] (20 samples, 1.73%)</title><rect x="76.1492%" y="501" width="1.7346%" height="15" fill="rgb(214,50,8)" fg:x="878" fg:w="20"/><text x="76.3992%" y="511.50"></text></g><g><title>[amdvlk64.so] (14 samples, 1.21%)</title><rect x="76.6696%" y="485" width="1.2142%" height="15" fill="rgb(216,198,43)" fg:x="884" fg:w="14"/><text x="76.9196%" y="495.50"></text></g><g><title>[amdvlk64.so] (14 samples, 1.21%)</title><rect x="76.6696%" y="469" width="1.2142%" height="15" fill="rgb(234,20,35)" fg:x="884" fg:w="14"/><text x="76.9196%" y="479.50"></text></g><g><title>[amdvlk64.so] (14 samples, 1.21%)</title><rect x="76.6696%" y="453" width="1.2142%" height="15" fill="rgb(254,45,19)" fg:x="884" fg:w="14"/><text x="76.9196%" y="463.50"></text></g><g><title>[amdvlk64.so] (11 samples, 0.95%)</title><rect x="76.9297%" y="437" width="0.9540%" height="15" fill="rgb(219,14,44)" fg:x="887" fg:w="11"/><text x="77.1797%" y="447.50"></text></g><g><title>[amdvlk64.so] (5 samples, 0.43%)</title><rect x="77.4501%" y="421" width="0.4337%" height="15" fill="rgb(217,220,26)" fg:x="893" fg:w="5"/><text x="77.7001%" y="431.50"></text></g><g><title>[amdvlk64.so] (1 samples, 0.09%)</title><rect x="77.7971%" y="405" width="0.0867%" height="15" fill="rgb(213,158,28)" fg:x="897" fg:w="1"/><text x="78.0471%" y="415.50"></text></g><g><title>[amdvlk64.so] (2 samples, 0.17%)</title><rect x="81.7866%" y="437" width="0.1735%" height="15" fill="rgb(252,51,52)" fg:x="943" fg:w="2"/><text x="82.0366%" y="447.50"></text></g><g><title>[amdvlk64.so] (12 samples, 1.04%)</title><rect x="81.0928%" y="453" width="1.0408%" height="15" fill="rgb(246,89,16)" fg:x="935" fg:w="12"/><text x="81.3428%" y="463.50"></text></g><g><title>posix_memalign (2 samples, 0.17%)</title><rect x="81.9601%" y="437" width="0.1735%" height="15" fill="rgb(216,158,49)" fg:x="945" fg:w="2"/><text x="82.2101%" y="447.50"></text></g><g><title>malloc (1 samples, 0.09%)</title><rect x="82.0468%" y="421" width="0.0867%" height="15" fill="rgb(236,107,19)" fg:x="946" fg:w="1"/><text x="82.2968%" y="431.50"></text></g><g><title>[amdvlk64.so] (39 samples, 3.38%)</title><rect x="78.9245%" y="469" width="3.3825%" height="15" fill="rgb(228,185,30)" fg:x="910" fg:w="39"/><text x="79.1745%" y="479.50">[am..</text></g><g><title>[libc.so.6] (2 samples, 0.17%)</title><rect x="82.1336%" y="453" width="0.1735%" height="15" fill="rgb(246,134,8)" fg:x="947" fg:w="2"/><text x="82.3836%" y="463.50"></text></g><g><title>ash::device::Device::allocate_command_buffers (53 samples, 4.60%)</title><rect x="77.8838%" y="533" width="4.5967%" height="15" fill="rgb(214,143,50)" fg:x="898" fg:w="53"/><text x="78.1338%" y="543.50">ash::..</text></g><g><title>vkAllocateCommandBuffers (53 samples, 4.60%)</title><rect x="77.8838%" y="517" width="4.5967%" height="15" fill="rgb(228,75,8)" fg:x="898" fg:w="53"/><text x="78.1338%" y="527.50">vkAll..</text></g><g><title>[amdvlk64.so] (51 samples, 4.42%)</title><rect x="78.0572%" y="501" width="4.4232%" height="15" fill="rgb(207,175,4)" fg:x="900" fg:w="51"/><text x="78.3072%" y="511.50">[amdv..</text></g><g><title>[amdvlk64.so] (45 samples, 3.90%)</title><rect x="78.5776%" y="485" width="3.9029%" height="15" fill="rgb(205,108,24)" fg:x="906" fg:w="45"/><text x="78.8276%" y="495.50">[amd..</text></g><g><title>posix_memalign (2 samples, 0.17%)</title><rect x="82.3070%" y="469" width="0.1735%" height="15" fill="rgb(244,120,49)" fg:x="949" fg:w="2"/><text x="82.5570%" y="479.50"></text></g><g><title>malloc (2 samples, 0.17%)</title><rect x="82.3070%" y="453" width="0.1735%" height="15" fill="rgb(223,47,38)" fg:x="949" fg:w="2"/><text x="82.5570%" y="463.50"></text></g><g><title>[libc.so.6] (2 samples, 0.17%)</title><rect x="82.3070%" y="437" width="0.1735%" height="15" fill="rgb(229,179,11)" fg:x="949" fg:w="2"/><text x="82.5570%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="82.3938%" y="421" width="0.0867%" height="15" fill="rgb(231,122,1)" fg:x="950" fg:w="1"/><text x="82.6438%" y="431.50"></text></g><g><title>ash::vk::definitions::CommandBufferAllocateInfo::builder (1 samples, 0.09%)</title><rect x="82.4805%" y="533" width="0.0867%" height="15" fill="rgb(245,119,9)" fg:x="951" fg:w="1"/><text x="82.7305%" y="543.50"></text></g><g><title>ash::vk::definitions::CommandBufferAllocateInfoBuilder::command_pool (1 samples, 0.09%)</title><rect x="82.5672%" y="533" width="0.0867%" height="15" fill="rgb(241,163,25)" fg:x="952" fg:w="1"/><text x="82.8172%" y="543.50"></text></g><g><title>vulkan::command::Pool::allocate (56 samples, 4.86%)</title><rect x="77.8838%" y="549" width="4.8569%" height="15" fill="rgb(217,214,3)" fg:x="898" fg:w="56"/><text x="78.1338%" y="559.50">vulkan..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;ash::vk::definitions::CommandBuffer&gt;&gt; (1 samples, 0.09%)</title><rect x="82.6539%" y="533" width="0.0867%" height="15" fill="rgb(240,86,28)" fg:x="953" fg:w="1"/><text x="82.9039%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;ash::vk::definitions::CommandBuffer&gt;&gt; (1 samples, 0.09%)</title><rect x="82.6539%" y="517" width="0.0867%" height="15" fill="rgb(215,47,9)" fg:x="953" fg:w="1"/><text x="82.9039%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="82.6539%" y="501" width="0.0867%" height="15" fill="rgb(252,25,45)" fg:x="953" fg:w="1"/><text x="82.9039%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.09%)</title><rect x="82.6539%" y="485" width="0.0867%" height="15" fill="rgb(251,164,9)" fg:x="953" fg:w="1"/><text x="82.9039%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.09%)</title><rect x="82.6539%" y="469" width="0.0867%" height="15" fill="rgb(233,194,0)" fg:x="953" fg:w="1"/><text x="82.9039%" y="479.50"></text></g><g><title>cfree (1 samples, 0.09%)</title><rect x="82.6539%" y="453" width="0.0867%" height="15" fill="rgb(249,111,24)" fg:x="953" fg:w="1"/><text x="82.9039%" y="463.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="82.6539%" y="437" width="0.0867%" height="15" fill="rgb(250,223,3)" fg:x="953" fg:w="1"/><text x="82.9039%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (1 samples, 0.09%)</title><rect x="82.7407%" y="533" width="0.0867%" height="15" fill="rgb(236,178,37)" fg:x="954" fg:w="1"/><text x="82.9907%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.09%)</title><rect x="82.7407%" y="517" width="0.0867%" height="15" fill="rgb(241,158,50)" fg:x="954" fg:w="1"/><text x="82.9907%" y="527.50"></text></g><g><title>[amdvlk64.so] (9 samples, 0.78%)</title><rect x="83.9549%" y="453" width="0.7806%" height="15" fill="rgb(213,121,41)" fg:x="968" fg:w="9"/><text x="84.2049%" y="463.50"></text></g><g><title>[amdvlk64.so] (1 samples, 0.09%)</title><rect x="84.6487%" y="437" width="0.0867%" height="15" fill="rgb(240,92,3)" fg:x="976" fg:w="1"/><text x="84.8987%" y="447.50"></text></g><g><title>[amdvlk64.so] (1 samples, 0.09%)</title><rect x="84.6487%" y="421" width="0.0867%" height="15" fill="rgb(205,123,3)" fg:x="976" fg:w="1"/><text x="84.8987%" y="431.50"></text></g><g><title>[amdvlk64.so] (22 samples, 1.91%)</title><rect x="83.2611%" y="469" width="1.9081%" height="15" fill="rgb(205,97,47)" fg:x="960" fg:w="22"/><text x="83.5111%" y="479.50">[..</text></g><g><title>cfree (5 samples, 0.43%)</title><rect x="84.7355%" y="453" width="0.4337%" height="15" fill="rgb(247,152,14)" fg:x="977" fg:w="5"/><text x="84.9855%" y="463.50"></text></g><g><title>[libc.so.6] (3 samples, 0.26%)</title><rect x="84.9089%" y="437" width="0.2602%" height="15" fill="rgb(248,195,53)" fg:x="979" fg:w="3"/><text x="85.1589%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="85.1691%" y="469" width="0.0867%" height="15" fill="rgb(226,201,16)" fg:x="982" fg:w="1"/><text x="85.4191%" y="479.50"></text></g><g><title>[amdvlk64.so] (27 samples, 2.34%)</title><rect x="83.0876%" y="485" width="2.3417%" height="15" fill="rgb(205,98,0)" fg:x="958" fg:w="27"/><text x="83.3376%" y="495.50">[..</text></g><g><title>pthread_mutex_lock (2 samples, 0.17%)</title><rect x="85.2559%" y="469" width="0.1735%" height="15" fill="rgb(214,191,48)" fg:x="983" fg:w="2"/><text x="85.5059%" y="479.50"></text></g><g><title>ash::device::Device::free_command_buffers (31 samples, 2.69%)</title><rect x="82.8274%" y="533" width="2.6886%" height="15" fill="rgb(237,112,39)" fg:x="955" fg:w="31"/><text x="83.0774%" y="543.50">as..</text></g><g><title>[amdvlk64.so] (31 samples, 2.69%)</title><rect x="82.8274%" y="517" width="2.6886%" height="15" fill="rgb(247,203,27)" fg:x="955" fg:w="31"/><text x="83.0774%" y="527.50">[a..</text></g><g><title>[amdvlk64.so] (31 samples, 2.69%)</title><rect x="82.8274%" y="501" width="2.6886%" height="15" fill="rgb(235,124,28)" fg:x="955" fg:w="31"/><text x="83.0774%" y="511.50">[a..</text></g><g><title>pthread_mutex_destroy (1 samples, 0.09%)</title><rect x="85.4293%" y="485" width="0.0867%" height="15" fill="rgb(208,207,46)" fg:x="985" fg:w="1"/><text x="85.6793%" y="495.50"></text></g><g><title>vulkan::command::Pool::clear (33 samples, 2.86%)</title><rect x="82.7407%" y="549" width="2.8621%" height="15" fill="rgb(234,176,4)" fg:x="954" fg:w="33"/><text x="82.9907%" y="559.50">vu..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.09%)</title><rect x="85.5160%" y="533" width="0.0867%" height="15" fill="rgb(230,133,28)" fg:x="986" fg:w="1"/><text x="85.7660%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.09%)</title><rect x="85.5160%" y="517" width="0.0867%" height="15" fill="rgb(211,137,40)" fg:x="986" fg:w="1"/><text x="85.7660%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.09%)</title><rect x="85.5160%" y="501" width="0.0867%" height="15" fill="rgb(254,35,13)" fg:x="986" fg:w="1"/><text x="85.7660%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.09%)</title><rect x="85.5160%" y="485" width="0.0867%" height="15" fill="rgb(225,49,51)" fg:x="986" fg:w="1"/><text x="85.7660%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.09%)</title><rect x="85.5160%" y="469" width="0.0867%" height="15" fill="rgb(251,10,15)" fg:x="986" fg:w="1"/><text x="85.7660%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.09%)</title><rect x="85.5160%" y="453" width="0.0867%" height="15" fill="rgb(228,207,15)" fg:x="986" fg:w="1"/><text x="85.7660%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.09%)</title><rect x="85.5160%" y="437" width="0.0867%" height="15" fill="rgb(241,99,19)" fg:x="986" fg:w="1"/><text x="85.7660%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.09%)</title><rect x="85.5160%" y="421" width="0.0867%" height="15" fill="rgb(207,104,49)" fg:x="986" fg:w="1"/><text x="85.7660%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.09%)</title><rect x="85.5160%" y="405" width="0.0867%" height="15" fill="rgb(234,99,18)" fg:x="986" fg:w="1"/><text x="85.7660%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="85.5160%" y="389" width="0.0867%" height="15" fill="rgb(213,191,49)" fg:x="986" fg:w="1"/><text x="85.7660%" y="399.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.09%)</title><rect x="85.5160%" y="373" width="0.0867%" height="15" fill="rgb(210,226,19)" fg:x="986" fg:w="1"/><text x="85.7660%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.09%)</title><rect x="85.5160%" y="357" width="0.0867%" height="15" fill="rgb(229,97,18)" fg:x="986" fg:w="1"/><text x="85.7660%" y="367.50"></text></g><g><title>&lt;ash::vk::definitions::DisplaySurfaceCreateInfoKHRBuilder as core::ops::deref::Deref&gt;::deref (1 samples, 0.09%)</title><rect x="85.6028%" y="533" width="0.0867%" height="15" fill="rgb(211,167,15)" fg:x="987" fg:w="1"/><text x="85.8528%" y="543.50"></text></g><g><title>[amdvlk64.so] (1 samples, 0.09%)</title><rect x="87.2507%" y="437" width="0.0867%" height="15" fill="rgb(210,169,34)" fg:x="1006" fg:w="1"/><text x="87.5007%" y="447.50"></text></g><g><title>[amdvlk64.so] (8 samples, 0.69%)</title><rect x="86.7303%" y="469" width="0.6938%" height="15" fill="rgb(241,121,31)" fg:x="1000" fg:w="8"/><text x="86.9803%" y="479.50"></text></g><g><title>[amdvlk64.so] (4 samples, 0.35%)</title><rect x="87.0772%" y="453" width="0.3469%" height="15" fill="rgb(232,40,11)" fg:x="1004" fg:w="4"/><text x="87.3272%" y="463.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="87.3374%" y="437" width="0.0867%" height="15" fill="rgb(205,86,26)" fg:x="1007" fg:w="1"/><text x="87.5874%" y="447.50"></text></g><g><title>[amdvlk64.so] (11 samples, 0.95%)</title><rect x="86.5568%" y="485" width="0.9540%" height="15" fill="rgb(231,126,28)" fg:x="998" fg:w="11"/><text x="86.8068%" y="495.50"></text></g><g><title>sem_post (1 samples, 0.09%)</title><rect x="87.4241%" y="469" width="0.0867%" height="15" fill="rgb(219,221,18)" fg:x="1008" fg:w="1"/><text x="87.6741%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="87.4241%" y="453" width="0.0867%" height="15" fill="rgb(211,40,0)" fg:x="1008" fg:w="1"/><text x="87.6741%" y="463.50"></text></g><g><title>amdgpu_cs_syncobj_wait (1 samples, 0.09%)</title><rect x="87.5108%" y="485" width="0.0867%" height="15" fill="rgb(239,85,43)" fg:x="1009" fg:w="1"/><text x="87.7608%" y="495.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (23 samples, 1.99%)</title><rect x="85.6895%" y="533" width="1.9948%" height="15" fill="rgb(231,55,21)" fg:x="988" fg:w="23"/><text x="85.9395%" y="543.50">a..</text></g><g><title>[amdvlk64.so] (23 samples, 1.99%)</title><rect x="85.6895%" y="517" width="1.9948%" height="15" fill="rgb(225,184,43)" fg:x="988" fg:w="23"/><text x="85.9395%" y="527.50">[..</text></g><g><title>[amdvlk64.so] (17 samples, 1.47%)</title><rect x="86.2099%" y="501" width="1.4744%" height="15" fill="rgb(251,158,41)" fg:x="994" fg:w="17"/><text x="86.4599%" y="511.50"></text></g><g><title>drmSyncobjWait (1 samples, 0.09%)</title><rect x="87.5976%" y="485" width="0.0867%" height="15" fill="rgb(234,159,37)" fg:x="1010" fg:w="1"/><text x="87.8476%" y="495.50"></text></g><g><title>vulkan::context::Context::end_frame (25 samples, 2.17%)</title><rect x="85.6028%" y="549" width="2.1683%" height="15" fill="rgb(216,204,22)" fg:x="987" fg:w="25"/><text x="85.8528%" y="559.50">v..</text></g><g><title>ash::vk::definitions::PresentInfoKHRBuilder::wait_semaphores (1 samples, 0.09%)</title><rect x="87.6843%" y="533" width="0.0867%" height="15" fill="rgb(214,17,3)" fg:x="1011" fg:w="1"/><text x="87.9343%" y="543.50"></text></g><g><title>ash::device::Device::reset_fences (3 samples, 0.26%)</title><rect x="87.8578%" y="533" width="0.2602%" height="15" fill="rgb(212,111,17)" fg:x="1013" fg:w="3"/><text x="88.1078%" y="543.50"></text></g><g><title>[amdvlk64.so] (3 samples, 0.26%)</title><rect x="87.8578%" y="517" width="0.2602%" height="15" fill="rgb(221,157,24)" fg:x="1013" fg:w="3"/><text x="88.1078%" y="527.50"></text></g><g><title>[amdvlk64.so] (3 samples, 0.26%)</title><rect x="87.8578%" y="501" width="0.2602%" height="15" fill="rgb(252,16,13)" fg:x="1013" fg:w="3"/><text x="88.1078%" y="511.50"></text></g><g><title>[amdvlk64.so] (3 samples, 0.26%)</title><rect x="87.8578%" y="485" width="0.2602%" height="15" fill="rgb(221,62,2)" fg:x="1013" fg:w="3"/><text x="88.1078%" y="495.50"></text></g><g><title>drmSyncobjReset (3 samples, 0.26%)</title><rect x="87.8578%" y="469" width="0.2602%" height="15" fill="rgb(247,87,22)" fg:x="1013" fg:w="3"/><text x="88.1078%" y="479.50"></text></g><g><title>drmIoctl (1 samples, 0.09%)</title><rect x="88.0312%" y="453" width="0.0867%" height="15" fill="rgb(215,73,9)" fg:x="1015" fg:w="1"/><text x="88.2812%" y="463.50"></text></g><g><title>ioctl (1 samples, 0.09%)</title><rect x="88.0312%" y="437" width="0.0867%" height="15" fill="rgb(207,175,33)" fg:x="1015" fg:w="1"/><text x="88.2812%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="88.0312%" y="421" width="0.0867%" height="15" fill="rgb(243,129,54)" fg:x="1015" fg:w="1"/><text x="88.2812%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="88.0312%" y="405" width="0.0867%" height="15" fill="rgb(227,119,45)" fg:x="1015" fg:w="1"/><text x="88.2812%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="88.0312%" y="389" width="0.0867%" height="15" fill="rgb(205,109,36)" fg:x="1015" fg:w="1"/><text x="88.2812%" y="399.50"></text></g><g><title>ash::device::Device::wait_for_fences (8 samples, 0.69%)</title><rect x="88.1180%" y="533" width="0.6938%" height="15" fill="rgb(205,6,39)" fg:x="1016" fg:w="8"/><text x="88.3680%" y="543.50"></text></g><g><title>[amdvlk64.so] (8 samples, 0.69%)</title><rect x="88.1180%" y="517" width="0.6938%" height="15" fill="rgb(221,32,16)" fg:x="1016" fg:w="8"/><text x="88.3680%" y="527.50"></text></g><g><title>[amdvlk64.so] (7 samples, 0.61%)</title><rect x="88.2047%" y="501" width="0.6071%" height="15" fill="rgb(228,144,50)" fg:x="1017" fg:w="7"/><text x="88.4547%" y="511.50"></text></g><g><title>drmSyncobjWait (6 samples, 0.52%)</title><rect x="88.2914%" y="485" width="0.5204%" height="15" fill="rgb(229,201,53)" fg:x="1018" fg:w="6"/><text x="88.5414%" y="495.50"></text></g><g><title>drmIoctl (4 samples, 0.35%)</title><rect x="88.4649%" y="469" width="0.3469%" height="15" fill="rgb(249,153,27)" fg:x="1020" fg:w="4"/><text x="88.7149%" y="479.50"></text></g><g><title>[amdvlk64.so] (1 samples, 0.09%)</title><rect x="89.5056%" y="437" width="0.0867%" height="15" fill="rgb(227,106,25)" fg:x="1032" fg:w="1"/><text x="89.7556%" y="447.50"></text></g><g><title>xshmfence_query (1 samples, 0.09%)</title><rect x="89.5056%" y="421" width="0.0867%" height="15" fill="rgb(230,65,29)" fg:x="1032" fg:w="1"/><text x="89.7556%" y="431.50"></text></g><g><title>pthread_mutex_lock (1 samples, 0.09%)</title><rect x="89.5924%" y="437" width="0.0867%" height="15" fill="rgb(221,57,46)" fg:x="1033" fg:w="1"/><text x="89.8424%" y="447.50"></text></g><g><title>[amdvlk64.so] (6 samples, 0.52%)</title><rect x="89.2454%" y="453" width="0.5204%" height="15" fill="rgb(229,161,17)" fg:x="1029" fg:w="6"/><text x="89.4954%" y="463.50"></text></g><g><title>pthread_rwlock_unlock (1 samples, 0.09%)</title><rect x="89.6791%" y="437" width="0.0867%" height="15" fill="rgb(222,213,11)" fg:x="1034" fg:w="1"/><text x="89.9291%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="89.7658%" y="453" width="0.0867%" height="15" fill="rgb(235,35,13)" fg:x="1035" fg:w="1"/><text x="90.0158%" y="463.50"></text></g><g><title>clock_gettime (3 samples, 0.26%)</title><rect x="89.8526%" y="453" width="0.2602%" height="15" fill="rgb(233,158,34)" fg:x="1036" fg:w="3"/><text x="90.1026%" y="463.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.09%)</title><rect x="90.0260%" y="437" width="0.0867%" height="15" fill="rgb(215,151,48)" fg:x="1038" fg:w="1"/><text x="90.2760%" y="447.50"></text></g><g><title>drmSyncobjSignal (1 samples, 0.09%)</title><rect x="90.1127%" y="453" width="0.0867%" height="15" fill="rgb(229,84,14)" fg:x="1039" fg:w="1"/><text x="90.3627%" y="463.50"></text></g><g><title>drmIoctl (1 samples, 0.09%)</title><rect x="90.1127%" y="437" width="0.0867%" height="15" fill="rgb(229,68,14)" fg:x="1039" fg:w="1"/><text x="90.3627%" y="447.50"></text></g><g><title>aetheria::renderer::Renderer::render (487 samples, 42.24%)</title><rect x="48.0486%" y="565" width="42.2376%" height="15" fill="rgb(243,106,26)" fg:x="554" fg:w="487"/><text x="48.2986%" y="575.50">aetheria::renderer::Renderer::render</text></g><g><title>vulkan::context::Context::start_frame (29 samples, 2.52%)</title><rect x="87.7710%" y="549" width="2.5152%" height="15" fill="rgb(206,45,38)" fg:x="1012" fg:w="29"/><text x="88.0210%" y="559.50">vu..</text></g><g><title>ash::extensions::khr::swapchain::Swapchain::acquire_next_image (17 samples, 1.47%)</title><rect x="88.8118%" y="533" width="1.4744%" height="15" fill="rgb(226,6,15)" fg:x="1024" fg:w="17"/><text x="89.0618%" y="543.50"></text></g><g><title>[amdvlk64.so] (17 samples, 1.47%)</title><rect x="88.8118%" y="517" width="1.4744%" height="15" fill="rgb(232,22,54)" fg:x="1024" fg:w="17"/><text x="89.0618%" y="527.50"></text></g><g><title>[amdvlk64.so] (17 samples, 1.47%)</title><rect x="88.8118%" y="501" width="1.4744%" height="15" fill="rgb(229,222,32)" fg:x="1024" fg:w="17"/><text x="89.0618%" y="511.50"></text></g><g><title>[amdvlk64.so] (15 samples, 1.30%)</title><rect x="88.9853%" y="485" width="1.3010%" height="15" fill="rgb(228,62,29)" fg:x="1026" fg:w="15"/><text x="89.2353%" y="495.50"></text></g><g><title>[amdvlk64.so] (15 samples, 1.30%)</title><rect x="88.9853%" y="469" width="1.3010%" height="15" fill="rgb(251,103,34)" fg:x="1026" fg:w="15"/><text x="89.2353%" y="479.50"></text></g><g><title>pthread_mutex_lock (1 samples, 0.09%)</title><rect x="90.1995%" y="453" width="0.0867%" height="15" fill="rgb(233,12,30)" fg:x="1040" fg:w="1"/><text x="90.4495%" y="463.50"></text></g><g><title>&lt;glam::f32::vec3::Vec3 as core::ops::arith::Mul&lt;f32&gt;&gt;::mul (1 samples, 0.09%)</title><rect x="90.3729%" y="501" width="0.0867%" height="15" fill="rgb(238,52,0)" fg:x="1042" fg:w="1"/><text x="90.6229%" y="511.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (1 samples, 0.09%)</title><rect x="90.3729%" y="485" width="0.0867%" height="15" fill="rgb(223,98,5)" fg:x="1042" fg:w="1"/><text x="90.6229%" y="495.50"></text></g><g><title>glam::f32::sse2::quat::Quat::normalize (1 samples, 0.09%)</title><rect x="90.4597%" y="485" width="0.0867%" height="15" fill="rgb(228,75,37)" fg:x="1043" fg:w="1"/><text x="90.7097%" y="495.50"></text></g><g><title>glam::f32::sse2::vec4::Vec4::normalize (1 samples, 0.09%)</title><rect x="90.4597%" y="469" width="0.0867%" height="15" fill="rgb(205,115,49)" fg:x="1043" fg:w="1"/><text x="90.7097%" y="479.50"></text></g><g><title>glam::sse2::dot4_into_m128 (1 samples, 0.09%)</title><rect x="90.4597%" y="453" width="0.0867%" height="15" fill="rgb(250,154,43)" fg:x="1043" fg:w="1"/><text x="90.7097%" y="463.50"></text></g><g><title>core::core_arch::x86::sse::_mm_shuffle_ps (1 samples, 0.09%)</title><rect x="90.4597%" y="437" width="0.0867%" height="15" fill="rgb(226,43,29)" fg:x="1043" fg:w="1"/><text x="90.7097%" y="447.50"></text></g><g><title>glam::f32::sse2::quat::Quat::from_rotation_arc (2 samples, 0.17%)</title><rect x="90.4597%" y="501" width="0.1735%" height="15" fill="rgb(249,228,39)" fg:x="1043" fg:w="2"/><text x="90.7097%" y="511.50"></text></g><g><title>glam::f32::vec3::Vec3::dot (1 samples, 0.09%)</title><rect x="90.5464%" y="485" width="0.0867%" height="15" fill="rgb(216,79,43)" fg:x="1044" fg:w="1"/><text x="90.7964%" y="495.50"></text></g><g><title>rand::rng::Rng::gen_range (1 samples, 0.09%)</title><rect x="90.6331%" y="501" width="0.0867%" height="15" fill="rgb(228,95,12)" fg:x="1045" fg:w="1"/><text x="90.8831%" y="511.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distributions::uniform::SampleRange&lt;T&gt;&gt;::sample_single (1 samples, 0.09%)</title><rect x="90.6331%" y="485" width="0.0867%" height="15" fill="rgb(249,221,15)" fg:x="1045" fg:w="1"/><text x="90.8831%" y="495.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformFloat&lt;f32&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single (1 samples, 0.09%)</title><rect x="90.6331%" y="469" width="0.0867%" height="15" fill="rgb(233,34,13)" fg:x="1045" fg:w="1"/><text x="90.8831%" y="479.50"></text></g><g><title>rand::rng::Rng::gen (1 samples, 0.09%)</title><rect x="90.6331%" y="453" width="0.0867%" height="15" fill="rgb(214,103,39)" fg:x="1045" fg:w="1"/><text x="90.8831%" y="463.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u32&gt; for rand::distributions::Standard&gt;::sample (1 samples, 0.09%)</title><rect x="90.6331%" y="437" width="0.0867%" height="15" fill="rgb(251,126,39)" fg:x="1045" fg:w="1"/><text x="90.8831%" y="447.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u32 (1 samples, 0.09%)</title><rect x="90.6331%" y="421" width="0.0867%" height="15" fill="rgb(214,216,36)" fg:x="1045" fg:w="1"/><text x="90.8831%" y="431.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u32 (1 samples, 0.09%)</title><rect x="90.6331%" y="405" width="0.0867%" height="15" fill="rgb(220,221,8)" fg:x="1045" fg:w="1"/><text x="90.8831%" y="415.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (1 samples, 0.09%)</title><rect x="90.6331%" y="389" width="0.0867%" height="15" fill="rgb(240,216,3)" fg:x="1045" fg:w="1"/><text x="90.8831%" y="399.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (6 samples, 0.52%)</title><rect x="90.2862%" y="549" width="0.5204%" height="15" fill="rgb(232,218,17)" fg:x="1041" fg:w="6"/><text x="90.5362%" y="559.50"></text></g><g><title>aetheria::scenes::root::RootScene::frame_finished::{{closure}} (6 samples, 0.52%)</title><rect x="90.2862%" y="533" width="0.5204%" height="15" fill="rgb(229,163,45)" fg:x="1041" fg:w="6"/><text x="90.5362%" y="543.50"></text></g><g><title>aetheria::entities::firefly::Firefly::frame_finished (6 samples, 0.52%)</title><rect x="90.2862%" y="517" width="0.5204%" height="15" fill="rgb(231,110,42)" fg:x="1041" fg:w="6"/><text x="90.5362%" y="527.50"></text></g><g><title>rand::rngs::thread::thread_rng (1 samples, 0.09%)</title><rect x="90.7199%" y="501" width="0.0867%" height="15" fill="rgb(208,170,48)" fg:x="1046" fg:w="1"/><text x="90.9699%" y="511.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.09%)</title><rect x="90.7199%" y="485" width="0.0867%" height="15" fill="rgb(239,116,25)" fg:x="1046" fg:w="1"/><text x="90.9699%" y="495.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.09%)</title><rect x="90.7199%" y="469" width="0.0867%" height="15" fill="rgb(219,200,50)" fg:x="1046" fg:w="1"/><text x="90.9699%" y="479.50"></text></g><g><title>rand::rngs::thread::THREAD_RNG_KEY::__getit (1 samples, 0.09%)</title><rect x="90.7199%" y="453" width="0.0867%" height="15" fill="rgb(245,200,0)" fg:x="1046" fg:w="1"/><text x="90.9699%" y="463.50"></text></g><g><title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::get (1 samples, 0.09%)</title><rect x="90.7199%" y="437" width="0.0867%" height="15" fill="rgb(245,119,33)" fg:x="1046" fg:w="1"/><text x="90.9699%" y="447.50"></text></g><g><title>std::sys::common::thread_local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.09%)</title><rect x="90.7199%" y="421" width="0.0867%" height="15" fill="rgb(231,125,12)" fg:x="1046" fg:w="1"/><text x="90.9699%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.09%)</title><rect x="90.7199%" y="405" width="0.0867%" height="15" fill="rgb(216,96,41)" fg:x="1046" fg:w="1"/><text x="90.9699%" y="415.50"></text></g><g><title>aetheria::camera::Camera::get_rotation (1 samples, 0.09%)</title><rect x="90.9801%" y="533" width="0.0867%" height="15" fill="rgb(248,43,45)" fg:x="1049" fg:w="1"/><text x="91.2301%" y="543.50"></text></g><g><title>glam::f32::sse2::quat::Quat::from_axis_angle (1 samples, 0.09%)</title><rect x="90.9801%" y="517" width="0.0867%" height="15" fill="rgb(217,222,7)" fg:x="1049" fg:w="1"/><text x="91.2301%" y="527.50"></text></g><g><title>glam::f32::math::std_math::sin_cos (1 samples, 0.09%)</title><rect x="90.9801%" y="501" width="0.0867%" height="15" fill="rgb(233,28,6)" fg:x="1049" fg:w="1"/><text x="91.2301%" y="511.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::sin_cos (1 samples, 0.09%)</title><rect x="90.9801%" y="485" width="0.0867%" height="15" fill="rgb(231,218,15)" fg:x="1049" fg:w="1"/><text x="91.2301%" y="495.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::sin (1 samples, 0.09%)</title><rect x="90.9801%" y="469" width="0.0867%" height="15" fill="rgb(226,171,48)" fg:x="1049" fg:w="1"/><text x="91.2301%" y="479.50"></text></g><g><title>[libm.so.6] (1 samples, 0.09%)</title><rect x="90.9801%" y="453" width="0.0867%" height="15" fill="rgb(235,201,9)" fg:x="1049" fg:w="1"/><text x="91.2301%" y="463.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.09%)</title><rect x="91.0668%" y="453" width="0.0867%" height="15" fill="rgb(217,80,15)" fg:x="1050" fg:w="1"/><text x="91.3168%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.09%)</title><rect x="91.0668%" y="437" width="0.0867%" height="15" fill="rgb(219,152,8)" fg:x="1050" fg:w="1"/><text x="91.3168%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.09%)</title><rect x="91.0668%" y="421" width="0.0867%" height="15" fill="rgb(243,107,38)" fg:x="1050" fg:w="1"/><text x="91.3168%" y="431.50"></text></g><g><title>&lt;winit::event::VirtualKeyCode as core::hash::Hash&gt;::hash (1 samples, 0.09%)</title><rect x="91.0668%" y="405" width="0.0867%" height="15" fill="rgb(231,17,5)" fg:x="1050" fg:w="1"/><text x="91.3168%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.09%)</title><rect x="91.0668%" y="389" width="0.0867%" height="15" fill="rgb(209,25,54)" fg:x="1050" fg:w="1"/><text x="91.3168%" y="399.50"></text></g><g><title>core::hash::Hasher::write_u32 (1 samples, 0.09%)</title><rect x="91.0668%" y="373" width="0.0867%" height="15" fill="rgb(219,0,2)" fg:x="1050" fg:w="1"/><text x="91.3168%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.09%)</title><rect x="91.0668%" y="357" width="0.0867%" height="15" fill="rgb(246,9,5)" fg:x="1050" fg:w="1"/><text x="91.3168%" y="367.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.09%)</title><rect x="91.0668%" y="341" width="0.0867%" height="15" fill="rgb(226,159,4)" fg:x="1050" fg:w="1"/><text x="91.3168%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.09%)</title><rect x="91.0668%" y="325" width="0.0867%" height="15" fill="rgb(219,175,34)" fg:x="1050" fg:w="1"/><text x="91.3168%" y="335.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.09%)</title><rect x="91.0668%" y="309" width="0.0867%" height="15" fill="rgb(236,10,46)" fg:x="1050" fg:w="1"/><text x="91.3168%" y="319.50"></text></g><g><title>aetheria::input::Keyboard::is_key_down (2 samples, 0.17%)</title><rect x="91.0668%" y="533" width="0.1735%" height="15" fill="rgb(240,211,16)" fg:x="1050" fg:w="2"/><text x="91.3168%" y="543.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (2 samples, 0.17%)</title><rect x="91.0668%" y="517" width="0.1735%" height="15" fill="rgb(205,3,43)" fg:x="1050" fg:w="2"/><text x="91.3168%" y="527.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (2 samples, 0.17%)</title><rect x="91.0668%" y="501" width="0.1735%" height="15" fill="rgb(245,7,22)" fg:x="1050" fg:w="2"/><text x="91.3168%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (2 samples, 0.17%)</title><rect x="91.0668%" y="485" width="0.1735%" height="15" fill="rgb(239,132,32)" fg:x="1050" fg:w="2"/><text x="91.3168%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.17%)</title><rect x="91.0668%" y="469" width="0.1735%" height="15" fill="rgb(228,202,34)" fg:x="1050" fg:w="2"/><text x="91.3168%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.09%)</title><rect x="91.1535%" y="453" width="0.0867%" height="15" fill="rgb(254,200,22)" fg:x="1051" fg:w="1"/><text x="91.4035%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.09%)</title><rect x="91.1535%" y="437" width="0.0867%" height="15" fill="rgb(219,10,39)" fg:x="1051" fg:w="1"/><text x="91.4035%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.09%)</title><rect x="91.1535%" y="421" width="0.0867%" height="15" fill="rgb(226,210,39)" fg:x="1051" fg:w="1"/><text x="91.4035%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.09%)</title><rect x="91.1535%" y="405" width="0.0867%" height="15" fill="rgb(208,219,16)" fg:x="1051" fg:w="1"/><text x="91.4035%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.09%)</title><rect x="91.1535%" y="389" width="0.0867%" height="15" fill="rgb(216,158,51)" fg:x="1051" fg:w="1"/><text x="91.4035%" y="399.50"></text></g><g><title>aetheria::time::Time::delta_seconds (1 samples, 0.09%)</title><rect x="91.2402%" y="533" width="0.0867%" height="15" fill="rgb(233,14,44)" fg:x="1052" fg:w="1"/><text x="91.4902%" y="543.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (1 samples, 0.09%)</title><rect x="91.2402%" y="517" width="0.0867%" height="15" fill="rgb(237,97,39)" fg:x="1052" fg:w="1"/><text x="91.4902%" y="527.50"></text></g><g><title>std::time::Instant::duration_since (1 samples, 0.09%)</title><rect x="91.2402%" y="501" width="0.0867%" height="15" fill="rgb(218,198,43)" fg:x="1052" fg:w="1"/><text x="91.4902%" y="511.50"></text></g><g><title>std::time::Instant::checked_duration_since (1 samples, 0.09%)</title><rect x="91.2402%" y="485" width="0.0867%" height="15" fill="rgb(231,104,20)" fg:x="1052" fg:w="1"/><text x="91.4902%" y="495.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (1 samples, 0.09%)</title><rect x="91.2402%" y="469" width="0.0867%" height="15" fill="rgb(254,36,13)" fg:x="1052" fg:w="1"/><text x="91.4902%" y="479.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (1 samples, 0.09%)</title><rect x="91.2402%" y="453" width="0.0867%" height="15" fill="rgb(248,14,50)" fg:x="1052" fg:w="1"/><text x="91.4902%" y="463.50"></text></g><g><title>net::ClientboundPacket::to_bytes (2 samples, 0.17%)</title><rect x="91.3270%" y="533" width="0.1735%" height="15" fill="rgb(217,107,29)" fg:x="1053" fg:w="2"/><text x="91.5770%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.09%)</title><rect x="91.4137%" y="517" width="0.0867%" height="15" fill="rgb(251,169,33)" fg:x="1054" fg:w="1"/><text x="91.6637%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.09%)</title><rect x="91.4137%" y="501" width="0.0867%" height="15" fill="rgb(217,108,32)" fg:x="1054" fg:w="1"/><text x="91.6637%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.09%)</title><rect x="91.4137%" y="485" width="0.0867%" height="15" fill="rgb(219,66,42)" fg:x="1054" fg:w="1"/><text x="91.6637%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.09%)</title><rect x="91.4137%" y="469" width="0.0867%" height="15" fill="rgb(206,180,7)" fg:x="1054" fg:w="1"/><text x="91.6637%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="91.4137%" y="453" width="0.0867%" height="15" fill="rgb(208,226,31)" fg:x="1054" fg:w="1"/><text x="91.6637%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="91.4137%" y="437" width="0.0867%" height="15" fill="rgb(218,26,49)" fg:x="1054" fg:w="1"/><text x="91.6637%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.09%)</title><rect x="91.4137%" y="421" width="0.0867%" height="15" fill="rgb(233,197,48)" fg:x="1054" fg:w="1"/><text x="91.6637%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.09%)</title><rect x="91.4137%" y="405" width="0.0867%" height="15" fill="rgb(252,181,51)" fg:x="1054" fg:w="1"/><text x="91.6637%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.09%)</title><rect x="91.4137%" y="389" width="0.0867%" height="15" fill="rgb(253,90,19)" fg:x="1054" fg:w="1"/><text x="91.6637%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.09%)</title><rect x="91.4137%" y="373" width="0.0867%" height="15" fill="rgb(215,171,30)" fg:x="1054" fg:w="1"/><text x="91.6637%" y="383.50"></text></g><g><title>malloc (1 samples, 0.09%)</title><rect x="91.4137%" y="357" width="0.0867%" height="15" fill="rgb(214,222,9)" fg:x="1054" fg:w="1"/><text x="91.6637%" y="367.50"></text></g><g><title>aetheria::entities::player::Player::frame_finished (9 samples, 0.78%)</title><rect x="90.8066%" y="549" width="0.7806%" height="15" fill="rgb(223,3,22)" fg:x="1047" fg:w="9"/><text x="91.0566%" y="559.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powf (1 samples, 0.09%)</title><rect x="91.5004%" y="533" width="0.0867%" height="15" fill="rgb(225,196,46)" fg:x="1055" fg:w="1"/><text x="91.7504%" y="543.50"></text></g><g><title>[libm.so.6] (1 samples, 0.09%)</title><rect x="91.5004%" y="517" width="0.0867%" height="15" fill="rgb(209,110,37)" fg:x="1055" fg:w="1"/><text x="91.7504%" y="527.50"></text></g><g><title>aetheria::scenes::root::RootScene::frame_finished (16 samples, 1.39%)</title><rect x="90.2862%" y="565" width="1.3877%" height="15" fill="rgb(249,89,12)" fg:x="1041" fg:w="16"/><text x="90.5362%" y="575.50"></text></g><g><title>aetheria::entities::sun::Sun::frame_finished (1 samples, 0.09%)</title><rect x="91.5872%" y="549" width="0.0867%" height="15" fill="rgb(226,27,33)" fg:x="1056" fg:w="1"/><text x="91.8372%" y="559.50"></text></g><g><title>aetheria::time::Time::delta_seconds (1 samples, 0.09%)</title><rect x="91.5872%" y="533" width="0.0867%" height="15" fill="rgb(213,82,22)" fg:x="1056" fg:w="1"/><text x="91.8372%" y="543.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (1 samples, 0.09%)</title><rect x="91.5872%" y="517" width="0.0867%" height="15" fill="rgb(248,140,0)" fg:x="1056" fg:w="1"/><text x="91.8372%" y="527.50"></text></g><g><title>aetheria::scenes::root::RootScene::get_lights (1 samples, 0.09%)</title><rect x="91.6739%" y="565" width="0.0867%" height="15" fill="rgb(228,106,3)" fg:x="1057" fg:w="1"/><text x="91.9239%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.09%)</title><rect x="91.6739%" y="549" width="0.0867%" height="15" fill="rgb(209,23,37)" fg:x="1057" fg:w="1"/><text x="91.9239%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.09%)</title><rect x="91.6739%" y="533" width="0.0867%" height="15" fill="rgb(241,93,50)" fg:x="1057" fg:w="1"/><text x="91.9239%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.09%)</title><rect x="91.6739%" y="517" width="0.0867%" height="15" fill="rgb(253,46,43)" fg:x="1057" fg:w="1"/><text x="91.9239%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.09%)</title><rect x="91.6739%" y="501" width="0.0867%" height="15" fill="rgb(226,206,43)" fg:x="1057" fg:w="1"/><text x="91.9239%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.09%)</title><rect x="91.6739%" y="485" width="0.0867%" height="15" fill="rgb(217,54,7)" fg:x="1057" fg:w="1"/><text x="91.9239%" y="495.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.09%)</title><rect x="91.6739%" y="469" width="0.0867%" height="15" fill="rgb(223,5,52)" fg:x="1057" fg:w="1"/><text x="91.9239%" y="479.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.09%)</title><rect x="91.6739%" y="453" width="0.0867%" height="15" fill="rgb(206,52,46)" fg:x="1057" fg:w="1"/><text x="91.9239%" y="463.50"></text></g><g><title>realloc (1 samples, 0.09%)</title><rect x="91.6739%" y="437" width="0.0867%" height="15" fill="rgb(253,136,11)" fg:x="1057" fg:w="1"/><text x="91.9239%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="91.6739%" y="421" width="0.0867%" height="15" fill="rgb(208,106,33)" fg:x="1057" fg:w="1"/><text x="91.9239%" y="431.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="91.6739%" y="405" width="0.0867%" height="15" fill="rgb(206,54,4)" fg:x="1057" fg:w="1"/><text x="91.9239%" y="415.50"></text></g><g><title>core::fmt::Formatter::new (1 samples, 0.09%)</title><rect x="91.9341%" y="453" width="0.0867%" height="15" fill="rgb(213,3,15)" fg:x="1060" fg:w="1"/><text x="92.1841%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts (3 samples, 0.26%)</title><rect x="92.0208%" y="421" width="0.2602%" height="15" fill="rgb(252,211,39)" fg:x="1061" fg:w="3"/><text x="92.2708%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts::write_bytes (3 samples, 0.26%)</title><rect x="92.0208%" y="405" width="0.2602%" height="15" fill="rgb(223,6,36)" fg:x="1061" fg:w="3"/><text x="92.2708%" y="415.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (3 samples, 0.26%)</title><rect x="92.0208%" y="389" width="0.2602%" height="15" fill="rgb(252,169,45)" fg:x="1061" fg:w="3"/><text x="92.2708%" y="399.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (2 samples, 0.17%)</title><rect x="92.1075%" y="373" width="0.1735%" height="15" fill="rgb(212,48,26)" fg:x="1062" fg:w="2"/><text x="92.3575%" y="383.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (2 samples, 0.17%)</title><rect x="92.1075%" y="357" width="0.1735%" height="15" fill="rgb(251,102,48)" fg:x="1062" fg:w="2"/><text x="92.3575%" y="367.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (2 samples, 0.17%)</title><rect x="92.1075%" y="341" width="0.1735%" height="15" fill="rgb(243,208,16)" fg:x="1062" fg:w="2"/><text x="92.3575%" y="351.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (2 samples, 0.17%)</title><rect x="92.1075%" y="325" width="0.1735%" height="15" fill="rgb(219,96,24)" fg:x="1062" fg:w="2"/><text x="92.3575%" y="335.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (2 samples, 0.17%)</title><rect x="92.1075%" y="309" width="0.1735%" height="15" fill="rgb(219,33,29)" fg:x="1062" fg:w="2"/><text x="92.3575%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.09%)</title><rect x="92.1943%" y="293" width="0.0867%" height="15" fill="rgb(223,176,5)" fg:x="1063" fg:w="1"/><text x="92.4443%" y="303.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="92.1943%" y="277" width="0.0867%" height="15" fill="rgb(228,140,14)" fg:x="1063" fg:w="1"/><text x="92.4443%" y="287.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (7 samples, 0.61%)</title><rect x="91.7606%" y="517" width="0.6071%" height="15" fill="rgb(217,179,31)" fg:x="1058" fg:w="7"/><text x="92.0106%" y="527.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (7 samples, 0.61%)</title><rect x="91.7606%" y="501" width="0.6071%" height="15" fill="rgb(230,9,30)" fg:x="1058" fg:w="7"/><text x="92.0106%" y="511.50"></text></g><g><title>std::io::Write::write_fmt (7 samples, 0.61%)</title><rect x="91.7606%" y="485" width="0.6071%" height="15" fill="rgb(230,136,20)" fg:x="1058" fg:w="7"/><text x="92.0106%" y="495.50"></text></g><g><title>core::fmt::write (7 samples, 0.61%)</title><rect x="91.7606%" y="469" width="0.6071%" height="15" fill="rgb(215,210,22)" fg:x="1058" fg:w="7"/><text x="92.0106%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.35%)</title><rect x="92.0208%" y="453" width="0.3469%" height="15" fill="rgb(218,43,5)" fg:x="1061" fg:w="4"/><text x="92.2708%" y="463.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_shortest (4 samples, 0.35%)</title><rect x="92.0208%" y="437" width="0.3469%" height="15" fill="rgb(216,11,5)" fg:x="1061" fg:w="4"/><text x="92.2708%" y="447.50"></text></g><g><title>core::num::flt2dec::to_shortest_str (1 samples, 0.09%)</title><rect x="92.2810%" y="421" width="0.0867%" height="15" fill="rgb(209,82,29)" fg:x="1064" fg:w="1"/><text x="92.5310%" y="431.50"></text></g><g><title>core::num::flt2dec::decoder::decode (1 samples, 0.09%)</title><rect x="92.2810%" y="405" width="0.0867%" height="15" fill="rgb(244,115,12)" fg:x="1064" fg:w="1"/><text x="92.5310%" y="415.50"></text></g><g><title>std::io::stdio::_print (8 samples, 0.69%)</title><rect x="91.7606%" y="549" width="0.6938%" height="15" fill="rgb(222,82,18)" fg:x="1058" fg:w="8"/><text x="92.0106%" y="559.50"></text></g><g><title>std::io::stdio::print_to (8 samples, 0.69%)</title><rect x="91.7606%" y="533" width="0.6938%" height="15" fill="rgb(249,227,8)" fg:x="1058" fg:w="8"/><text x="92.0106%" y="543.50"></text></g><g><title>std::io::stdio::print_to_buffer_if_capture_used (1 samples, 0.09%)</title><rect x="92.3677%" y="517" width="0.0867%" height="15" fill="rgb(253,141,45)" fg:x="1065" fg:w="1"/><text x="92.6177%" y="527.50"></text></g><g><title>aetheria::time::Time::frame_finished (9 samples, 0.78%)</title><rect x="91.7606%" y="565" width="0.7806%" height="15" fill="rgb(234,184,4)" fg:x="1058" fg:w="9"/><text x="92.0106%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.09%)</title><rect x="92.4545%" y="549" width="0.0867%" height="15" fill="rgb(218,194,23)" fg:x="1066" fg:w="1"/><text x="92.7045%" y="559.50"></text></g><g><title>clock_gettime (1 samples, 0.09%)</title><rect x="92.4545%" y="533" width="0.0867%" height="15" fill="rgb(235,66,41)" fg:x="1066" fg:w="1"/><text x="92.7045%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.09%)</title><rect x="92.5412%" y="565" width="0.0867%" height="15" fill="rgb(245,217,1)" fg:x="1067" fg:w="1"/><text x="92.7912%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.09%)</title><rect x="92.5412%" y="549" width="0.0867%" height="15" fill="rgb(229,91,1)" fg:x="1067" fg:w="1"/><text x="92.7912%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.09%)</title><rect x="92.5412%" y="533" width="0.0867%" height="15" fill="rgb(207,101,30)" fg:x="1067" fg:w="1"/><text x="92.7912%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.09%)</title><rect x="92.5412%" y="517" width="0.0867%" height="15" fill="rgb(223,82,49)" fg:x="1067" fg:w="1"/><text x="92.7912%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="92.5412%" y="501" width="0.0867%" height="15" fill="rgb(218,167,17)" fg:x="1067" fg:w="1"/><text x="92.7912%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="92.5412%" y="485" width="0.0867%" height="15" fill="rgb(208,103,14)" fg:x="1067" fg:w="1"/><text x="92.7912%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="92.5412%" y="469" width="0.0867%" height="15" fill="rgb(238,20,8)" fg:x="1067" fg:w="1"/><text x="92.7912%" y="479.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="92.5412%" y="453" width="0.0867%" height="15" fill="rgb(218,80,54)" fg:x="1067" fg:w="1"/><text x="92.7912%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="92.5412%" y="437" width="0.0867%" height="15" fill="rgb(240,144,17)" fg:x="1067" fg:w="1"/><text x="92.7912%" y="447.50"></text></g><g><title>std::io::stdio::_print (4 samples, 0.35%)</title><rect x="92.6279%" y="565" width="0.3469%" height="15" fill="rgb(245,27,50)" fg:x="1068" fg:w="4"/><text x="92.8779%" y="575.50"></text></g><g><title>std::io::stdio::print_to (3 samples, 0.26%)</title><rect x="92.7147%" y="549" width="0.2602%" height="15" fill="rgb(251,51,7)" fg:x="1069" fg:w="3"/><text x="92.9647%" y="559.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (3 samples, 0.26%)</title><rect x="92.7147%" y="533" width="0.2602%" height="15" fill="rgb(245,217,29)" fg:x="1069" fg:w="3"/><text x="92.9647%" y="543.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (3 samples, 0.26%)</title><rect x="92.7147%" y="517" width="0.2602%" height="15" fill="rgb(221,176,29)" fg:x="1069" fg:w="3"/><text x="92.9647%" y="527.50"></text></g><g><title>std::io::Write::write_fmt (3 samples, 0.26%)</title><rect x="92.7147%" y="501" width="0.2602%" height="15" fill="rgb(212,180,24)" fg:x="1069" fg:w="3"/><text x="92.9647%" y="511.50"></text></g><g><title>core::fmt::write (3 samples, 0.26%)</title><rect x="92.7147%" y="485" width="0.2602%" height="15" fill="rgb(254,24,2)" fg:x="1069" fg:w="3"/><text x="92.9647%" y="495.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (2 samples, 0.17%)</title><rect x="92.8014%" y="469" width="0.1735%" height="15" fill="rgb(230,100,2)" fg:x="1070" fg:w="2"/><text x="93.0514%" y="479.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (2 samples, 0.17%)</title><rect x="92.8014%" y="453" width="0.1735%" height="15" fill="rgb(219,142,25)" fg:x="1070" fg:w="2"/><text x="93.0514%" y="463.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (2 samples, 0.17%)</title><rect x="92.8014%" y="437" width="0.1735%" height="15" fill="rgb(240,73,43)" fg:x="1070" fg:w="2"/><text x="93.0514%" y="447.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (2 samples, 0.17%)</title><rect x="92.8014%" y="421" width="0.1735%" height="15" fill="rgb(214,114,15)" fg:x="1070" fg:w="2"/><text x="93.0514%" y="431.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write_all (2 samples, 0.17%)</title><rect x="92.8014%" y="405" width="0.1735%" height="15" fill="rgb(207,130,4)" fg:x="1070" fg:w="2"/><text x="93.0514%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="92.8014%" y="389" width="0.1735%" height="15" fill="rgb(221,25,40)" fg:x="1070" fg:w="2"/><text x="93.0514%" y="399.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="92.8014%" y="373" width="0.1735%" height="15" fill="rgb(241,184,7)" fg:x="1070" fg:w="2"/><text x="93.0514%" y="383.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (2 samples, 0.17%)</title><rect x="92.8014%" y="357" width="0.1735%" height="15" fill="rgb(235,159,4)" fg:x="1070" fg:w="2"/><text x="93.0514%" y="367.50"></text></g><g><title>write (2 samples, 0.17%)</title><rect x="92.8014%" y="341" width="0.1735%" height="15" fill="rgb(214,87,48)" fg:x="1070" fg:w="2"/><text x="93.0514%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="92.8014%" y="325" width="0.1735%" height="15" fill="rgb(246,198,24)" fg:x="1070" fg:w="2"/><text x="93.0514%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="92.8014%" y="309" width="0.1735%" height="15" fill="rgb(209,66,40)" fg:x="1070" fg:w="2"/><text x="93.0514%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="92.8014%" y="293" width="0.1735%" height="15" fill="rgb(233,147,39)" fg:x="1070" fg:w="2"/><text x="93.0514%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="92.8014%" y="277" width="0.1735%" height="15" fill="rgb(231,145,52)" fg:x="1070" fg:w="2"/><text x="93.0514%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="92.8014%" y="261" width="0.1735%" height="15" fill="rgb(206,20,26)" fg:x="1070" fg:w="2"/><text x="93.0514%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="92.8881%" y="245" width="0.0867%" height="15" fill="rgb(238,220,4)" fg:x="1071" fg:w="1"/><text x="93.1381%" y="255.50"></text></g><g><title>winit::event_loop::ControlFlow::set_poll (2 samples, 0.17%)</title><rect x="92.9748%" y="565" width="0.1735%" height="15" fill="rgb(252,195,42)" fg:x="1072" fg:w="2"/><text x="93.2248%" y="575.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (4 samples, 0.35%)</title><rect x="93.1483%" y="517" width="0.3469%" height="15" fill="rgb(209,10,6)" fg:x="1074" fg:w="4"/><text x="93.3983%" y="527.50"></text></g><g><title>&lt;winit::dpi::PhysicalSize&lt;P&gt; as core::convert::From&lt;(X,X)&gt;&gt;::from (4 samples, 0.35%)</title><rect x="93.1483%" y="501" width="0.3469%" height="15" fill="rgb(229,3,52)" fg:x="1074" fg:w="4"/><text x="93.3983%" y="511.50"></text></g><g><title>winit::dpi::Pixel::cast (4 samples, 0.35%)</title><rect x="93.1483%" y="485" width="0.3469%" height="15" fill="rgb(253,49,37)" fg:x="1074" fg:w="4"/><text x="93.3983%" y="495.50"></text></g><g><title>&lt;u32 as winit::dpi::Pixel&gt;::from_f64 (4 samples, 0.35%)</title><rect x="93.1483%" y="469" width="0.3469%" height="15" fill="rgb(240,103,49)" fg:x="1074" fg:w="4"/><text x="93.3983%" y="479.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::round (3 samples, 0.26%)</title><rect x="93.2350%" y="453" width="0.2602%" height="15" fill="rgb(250,182,30)" fg:x="1075" fg:w="3"/><text x="93.4850%" y="463.50"></text></g><g><title>roundf32x (1 samples, 0.09%)</title><rect x="93.4085%" y="437" width="0.0867%" height="15" fill="rgb(248,8,30)" fg:x="1077" fg:w="1"/><text x="93.6585%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.09%)</title><rect x="93.5820%" y="501" width="0.0867%" height="15" fill="rgb(237,120,30)" fg:x="1079" fg:w="1"/><text x="93.8320%" y="511.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.09%)</title><rect x="93.5820%" y="485" width="0.0867%" height="15" fill="rgb(221,146,34)" fg:x="1079" fg:w="1"/><text x="93.8320%" y="495.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.09%)</title><rect x="93.5820%" y="469" width="0.0867%" height="15" fill="rgb(242,55,13)" fg:x="1079" fg:w="1"/><text x="93.8320%" y="479.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.09%)</title><rect x="93.8422%" y="469" width="0.0867%" height="15" fill="rgb(242,112,31)" fg:x="1082" fg:w="1"/><text x="94.0922%" y="479.50"></text></g><g><title>pthread_mutex_lock (1 samples, 0.09%)</title><rect x="93.8422%" y="453" width="0.0867%" height="15" fill="rgb(249,192,27)" fg:x="1082" fg:w="1"/><text x="94.0922%" y="463.50"></text></g><g><title>_XGetRequest (1 samples, 0.09%)</title><rect x="93.9289%" y="469" width="0.0867%" height="15" fill="rgb(208,204,44)" fg:x="1083" fg:w="1"/><text x="94.1789%" y="479.50"></text></g><g><title>_XEventsQueued (1 samples, 0.09%)</title><rect x="93.9289%" y="453" width="0.0867%" height="15" fill="rgb(208,93,54)" fg:x="1083" fg:w="1"/><text x="94.1789%" y="463.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.09%)</title><rect x="93.9289%" y="437" width="0.0867%" height="15" fill="rgb(242,1,31)" fg:x="1083" fg:w="1"/><text x="94.1789%" y="447.50"></text></g><g><title>cfree (1 samples, 0.09%)</title><rect x="93.9289%" y="421" width="0.0867%" height="15" fill="rgb(241,83,25)" fg:x="1083" fg:w="1"/><text x="94.1789%" y="431.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.09%)</title><rect x="94.1891%" y="405" width="0.0867%" height="15" fill="rgb(205,169,50)" fg:x="1086" fg:w="1"/><text x="94.4391%" y="415.50"></text></g><g><title>recvmsg (1 samples, 0.09%)</title><rect x="94.1891%" y="389" width="0.0867%" height="15" fill="rgb(239,186,37)" fg:x="1086" fg:w="1"/><text x="94.4391%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="94.1891%" y="373" width="0.0867%" height="15" fill="rgb(205,221,10)" fg:x="1086" fg:w="1"/><text x="94.4391%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="94.1891%" y="357" width="0.0867%" height="15" fill="rgb(218,196,15)" fg:x="1086" fg:w="1"/><text x="94.4391%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="94.1891%" y="341" width="0.0867%" height="15" fill="rgb(218,196,35)" fg:x="1086" fg:w="1"/><text x="94.4391%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="94.1891%" y="325" width="0.0867%" height="15" fill="rgb(233,63,24)" fg:x="1086" fg:w="1"/><text x="94.4391%" y="335.50"></text></g><g><title>[libX11.so.6.4.0] (2 samples, 0.17%)</title><rect x="94.1891%" y="437" width="0.1735%" height="15" fill="rgb(225,8,4)" fg:x="1086" fg:w="2"/><text x="94.4391%" y="447.50"></text></g><g><title>[libxcb.so.1.1.0] (2 samples, 0.17%)</title><rect x="94.1891%" y="421" width="0.1735%" height="15" fill="rgb(234,105,35)" fg:x="1086" fg:w="2"/><text x="94.4391%" y="431.50"></text></g><g><title>pthread_mutex_unlock (1 samples, 0.09%)</title><rect x="94.2758%" y="405" width="0.0867%" height="15" fill="rgb(236,21,32)" fg:x="1087" fg:w="1"/><text x="94.5258%" y="415.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="94.3625%" y="437" width="0.0867%" height="15" fill="rgb(228,109,6)" fg:x="1088" fg:w="1"/><text x="94.6125%" y="447.50"></text></g><g><title>_XEnq (6 samples, 0.52%)</title><rect x="94.4493%" y="437" width="0.5204%" height="15" fill="rgb(229,215,31)" fg:x="1089" fg:w="6"/><text x="94.6993%" y="447.50"></text></g><g><title>[libXext.so.6.4.0] (4 samples, 0.35%)</title><rect x="94.6227%" y="421" width="0.3469%" height="15" fill="rgb(221,52,54)" fg:x="1091" fg:w="4"/><text x="94.8727%" y="431.50"></text></g><g><title>[libXext.so.6.4.0] (2 samples, 0.17%)</title><rect x="94.7962%" y="405" width="0.1735%" height="15" fill="rgb(252,129,43)" fg:x="1093" fg:w="2"/><text x="95.0462%" y="415.50"></text></g><g><title>XextFindDisplay (2 samples, 0.17%)</title><rect x="94.7962%" y="389" width="0.1735%" height="15" fill="rgb(248,183,27)" fg:x="1093" fg:w="2"/><text x="95.0462%" y="399.50"></text></g><g><title>[libX11.so.6.4.0] (12 samples, 1.04%)</title><rect x="94.0156%" y="453" width="1.0408%" height="15" fill="rgb(250,0,22)" fg:x="1084" fg:w="12"/><text x="94.2656%" y="463.50"></text></g><g><title>pthread_mutex_lock (1 samples, 0.09%)</title><rect x="94.9696%" y="437" width="0.0867%" height="15" fill="rgb(213,166,10)" fg:x="1095" fg:w="1"/><text x="95.2196%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="95.1431%" y="389" width="0.0867%" height="15" fill="rgb(207,163,36)" fg:x="1097" fg:w="1"/><text x="95.3931%" y="399.50"></text></g><g><title>[libxcb.so.1.1.0] (3 samples, 0.26%)</title><rect x="95.2298%" y="389" width="0.2602%" height="15" fill="rgb(208,122,22)" fg:x="1098" fg:w="3"/><text x="95.4798%" y="399.50"></text></g><g><title>malloc (1 samples, 0.09%)</title><rect x="95.4033%" y="373" width="0.0867%" height="15" fill="rgb(207,104,49)" fg:x="1100" fg:w="1"/><text x="95.6533%" y="383.50"></text></g><g><title>pthread_cond_signal (1 samples, 0.09%)</title><rect x="95.4900%" y="389" width="0.0867%" height="15" fill="rgb(248,211,50)" fg:x="1101" fg:w="1"/><text x="95.7400%" y="399.50"></text></g><g><title>[libxcb.so.1.1.0] (6 samples, 0.52%)</title><rect x="95.1431%" y="421" width="0.5204%" height="15" fill="rgb(217,13,45)" fg:x="1097" fg:w="6"/><text x="95.3931%" y="431.50"></text></g><g><title>[libxcb.so.1.1.0] (6 samples, 0.52%)</title><rect x="95.1431%" y="405" width="0.5204%" height="15" fill="rgb(211,216,49)" fg:x="1097" fg:w="6"/><text x="95.3931%" y="415.50"></text></g><g><title>writev (1 samples, 0.09%)</title><rect x="95.5768%" y="389" width="0.0867%" height="15" fill="rgb(221,58,53)" fg:x="1102" fg:w="1"/><text x="95.8268%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="95.5768%" y="373" width="0.0867%" height="15" fill="rgb(220,112,41)" fg:x="1102" fg:w="1"/><text x="95.8268%" y="383.50"></text></g><g><title>_XSend (8 samples, 0.69%)</title><rect x="95.0564%" y="453" width="0.6938%" height="15" fill="rgb(236,38,28)" fg:x="1096" fg:w="8"/><text x="95.3064%" y="463.50"></text></g><g><title>xcb_writev (7 samples, 0.61%)</title><rect x="95.1431%" y="437" width="0.6071%" height="15" fill="rgb(227,195,22)" fg:x="1097" fg:w="7"/><text x="95.3931%" y="447.50"></text></g><g><title>pthread_mutex_lock (1 samples, 0.09%)</title><rect x="95.6635%" y="421" width="0.0867%" height="15" fill="rgb(214,55,33)" fg:x="1103" fg:w="1"/><text x="95.9135%" y="431.50"></text></g><g><title>pthread_cond_broadcast (1 samples, 0.09%)</title><rect x="95.7502%" y="453" width="0.0867%" height="15" fill="rgb(248,80,13)" fg:x="1104" fg:w="1"/><text x="96.0002%" y="463.50"></text></g><g><title>pthread_mutex_unlock (1 samples, 0.09%)</title><rect x="95.8369%" y="453" width="0.0867%" height="15" fill="rgb(238,52,6)" fg:x="1105" fg:w="1"/><text x="96.0869%" y="463.50"></text></g><g><title>malloc (1 samples, 0.09%)</title><rect x="96.5308%" y="389" width="0.0867%" height="15" fill="rgb(224,198,47)" fg:x="1113" fg:w="1"/><text x="96.7808%" y="399.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="96.7042%" y="373" width="0.0867%" height="15" fill="rgb(233,171,20)" fg:x="1115" fg:w="1"/><text x="96.9542%" y="383.50"></text></g><g><title>[libxcb.so.1.1.0] (7 samples, 0.61%)</title><rect x="96.3573%" y="405" width="0.6071%" height="15" fill="rgb(241,30,25)" fg:x="1111" fg:w="7"/><text x="96.6073%" y="415.50"></text></g><g><title>recvmsg (4 samples, 0.35%)</title><rect x="96.6175%" y="389" width="0.3469%" height="15" fill="rgb(207,171,38)" fg:x="1114" fg:w="4"/><text x="96.8675%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="96.7910%" y="373" width="0.1735%" height="15" fill="rgb(234,70,1)" fg:x="1116" fg:w="2"/><text x="97.0410%" y="383.50"></text></g><g><title>[libc.so.6] (4 samples, 0.35%)</title><rect x="97.3981%" y="389" width="0.3469%" height="15" fill="rgb(232,178,18)" fg:x="1123" fg:w="4"/><text x="97.6481%" y="399.50"></text></g><g><title>__poll (10 samples, 0.87%)</title><rect x="96.9644%" y="405" width="0.8673%" height="15" fill="rgb(241,78,40)" fg:x="1118" fg:w="10"/><text x="97.2144%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="97.7450%" y="389" width="0.0867%" height="15" fill="rgb(222,35,25)" fg:x="1127" fg:w="1"/><text x="97.9950%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="97.7450%" y="373" width="0.0867%" height="15" fill="rgb(207,92,16)" fg:x="1127" fg:w="1"/><text x="97.9950%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="97.7450%" y="357" width="0.0867%" height="15" fill="rgb(216,59,51)" fg:x="1127" fg:w="1"/><text x="97.9950%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="97.7450%" y="341" width="0.0867%" height="15" fill="rgb(213,80,28)" fg:x="1127" fg:w="1"/><text x="97.9950%" y="351.50"></text></g><g><title>XGetGeometry (51 samples, 4.42%)</title><rect x="93.6687%" y="485" width="4.4232%" height="15" fill="rgb(220,93,7)" fg:x="1080" fg:w="51"/><text x="93.9187%" y="495.50">XGetG..</text></g><g><title>_XReply (47 samples, 4.08%)</title><rect x="94.0156%" y="469" width="4.0763%" height="15" fill="rgb(225,24,44)" fg:x="1084" fg:w="47"/><text x="94.2656%" y="479.50">_XRe..</text></g><g><title>xcb_wait_for_reply64 (25 samples, 2.17%)</title><rect x="95.9237%" y="453" width="2.1683%" height="15" fill="rgb(243,74,40)" fg:x="1106" fg:w="25"/><text x="96.1737%" y="463.50">x..</text></g><g><title>[libxcb.so.1.1.0] (25 samples, 2.17%)</title><rect x="95.9237%" y="437" width="2.1683%" height="15" fill="rgb(228,39,7)" fg:x="1106" fg:w="25"/><text x="96.1737%" y="447.50">[..</text></g><g><title>[libxcb.so.1.1.0] (24 samples, 2.08%)</title><rect x="96.0104%" y="421" width="2.0815%" height="15" fill="rgb(227,79,8)" fg:x="1107" fg:w="24"/><text x="96.2604%" y="431.50">[..</text></g><g><title>pthread_mutex_lock (3 samples, 0.26%)</title><rect x="97.8317%" y="405" width="0.2602%" height="15" fill="rgb(236,58,11)" fg:x="1128" fg:w="3"/><text x="98.0817%" y="415.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (584 samples, 50.65%)</title><rect x="47.5282%" y="597" width="50.6505%" height="15" fill="rgb(249,63,35)" fg:x="548" fg:w="584"/><text x="47.7782%" y="607.50">winit::platform_impl::platform::sticky_exit_callback</text></g><g><title>aetheria::main::{{closure}} (584 samples, 50.65%)</title><rect x="47.5282%" y="581" width="50.6505%" height="15" fill="rgb(252,114,16)" fg:x="548" fg:w="584"/><text x="47.7782%" y="591.50">aetheria::main::{{closure}}</text></g><g><title>winit::window::Window::inner_size (58 samples, 5.03%)</title><rect x="93.1483%" y="565" width="5.0304%" height="15" fill="rgb(254,151,24)" fg:x="1074" fg:w="58"/><text x="93.3983%" y="575.50">winit:..</text></g><g><title>winit::platform_impl::platform::Window::inner_size (58 samples, 5.03%)</title><rect x="93.1483%" y="549" width="5.0304%" height="15" fill="rgb(253,54,39)" fg:x="1074" fg:w="58"/><text x="93.3983%" y="559.50">winit:..</text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::inner_size (58 samples, 5.03%)</title><rect x="93.1483%" y="533" width="5.0304%" height="15" fill="rgb(243,25,45)" fg:x="1074" fg:w="58"/><text x="93.3983%" y="543.50">winit:..</text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::inner_size_physical (54 samples, 4.68%)</title><rect x="93.4952%" y="517" width="4.6834%" height="15" fill="rgb(234,134,9)" fg:x="1078" fg:w="54"/><text x="93.7452%" y="527.50">winit..</text></g><g><title>winit::platform_impl::platform::x11::util::geometry::&lt;impl winit::platform_impl::platform::x11::xdisplay::XConnection&gt;::get_geometry (52 samples, 4.51%)</title><rect x="93.6687%" y="501" width="4.5100%" height="15" fill="rgb(227,166,31)" fg:x="1080" fg:w="52"/><text x="93.9187%" y="511.50">winit..</text></g><g><title>winit::platform_impl::platform::x11::xdisplay::XConnection::check_errors (1 samples, 0.09%)</title><rect x="98.0919%" y="485" width="0.0867%" height="15" fill="rgb(245,143,41)" fg:x="1131" fg:w="1"/><text x="98.3419%" y="495.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.09%)</title><rect x="98.0919%" y="469" width="0.0867%" height="15" fill="rgb(238,181,32)" fg:x="1131" fg:w="1"/><text x="98.3419%" y="479.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (1 samples, 0.09%)</title><rect x="98.0919%" y="453" width="0.0867%" height="15" fill="rgb(224,113,18)" fg:x="1131" fg:w="1"/><text x="98.3419%" y="463.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.09%)</title><rect x="98.2654%" y="549" width="0.0867%" height="15" fill="rgb(240,229,28)" fg:x="1133" fg:w="1"/><text x="98.5154%" y="559.50"></text></g><g><title>pthread_mutex_lock (1 samples, 0.09%)</title><rect x="98.2654%" y="533" width="0.0867%" height="15" fill="rgb(250,185,3)" fg:x="1133" fg:w="1"/><text x="98.5154%" y="543.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::poll_one_event (3 samples, 0.26%)</title><rect x="98.1787%" y="581" width="0.2602%" height="15" fill="rgb(212,59,25)" fg:x="1132" fg:w="3"/><text x="98.4287%" y="591.50"></text></g><g><title>XCheckIfEvent (3 samples, 0.26%)</title><rect x="98.1787%" y="565" width="0.2602%" height="15" fill="rgb(221,87,20)" fg:x="1132" fg:w="3"/><text x="98.4287%" y="575.50"></text></g><g><title>_XEventsQueued (1 samples, 0.09%)</title><rect x="98.3521%" y="549" width="0.0867%" height="15" fill="rgb(213,74,28)" fg:x="1134" fg:w="1"/><text x="98.6021%" y="559.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.09%)</title><rect x="98.3521%" y="533" width="0.0867%" height="15" fill="rgb(224,132,34)" fg:x="1134" fg:w="1"/><text x="98.6021%" y="543.50"></text></g><g><title>XFilterEvent (1 samples, 0.09%)</title><rect x="98.5256%" y="565" width="0.0867%" height="15" fill="rgb(222,101,24)" fg:x="1136" fg:w="1"/><text x="98.7756%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;winit::platform_impl::platform::x11::GenericEventCookie&gt; (1 samples, 0.09%)</title><rect x="98.6123%" y="565" width="0.0867%" height="15" fill="rgb(254,142,4)" fg:x="1137" fg:w="1"/><text x="98.8623%" y="575.50"></text></g><g><title>&lt;winit::platform_impl::platform::x11::GenericEventCookie as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="98.6123%" y="549" width="0.0867%" height="15" fill="rgb(230,229,49)" fg:x="1137" fg:w="1"/><text x="98.8623%" y="559.50"></text></g><g><title>XGetEventData (1 samples, 0.09%)</title><rect x="98.7858%" y="549" width="0.0867%" height="15" fill="rgb(238,70,47)" fg:x="1139" fg:w="1"/><text x="99.0358%" y="559.50"></text></g><g><title>_XFetchEventCookie (1 samples, 0.09%)</title><rect x="98.7858%" y="533" width="0.0867%" height="15" fill="rgb(231,160,17)" fg:x="1139" fg:w="1"/><text x="99.0358%" y="543.50"></text></g><g><title>winit::platform_impl::platform::x11::GenericEventCookie::from_event (3 samples, 0.26%)</title><rect x="98.6990%" y="565" width="0.2602%" height="15" fill="rgb(218,68,53)" fg:x="1138" fg:w="3"/><text x="98.9490%" y="575.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="98.8725%" y="549" width="0.0867%" height="15" fill="rgb(236,111,10)" fg:x="1140" fg:w="1"/><text x="99.1225%" y="559.50"></text></g><g><title>winit::platform_impl::platform::x11::util::input::&lt;impl winit::platform_impl::platform::x11::xdisplay::XConnection&gt;::lookup_utf8 (1 samples, 0.09%)</title><rect x="98.9592%" y="565" width="0.0867%" height="15" fill="rgb(224,34,41)" fg:x="1141" fg:w="1"/><text x="99.2092%" y="575.50"></text></g><g><title>winit::platform_impl::platform::x11::util::input::&lt;impl winit::platform_impl::platform::x11::xdisplay::XConnection&gt;::lookup_utf8_inner (1 samples, 0.09%)</title><rect x="98.9592%" y="549" width="0.0867%" height="15" fill="rgb(241,118,19)" fg:x="1141" fg:w="1"/><text x="99.2092%" y="559.50"></text></g><g><title>Xutf8LookupString (1 samples, 0.09%)</title><rect x="98.9592%" y="533" width="0.0867%" height="15" fill="rgb(238,129,25)" fg:x="1141" fg:w="1"/><text x="99.2092%" y="543.50"></text></g><g><title>XkbLookupKeySym (1 samples, 0.09%)</title><rect x="99.0460%" y="533" width="0.0867%" height="15" fill="rgb(238,22,31)" fg:x="1142" fg:w="1"/><text x="99.2960%" y="543.50"></text></g><g><title>winit::platform_impl::platform::x11::util::keys::&lt;impl winit::platform_impl::platform::x11::xdisplay::XConnection&gt;::lookup_keysym (2 samples, 0.17%)</title><rect x="99.0460%" y="565" width="0.1735%" height="15" fill="rgb(222,174,48)" fg:x="1142" fg:w="2"/><text x="99.2960%" y="575.50"></text></g><g><title>XLookupString (2 samples, 0.17%)</title><rect x="99.0460%" y="549" width="0.1735%" height="15" fill="rgb(206,152,40)" fg:x="1142" fg:w="2"/><text x="99.2960%" y="559.50"></text></g><g><title>XkbTranslateKeySym (1 samples, 0.09%)</title><rect x="99.1327%" y="533" width="0.0867%" height="15" fill="rgb(218,99,54)" fg:x="1143" fg:w="1"/><text x="99.3827%" y="543.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::drain_events (13 samples, 1.13%)</title><rect x="98.1787%" y="597" width="1.1275%" height="15" fill="rgb(220,174,26)" fg:x="1132" fg:w="13"/><text x="98.4287%" y="607.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::process_event (10 samples, 0.87%)</title><rect x="98.4389%" y="581" width="0.8673%" height="15" fill="rgb(245,116,9)" fg:x="1135" fg:w="10"/><text x="98.6889%" y="591.50"></text></g><g><title>winit::platform_impl::platform::x11::util::modifiers::ModifierKeymap::get_modifier (1 samples, 0.09%)</title><rect x="99.2194%" y="565" width="0.0867%" height="15" fill="rgb(209,72,35)" fg:x="1144" fg:w="1"/><text x="99.4694%" y="575.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.09%)</title><rect x="99.2194%" y="549" width="0.0867%" height="15" fill="rgb(226,126,21)" fg:x="1144" fg:w="1"/><text x="99.4694%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.09%)</title><rect x="99.2194%" y="533" width="0.0867%" height="15" fill="rgb(227,192,1)" fg:x="1144" fg:w="1"/><text x="99.4694%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.09%)</title><rect x="99.2194%" y="517" width="0.0867%" height="15" fill="rgb(237,180,29)" fg:x="1144" fg:w="1"/><text x="99.4694%" y="527.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return::single_iteration (602 samples, 52.21%)</title><rect x="47.1813%" y="613" width="52.2116%" height="15" fill="rgb(230,197,35)" fg:x="544" fg:w="602"/><text x="47.4313%" y="623.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return::single_iteration</text></g><g><title>winit::platform_impl::platform::x11::PeekableReceiver&lt;T&gt;::try_recv (1 samples, 0.09%)</title><rect x="99.3062%" y="597" width="0.0867%" height="15" fill="rgb(246,193,31)" fg:x="1145" fg:w="1"/><text x="99.5562%" y="607.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::try_recv (1 samples, 0.09%)</title><rect x="99.3062%" y="581" width="0.0867%" height="15" fill="rgb(241,36,4)" fg:x="1145" fg:w="1"/><text x="99.5562%" y="591.50"></text></g><g><title>std::sync::mpmc::Receiver&lt;T&gt;::try_recv (1 samples, 0.09%)</title><rect x="99.3062%" y="565" width="0.0867%" height="15" fill="rgb(241,130,17)" fg:x="1145" fg:w="1"/><text x="99.5562%" y="575.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::try_recv (1 samples, 0.09%)</title><rect x="99.3062%" y="549" width="0.0867%" height="15" fill="rgb(206,137,32)" fg:x="1145" fg:w="1"/><text x="99.5562%" y="559.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::start_recv (1 samples, 0.09%)</title><rect x="99.3062%" y="533" width="0.0867%" height="15" fill="rgb(237,228,51)" fg:x="1145" fg:w="1"/><text x="99.5562%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.09%)</title><rect x="99.3062%" y="517" width="0.0867%" height="15" fill="rgb(243,6,42)" fg:x="1145" fg:w="1"/><text x="99.5562%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.09%)</title><rect x="99.3062%" y="501" width="0.0867%" height="15" fill="rgb(251,74,28)" fg:x="1145" fg:w="1"/><text x="99.5562%" y="511.50"></text></g><g><title>winit::platform_impl::platform::x11::PeekableReceiver&lt;T&gt;::has_incoming (2 samples, 0.17%)</title><rect x="99.3929%" y="613" width="0.1735%" height="15" fill="rgb(218,20,49)" fg:x="1146" fg:w="2"/><text x="99.6429%" y="623.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::try_recv (2 samples, 0.17%)</title><rect x="99.3929%" y="597" width="0.1735%" height="15" fill="rgb(238,28,14)" fg:x="1146" fg:w="2"/><text x="99.6429%" y="607.50"></text></g><g><title>std::sync::mpmc::Receiver&lt;T&gt;::try_recv (2 samples, 0.17%)</title><rect x="99.3929%" y="581" width="0.1735%" height="15" fill="rgb(229,40,46)" fg:x="1146" fg:w="2"/><text x="99.6429%" y="591.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::try_recv (1 samples, 0.09%)</title><rect x="99.4796%" y="565" width="0.0867%" height="15" fill="rgb(244,195,20)" fg:x="1147" fg:w="1"/><text x="99.7296%" y="575.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.09%)</title><rect x="99.7398%" y="565" width="0.0867%" height="15" fill="rgb(253,56,35)" fg:x="1150" fg:w="1"/><text x="99.9898%" y="575.50"></text></g><g><title>xcb_poll_for_reply64 (1 samples, 0.09%)</title><rect x="99.7398%" y="549" width="0.0867%" height="15" fill="rgb(210,149,44)" fg:x="1150" fg:w="1"/><text x="99.9898%" y="559.50"></text></g><g><title>pthread_mutex_lock (1 samples, 0.09%)</title><rect x="99.7398%" y="533" width="0.0867%" height="15" fill="rgb(240,135,12)" fg:x="1150" fg:w="1"/><text x="99.9898%" y="543.50"></text></g><g><title>all (1,153 samples, 100%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(251,24,50)" fg:x="0" fg:w="1153"/><text x="0.2500%" y="991.50"></text></g><g><title>aetheria (1,153 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(243,200,47)" fg:x="0" fg:w="1153"/><text x="0.2500%" y="975.50">aetheria</text></g><g><title>_start (616 samples, 53.43%)</title><rect x="46.5742%" y="949" width="53.4258%" height="15" fill="rgb(224,166,26)" fg:x="537" fg:w="616"/><text x="46.8242%" y="959.50">_start</text></g><g><title>__libc_start_main (616 samples, 53.43%)</title><rect x="46.5742%" y="933" width="53.4258%" height="15" fill="rgb(233,0,47)" fg:x="537" fg:w="616"/><text x="46.8242%" y="943.50">__libc_start_main</text></g><g><title>[libc.so.6] (616 samples, 53.43%)</title><rect x="46.5742%" y="917" width="53.4258%" height="15" fill="rgb(253,80,5)" fg:x="537" fg:w="616"/><text x="46.8242%" y="927.50">[libc.so.6]</text></g><g><title>main (616 samples, 53.43%)</title><rect x="46.5742%" y="901" width="53.4258%" height="15" fill="rgb(214,133,25)" fg:x="537" fg:w="616"/><text x="46.8242%" y="911.50">main</text></g><g><title>std::rt::lang_start_internal (616 samples, 53.43%)</title><rect x="46.5742%" y="885" width="53.4258%" height="15" fill="rgb(209,27,14)" fg:x="537" fg:w="616"/><text x="46.8242%" y="895.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (616 samples, 53.43%)</title><rect x="46.5742%" y="869" width="53.4258%" height="15" fill="rgb(219,102,51)" fg:x="537" fg:w="616"/><text x="46.8242%" y="879.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (616 samples, 53.43%)</title><rect x="46.5742%" y="853" width="53.4258%" height="15" fill="rgb(237,18,16)" fg:x="537" fg:w="616"/><text x="46.8242%" y="863.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (616 samples, 53.43%)</title><rect x="46.5742%" y="837" width="53.4258%" height="15" fill="rgb(241,85,17)" fg:x="537" fg:w="616"/><text x="46.8242%" y="847.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (616 samples, 53.43%)</title><rect x="46.5742%" y="821" width="53.4258%" height="15" fill="rgb(236,90,42)" fg:x="537" fg:w="616"/><text x="46.8242%" y="831.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (616 samples, 53.43%)</title><rect x="46.5742%" y="805" width="53.4258%" height="15" fill="rgb(249,57,21)" fg:x="537" fg:w="616"/><text x="46.8242%" y="815.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (616 samples, 53.43%)</title><rect x="46.5742%" y="789" width="53.4258%" height="15" fill="rgb(243,12,36)" fg:x="537" fg:w="616"/><text x="46.8242%" y="799.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (616 samples, 53.43%)</title><rect x="46.5742%" y="773" width="53.4258%" height="15" fill="rgb(253,128,47)" fg:x="537" fg:w="616"/><text x="46.8242%" y="783.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (616 samples, 53.43%)</title><rect x="46.5742%" y="757" width="53.4258%" height="15" fill="rgb(207,33,20)" fg:x="537" fg:w="616"/><text x="46.8242%" y="767.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (616 samples, 53.43%)</title><rect x="46.5742%" y="741" width="53.4258%" height="15" fill="rgb(233,215,35)" fg:x="537" fg:w="616"/><text x="46.8242%" y="751.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (616 samples, 53.43%)</title><rect x="46.5742%" y="725" width="53.4258%" height="15" fill="rgb(249,188,52)" fg:x="537" fg:w="616"/><text x="46.8242%" y="735.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (616 samples, 53.43%)</title><rect x="46.5742%" y="709" width="53.4258%" height="15" fill="rgb(225,12,32)" fg:x="537" fg:w="616"/><text x="46.8242%" y="719.50">core::ops::function::FnOnce::call_once</text></g><g><title>aetheria::main (616 samples, 53.43%)</title><rect x="46.5742%" y="693" width="53.4258%" height="15" fill="rgb(247,98,14)" fg:x="537" fg:w="616"/><text x="46.8242%" y="703.50">aetheria::main</text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (613 samples, 53.17%)</title><rect x="46.8343%" y="677" width="53.1657%" height="15" fill="rgb(247,219,48)" fg:x="540" fg:w="613"/><text x="47.0843%" y="687.50">winit::event_loop::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (613 samples, 53.17%)</title><rect x="46.8343%" y="661" width="53.1657%" height="15" fill="rgb(253,60,48)" fg:x="540" fg:w="613"/><text x="47.0843%" y="671.50">winit::platform_impl::platform::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (613 samples, 53.17%)</title><rect x="46.8343%" y="645" width="53.1657%" height="15" fill="rgb(245,15,52)" fg:x="540" fg:w="613"/><text x="47.0843%" y="655.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (612 samples, 53.08%)</title><rect x="46.9211%" y="629" width="53.0789%" height="15" fill="rgb(220,133,28)" fg:x="541" fg:w="612"/><text x="47.1711%" y="639.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return</text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::poll (5 samples, 0.43%)</title><rect x="99.5663%" y="613" width="0.4337%" height="15" fill="rgb(217,180,4)" fg:x="1148" fg:w="5"/><text x="99.8163%" y="623.50"></text></g><g><title>XPending (5 samples, 0.43%)</title><rect x="99.5663%" y="597" width="0.4337%" height="15" fill="rgb(251,24,1)" fg:x="1148" fg:w="5"/><text x="99.8163%" y="607.50"></text></g><g><title>_XEventsQueued (4 samples, 0.35%)</title><rect x="99.6531%" y="581" width="0.3469%" height="15" fill="rgb(212,185,49)" fg:x="1149" fg:w="4"/><text x="99.9031%" y="591.50"></text></g><g><title>_XSend (2 samples, 0.17%)</title><rect x="99.8265%" y="565" width="0.1735%" height="15" fill="rgb(215,175,22)" fg:x="1151" fg:w="2"/><text x="100.0765%" y="575.50"></text></g></svg></svg>